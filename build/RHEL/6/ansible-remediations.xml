<fix-content system="urn:xccdf:fix:script:sh" xmlns="http://checklists.nist.gov/xccdf/1.1">
  <fix-group id="ansible" system="urn:xccdf:fix:script:ansible" xmlns="http://checklists.nist.gov/xccdf/1.1">
    <fix rule="package_telnet_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure telnet is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - telnet
</fix>
    <fix rule="package_aide_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure aide is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - aide
</fix>
    <fix rule="package_ypbind_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure ypbind is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - ypbind
</fix>
    <fix rule="package_audit_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure audit is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - audit
</fix>
    <fix rule="package_rsh_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure rsh is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - rsh
</fix>
    <fix rule="package_rsh-server_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure rsh-server is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - rsh-server
</fix>
    <fix rule="kernel_module_bluetooth_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'bluetooth' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - bluetooth
</fix>
    <fix rule="kernel_module_usb-storage_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'usb-storage' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - usb-storage
</fix>
    <fix rule="package_talk_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure talk is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - talk
</fix>
    <fix rule="package_httpd_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure httpd is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - httpd
</fix>
    <fix rule="package_vsftpd_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure vsftpd is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - vsftpd
</fix>
    <fix rule="package_dovecot_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure dovecot is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - dovecot
</fix>
    <fix rule="package_samba-common_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure samba-common is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - samba-common
</fix>
    <fix rule="package_net-snmp_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure net-snmp is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - net-snmp
</fix>
    <fix rule="package_talk-server_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure talk-server is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - talk-server
</fix>
    <fix rule="file_permissions_library_dirs" complexity="high" disruption="medium" reboot="false" strategy="restrict">
- name: "Read list of world and group writable files in libraries directories"
  shell: "find /lib /lib64 /usr/lib /usr/lib64 -perm /022 -type f"
  register: world_writable_library_files
  changed_when: False
  failed_when: False

- name: "Disable world/group writability to library files"
  file:
    path: "{{item}}"
    mode: "go-w"
  with_items: "{{ world_writable_library_files.stdout_lines }}"
  when: world_writable_library_files.stdout_lines | length &gt; 0
</fix>
    <fix rule="file_permissions_binary_dirs" complexity="medium" disruption="medium" reboot="false" strategy="restrict">
- name: "Read list of world and group writable system executables"
  shell: "find /bin /usr/bin /usr/local/bin /sbin /usr/sbin /usr/local/sbin /usr/libexec -perm /022 -type f"
  register: world_writable_library_files
  changed_when: False
  failed_when: False

- name: "Remove world/group writability of system executables"
  file:
    path: "{{item}}"
    mode: "go-w"
  with_items: "{{ world_writable_library_files.stdout_lines }}"
  when: world_writable_library_files.stdout_lines | length &gt; 0
</fix>
    <fix rule="accounts_root_path_dirs_no_write" complexity="low" disruption="medium" reboot="false" strategy="restrict">
- name: "Fail if user is not root"
  fail:
    msg: 'Root account required to read root $PATH'
  when: ansible_user != "root"
  
- name: "Get root paths which are not symbolic links"
  shell: 'tr ":" "\n" &lt;&lt;&lt; "$PATH" | xargs -I% find % -maxdepth 0 -type d'
  changed_when: False
  failed_when: False
  register: root_paths
  when: ansible_user == "root"
    
- name: "Disable writability to root directories"
  file:
    path: "{{item}}"
    mode: "g-w,o-w"
  with_items: "{{ root_paths.stdout_lines }}"
  when: root_paths.stdout_lines is defined

</fix>
    <fix rule="rpm_verify_permissions" complexity="high" disruption="medium" reboot="false" strategy="restrict">
- name: "Read list of files with incorrect permissions"
  shell: "rpm -Va | grep '^.M' | sed -r 's;^.*\\s+(.+);\\1;g'"
  register: files_with_incorrect_permissions
  failed_when: False
  changed_when: False

- name: "Correct file permissions with RPM"
  shell: "rpm --setperms $(rpm -qf '{{item}}')"
  with_items: "{{ files_with_incorrect_permissions.stdout_lines }}"
  when: files_with_incorrect_permissions.stdout_lines | length &gt; 0

</fix>
    <fix rule="ensure_gpgcheck_globally_activated" complexity="low" disruption="medium" reboot="false" strategy="unknown">
- name: "Check existence of yum on Fedora"
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  when: ansible_distribution == "Fedora"

# We can have yum also in Fedora, but probably not forever
- name: Ensure GPG check is globally activated (yum)
  ini_file:
    dest: "{{item}}"
    section: main
    option: gpgcheck
    value: 1
    create: False
  with_items: "/etc/yum.conf"
  when: ansible_distribution == "RedHat" or yum_config_file.stat.exists

- name: Ensure GPG check is globally activated (dnf)
  ini_file:
    dest: "{{item}}"
    section: main
    option: gpgcheck
    value: 1
    create: False
  with_items: "/etc/dnf/dnf.conf"
  when: ansible_distribution == "Fedora"
</fix>
    <fix rule="file_ownership_binary_dirs" complexity="medium" disruption="medium" reboot="false" strategy="restrict">
- name: "Read list of system executables without root ownership"
  shell: "find /bin/ /usr/bin/ /usr/local/bin/ /sbin/ /usr/sbin/ /usr/local/sbin/ /usr/libexec \\! -user root"
  register: no_root_system_executables
  changed_when: False
  failed_when: False

- name: "Set ownership to root of system executables"
  file:
    path: "{{item}}"
    owner: "root"
  with_items: "{{ no_root_system_executables.stdout_lines }}"
  when: no_root_system_executables.stdout_lines | length &gt; 0
</fix>
    <fix rule="rpm_verify_hashes" complexity="high" disruption="medium" reboot="false" strategy="unknown">
- name: "Set fact: Package manager reinstall command (dnf)"
  set_fact:
    package_manager_reinstall_cmd: dnf reinstall -y
  when: ansible_distribution == "Fedora"

- name: "Set fact: Package manager reinstall command (yum)"
  set_fact:
    package_manager_reinstall_cmd: yum reinstall -y
  when: ansible_distribution == "RedHat"

- name: "Read files with incorrect hash"
  shell: "rpm -Va | grep -E '^..5.* /(bin|sbin|lib|lib64|usr)/' | sed -r 's;^.*\\s+(.+);\\1;g'"
  register: files_with_incorrect_hash
  changed_when: False
  when: package_manager_reinstall_cmd is defined

- name: "Reinstall packages of files with incorrect hash"
  shell: "{{package_manager_reinstall_cmd}} $(rpm -qf '{{item}}')"
  with_items: "{{ files_with_incorrect_hash.stdout_lines }}"
  when: package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines | length &gt; 0)
</fix>
    <fix rule="ensure_redhat_gpgkey_installed" complexity="medium" disruption="medium" reboot="false" strategy="restrict">
- name: "Read permission of GPG key directory"
  stat:
    path: /etc/pki/rpm-gpg/
  register: gpg_key_directory_permission

  # It should fail, if it doesn't find any fingerprints in file - maybe file was not parsed well.
- name: "Read signatures in GPG key"
  shell: "gpg --with-fingerprint '/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release' | grep 'Key fingerprint =' | tr -s ' ' | sed 's;.*= ;;g'"
  changed_when: False
  register: gpg_fingerprints

- name: "Set Fact: Valid fingerprints"
  set_fact:
     gpg_valid_fingerprints: ("567E 347A D004 4ADE 55BA 8A5F 199E 2F91 FD43 1D51" "43A6 E49C 4A38 F4BE 9ABF 2A53 4568 9C88 2FA6 58E0")
  
- name: "Import RedHat GPG key"
  rpm_key:
    state: present
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
  when:
    (gpg_key_directory_permission.stat.mode &lt;= '0755')
    and ({{ gpg_fingerprints.stdout_lines | difference(gpg_valid_fingerprints) }} | length == 0)
    and (gpg_fingerprints.stdout_lines | length &gt; 0)
    and (ansible_distribution == "RedHat")
</fix>
    <fix rule="no_empty_passwords" complexity="low" disruption="medium" reboot="false" strategy="configure">
- name: "Prevent Log In to Accounts With Empty Password"
  replace:
    dest: /etc/pam.d/system-auth
    regexp: 'nullok\s*'
    replace: ''
</fix>
    <fix rule="file_ownership_library_dirs" complexity="medium" disruption="medium" reboot="false" strategy="restrict">
- name: "Read list libraries without root ownership"
  shell: "find -L /usr/lib /usr/lib64 /lib /lib64 \\! -user root"
  register: libraries_not_owned_by_root
  changed_when: False
  failed_when: False

- name: "Set ownership of system libraries to root"
  file:
    path: "{{item}}"
    owner: "root"
  with_items: "{{ libraries_not_owned_by_root.stdout_lines }}"
  when: libraries_not_owned_by_root | length &gt; 0
</fix>
    <fix rule="package_esc_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure esc is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - esc
</fix>
    <fix rule="service_rpcidmapd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service rpcidmapd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - rpcidmapd

</fix>
    <fix rule="service_smartd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service smartd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - smartd

</fix>
    <fix rule="kernel_module_tipc_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'tipc' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - tipc
</fix>
    <fix rule="package_cronie_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure cronie is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - cronie
</fix>
    <fix rule="service_portreserve_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service portreserve
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - portreserve

</fix>
    <fix rule="package_openssh-server_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure openssh-server is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - openssh-server
</fix>
    <fix rule="file_permissions_etc_shadow" complexity="low" disruption="low" reboot="false" strategy="configure">- name: Ensure permission 0000 on /etc/shadow
  file:
    path="{{item}}"
    mode=0000
  with_items:
    - /etc/shadow
</fix>
    <fix rule="service_cgred_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service cgred
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - cgred

</fix>
    <fix rule="package_samba-common_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure samba-common is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - samba-common
</fix>
    <fix rule="service_iptables_enabled" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Enable service iptables
  service:
    name="{{item}}"
    enabled="yes"
    state="started"
  with_items:
    - iptables

</fix>
    <fix rule="service_rsyslog_enabled" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Enable service rsyslog
  service:
    name="{{item}}"
    enabled="yes"
    state="started"
  with_items:
    - rsyslog

</fix>
    <fix rule="package_pcsc-lite_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure pcsc-lite is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - pcsc-lite
</fix>
    <fix rule="service_autofs_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service autofs
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - autofs

</fix>
    <fix rule="package_mdadm_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure mdadm is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - mdadm
</fix>
    <fix rule="package_abrt_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure abrt is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - abrt
</fix>
    <fix rule="package_hal_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure hal is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - hal
</fix>
    <fix rule="service_ntpd_enabled" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Enable service ntpd
  service:
    name="{{item}}"
    enabled="yes"
    state="started"
  with_items:
    - ntpd

</fix>
    <fix rule="service_snmpd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service snmpd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - snmpd

</fix>
    <fix rule="package_vsftpd_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure vsftpd is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - vsftpd
</fix>
    <fix rule="service_quota_nld_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service quota_nld
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - quota_nld

</fix>
    <fix rule="service_saslauthd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service saslauthd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - saslauthd

</fix>
    <fix rule="service_bluetooth_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service bluetooth
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - bluetooth

</fix>
    <fix rule="package_cyrus-sasl_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure cyrus-sasl is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - cyrus-sasl
</fix>
    <fix rule="kernel_module_dccp_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'dccp' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - dccp
</fix>
    <fix rule="package_tftp_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure tftp is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - tftp
</fix>
    <fix rule="service_auditd_enabled" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Enable service auditd
  service:
    name="{{item}}"
    enabled="yes"
    state="started"
  with_items:
    - auditd

</fix>
    <fix rule="service_dhcpd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service dhcpd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - dhcpd

</fix>
    <fix rule="service_xinetd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service xinetd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - xinetd

</fix>
    <fix rule="package_sendmail_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure sendmail is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - sendmail
</fix>
    <fix rule="package_portreserve_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure portreserve is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - portreserve
</fix>
    <fix rule="package_avahi_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure avahi is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - avahi
</fix>
    <fix rule="package_setroubleshoot_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure setroubleshoot is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - setroubleshoot
</fix>
    <fix rule="service_qpidd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service qpidd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - qpidd

</fix>
    <fix rule="service_ntpdate_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service ntpdate
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - ntpdate

</fix>
    <fix rule="service_dovecot_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service dovecot
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - dovecot

</fix>
    <fix rule="service_postfix_enabled" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Enable service postfix
  service:
    name="{{item}}"
    enabled="yes"
    state="started"
  with_items:
    - postfix

</fix>
    <fix rule="service_rpcbind_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service rpcbind
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - rpcbind

</fix>
    <fix rule="service_certmonger_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service certmonger
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - certmonger

</fix>
    <fix rule="package_sysstat_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure sysstat is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - sysstat
</fix>
    <fix rule="kernel_module_udf_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'udf' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - udf
</fix>
    <fix rule="package_rpcbind_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure rpcbind is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - rpcbind
</fix>
    <fix rule="package_rhnsd_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure rhnsd is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - rhnsd
</fix>
    <fix rule="package_psacct_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure psacct is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - psacct
</fix>
    <fix rule="service_messagebus_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service messagebus
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - messagebus

</fix>
    <fix rule="service_restorecond_enabled" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Enable service restorecond
  service:
    name="{{item}}"
    enabled="yes"
    state="started"
  with_items:
    - restorecond

</fix>
    <fix rule="kernel_module_freevxfs_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'freevxfs' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - freevxfs
</fix>
    <fix rule="package_iptables_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure iptables is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - iptables
</fix>
    <fix rule="service_named_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service named
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - named

</fix>
    <fix rule="package_tftp-server_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure tftp-server is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - tftp-server
</fix>
    <fix rule="package_kexec-tools_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure kexec-tools is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - kexec-tools
</fix>
    <fix rule="service_ypbind_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service ypbind
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - ypbind

</fix>
    <fix rule="package_ypserv_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure ypserv is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - ypserv
</fix>
    <fix rule="package_xorg-x11-server-common_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure xorg-x11-server-common is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - xorg-x11-server-common
</fix>
    <fix rule="package_at_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure at is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - at
</fix>
    <fix rule="service_vsftpd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service vsftpd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - vsftpd

</fix>
    <fix rule="service_rdisc_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service rdisc
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - rdisc

</fix>
    <fix rule="package_autofs_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure autofs is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - autofs
</fix>
    <fix rule="kernel_module_cramfs_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'cramfs' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - cramfs
</fix>
    <fix rule="package_gdm_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure gdm is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - gdm
</fix>
    <fix rule="package_iputils_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure iputils is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - iputils
</fix>
    <fix rule="service_rpcsvcgssd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service rpcsvcgssd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - rpcsvcgssd

</fix>
    <fix rule="package_quota_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure quota is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - quota
</fix>
    <fix rule="package_subscription-manager_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure subscription-manager is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - subscription-manager
</fix>
    <fix rule="package_openldap-servers_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure openldap-servers is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - openldap-servers
</fix>
    <fix rule="service_nfslock_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service nfslock
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - nfslock

</fix>
    <fix rule="service_kdump_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service kdump
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - kdump

</fix>
    <fix rule="package_mcstrans_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure mcstrans is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - mcstrans
</fix>
    <fix rule="kernel_module_jffs2_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'jffs2' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - jffs2
</fix>
    <fix rule="service_oddjobd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service oddjobd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - oddjobd

</fix>
    <fix rule="package_smartmontools_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure smartmontools is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - smartmontools
</fix>
    <fix rule="package_policycoreutils_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure policycoreutils is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - policycoreutils
</fix>
    <fix rule="service_cgconfig_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service cgconfig
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - cgconfig

</fix>
    <fix rule="kernel_module_squashfs_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'squashfs' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - squashfs
</fix>
    <fix rule="kernel_module_hfs_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'hfs' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - hfs
</fix>
    <fix rule="service_smb_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service smb
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - smb

</fix>
    <fix rule="package_openswan_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure openswan is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - openswan
</fix>
    <fix rule="service_mdmonitor_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service mdmonitor
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - mdmonitor

</fix>
    <fix rule="service_rhnsd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service rhnsd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - rhnsd

</fix>
    <fix rule="package_cpuspeed_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure cpuspeed is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - cpuspeed
</fix>
    <fix rule="kernel_module_rds_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'rds' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - rds
</fix>
    <fix rule="service_tftp_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service tftp
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - tftp

</fix>
    <fix rule="service_irqbalance_enabled" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Enable service irqbalance
  service:
    name="{{item}}"
    enabled="yes"
    state="started"
  with_items:
    - irqbalance

</fix>
    <fix rule="service_haldaemon_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service haldaemon
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - haldaemon

</fix>
    <fix rule="package_samba_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure samba is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - samba
</fix>
    <fix rule="service_sshd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service sshd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - sshd

</fix>
    <fix rule="service_squid_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service squid
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - squid

</fix>
    <fix rule="service_acpid_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service acpid
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - acpid

</fix>
    <fix rule="package_libcgroup_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure libcgroup is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - libcgroup
</fix>
    <fix rule="service_pcscd_enabled" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Enable service pcscd
  service:
    name="{{item}}"
    enabled="yes"
    state="started"
  with_items:
    - pcscd

</fix>
    <fix rule="service_sysstat_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service sysstat
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - sysstat

</fix>
    <fix rule="package_dhcp_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure dhcp is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - dhcp
</fix>
    <fix rule="package_telnet-server_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure telnet-server is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - telnet-server
</fix>
    <fix rule="package_iptables-ipv6_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure iptables-ipv6 is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - iptables-ipv6
</fix>
    <fix rule="package_xinetd_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure xinetd is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - xinetd
</fix>
    <fix rule="service_psacct_enabled" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Enable service psacct
  service:
    name="{{item}}"
    enabled="yes"
    state="started"
  with_items:
    - psacct

</fix>
    <fix rule="service_avahi-daemon_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service avahi-daemon
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - avahi-daemon

</fix>
    <fix rule="service_rpcgssd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service rpcgssd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - rpcgssd

</fix>
    <fix rule="service_nfs_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service nfs
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - nfs

</fix>
    <fix rule="package_pam_pkcs11_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure pam_pkcs11 is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - pam_pkcs11
</fix>
    <fix rule="kernel_module_sctp_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'sctp' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - sctp
</fix>
    <fix rule="service_rhsmcertd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service rhsmcertd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - rhsmcertd

</fix>
    <fix rule="package_nfs-utils_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure nfs-utils is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - nfs-utils
</fix>
    <fix rule="package_dbus_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure dbus is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - dbus
</fix>
    <fix rule="package_screen_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure screen is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - screen
</fix>
    <fix rule="service_atd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service atd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - atd

</fix>
    <fix rule="service_cpuspeed_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service cpuspeed
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - cpuspeed

</fix>
    <fix rule="package_oddjob_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure oddjob is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - oddjob
</fix>
    <fix rule="service_ip6tables_enabled" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Enable service ip6tables
  service:
    name="{{item}}"
    enabled="yes"
    state="started"
  with_items:
    - ip6tables

</fix>
    <fix rule="service_crond_enabled" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Enable service crond
  service:
    name="{{item}}"
    enabled="yes"
    state="started"
  with_items:
    - crond

</fix>
    <fix rule="package_irqbalance_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure irqbalance is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - irqbalance
</fix>
    <fix rule="package_GConf2_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure GConf2 is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - GConf2
</fix>
    <fix rule="service_netconsole_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service netconsole
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - netconsole

</fix>
    <fix rule="package_cups_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure cups is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - cups
</fix>
    <fix rule="package_ntpdate_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure ntpdate is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - ntpdate
</fix>
    <fix rule="package_bind_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure bind is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - bind
</fix>
    <fix rule="package_ntp_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure ntp is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - ntp
</fix>
    <fix rule="package_postfix_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure postfix is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - postfix
</fix>
    <fix rule="service_cups_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service cups
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - cups

</fix>
    <fix rule="package_qpid-cpp-server_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure qpid-cpp-server is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - qpid-cpp-server
</fix>
    <fix rule="service_abrtd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service abrtd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - abrtd

</fix>
    <fix rule="package_rsyslog_installed" complexity="low" disruption="low" reboot="false" strategy="enable">- name: Ensure rsyslog is installed
  package:
    name="{{item}}"
    state=present
  with_items:
    - rsyslog
</fix>
    <fix rule="service_httpd_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service httpd
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - httpd

</fix>
    <fix rule="service_netfs_disabled" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Disable service netfs
  service:
    name="{{item}}"
    enabled="no"
    state="stopped"
  with_items:
    - netfs

</fix>
    <fix rule="kernel_module_hfsplus_disabled" complexity="low" disruption="medium" reboot="true" strategy="disable">- name: Ensure kernel module 'hfsplus' is disabled
  lineinfile:
    create=yes
    dest="/etc/modprobe.d/{{item}}.conf"
    regexp="{{item}}"
    line="install {{item}} /bin/true"
  with_items:
    - hfsplus
</fix>
    <fix rule="package_squid_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure squid is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - squid
</fix>
    <fix rule="package_pam_ldap_removed" complexity="low" disruption="low" reboot="false" strategy="disable">- name: Ensure pam_ldap is removed
  package:
    name="{{item}}"
    state=absent
  with_items:
    - pam_ldap
</fix>
  </fix-group>
</fix-content>
