<?xml version="1.0"?>
<Benchmark xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:dc="http://purl.org/dc/elements/1.1/" id="product-name" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 xccdf-1.1.4.xsd" style="SCAP_1.1" resolved="false" xml:lang="en-US">
  <status date="2011-12-20">draft</status>
  <title>Guide to the Secure Configuration of <product-name-macro/></title>
  <description>This guide presents a catalog of security-relevant
configuration settings for <product-name-macro/>. It is a rendering of
content structured in the eXtensible Configuration Checklist Description Format (XCCDF)
in order to support security automation.  The SCAP content is
is available in the <tt>scap-security-guide</tt> package which is developed at
<weblink-macro link="https://www.open-scap.org/security-policies/scap-security-guide"/>.
<br/>
<br/>
Providing system administrators with such guidance informs them how to securely
configure systems under their control in a variety of network roles. Policy
makers and baseline creators can use this catalog of settings, with its
associated references to higher-level security control catalogs, in order to
assist them in security baseline creation. This guide is a <i>catalog, not a
checklist,</i> and satisfaction of every item is not likely to be possible or
sensible in many operational scenarios. However, the XCCDF format enables
granular selection and adjustment of settings, and their association with OVAL
and OCIL content provides an automated checking capability. Transformations of
this document, and its associated automated checking content, are capable of
providing baselines that meet a diverse set of policy objectives. Some example
XCCDF <i>Profiles</i>, which are selections of items that form checklists and
can be used as baselines, are available with this guide. They can be
processed, in an automated fashion, with tools that support the Security
Content Automation Protocol (SCAP). The DISA STIG for <product-name-macro/>,
which provides required settings for US Department of Defense systems, is
one example of a baseline created from this guidance.
</description>
  <notice id="terms_of_use">Do not attempt to implement any of the settings in
this guide without first testing them in a non-operational environment. The
creators of this guidance assume no responsibility whatsoever for its use by
other parties, and makes no guarantees, expressed or implied, about its
quality, reliability, or any other characteristic.</notice>
  <front-matter xmlns:xccdf="http://checklists.nist.gov/xccdf/1.1">
    <p>
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="Layer_1" xml:space="preserve" height="140px" viewBox="30 100 330 150" width="350px" version="1.1" y="0px" x="0px" enable-background="new 30 100 330 150">
        <g fill="#3A3B3B">
          <path d="m197.1 150.3s-10.1-1.2-14.4-1.2c-7.2 0-11.0 2.6-11.0 8.3 0 6.6 3.5 7.7 12.3 9.6 10.1 2.3 14.5 4.7 14.5 13.6 0 11.2-6.1 15.6-16.1 15.6-6.0 0-16.0-1.6-16.0-1.6l0.6-4.7s9.9 1.3 15.1 1.3c7.2 0 10.8-3.1 10.8-10.2 0-5.7-3.0-7.3-11.2-8.9-10.4-2.3-15.7-4.7-15.7-14.4 0-9.8 6.4-13.6 16.3-13.6 6.0 0 15.3 1.5 15.3 1.5l-0.5 4.8z"/>
          <path d="m238.7 194.6c-3.6 0.7-9.1 1.5-13.9 1.5-15.1 0-18.5-9.2-18.5-25.9 0-17.1 3.3-26.1 18.5-26.1 5.2 0 10.7 1.0 13.9 1.6l-0.2 4.7c-3.3-0.6-9.2-1.3-13.1-1.3-11.2 0-13.2 6.7-13.2 21.1 0 14.1 1.8 20.8 13.4 20.8 4.1 0 9.5-0.7 13.0-1.3l0.2 4.8z"/>
          <path d="m257.5 144.9h12.3l13.9 50.5h-5.6l-3.7-13.0h-21.6l-3.7 13.0h-5.5l13.9-50.5zm-3.4 32.5h19.1l-7.7-27.7h-3.8l-7.7 27.7z"/>
          <path d="m297.2 178.4v17.0h-5.6v-50.5h18.5c11.0 0 16.1 5.3 16.1 16.3 0 11.0-5.1 17.2-16.1 17.2h-12.9zm12.8-5.0c7.4 0 10.4-4.5 10.4-12.3 0-7.7-3.1-11.3-10.4-11.3h-12.8v23.6h12.8z"/>
        </g>
        <g fill="#676767">
          <path d="m176.8 211.2s-2.8-0.3-4.0-0.3c-1.5 0-2.2 0.5-2.2 1.4 0 0.9 0.5 1.2 2.8 1.9 2.9 0.9 3.8 1.8 3.8 4.0 0 3.0-2.0 4.3-4.7 4.3-1.9 0-4.5-0.6-4.5-0.6l0.3-2.1s2.7 0.4 4.1 0.4c1.5 0 2.1-0.7 2.1-1.8 0-0.8-0.5-1.2-2.4-1.8-3.1-0.9-4.2-1.9-4.2-4.1 0-2.8 1.9-4.0 4.6-4.0 1.8 0 4.5 0.5 4.5 0.5l-0.2 2.2z"/>
          <path d="m180.6 208.7h8.8v2.4h-6.0v3.2h4.8v2.4h-4.9v3.3h6.0v2.4h-8.8v-13.6z"/>
          <path d="m201.2 222.1c-0.9 0.2-2.7 0.5-4.0 0.5-4.2 0-5.2-2.3-5.2-7.0 0-5.2 1.2-7.0 5.2-7.0 1.4 0 3.1 0.3 4.0 0.5l-0.1 2.2c-0.9-0.1-2.6-0.3-3.5-0.3-2.1 0-2.8 0.7-2.8 4.6 0 3.7 0.5 4.6 2.8 4.6 0.9 0 2.6-0.2 3.4-0.3l0.1 2.3z"/>
          <path d="m209.5 220.2c1.6 0 2.4-0.8 2.4-2.4v-9.1h2.8v9.0c0 3.4-1.8 4.8-5.2 4.8-3.4 0-5.2-1.4-5.2-4.8v-9.0h2.8v9.1c0 1.6 0.8 2.4 2.4 2.4z"/>
          <path d="m221.3 217.8v4.6h-2.8v-13.6h5.3c3.1 0 4.8 1.4 4.8 4.5 0 1.9-0.8 3.1-2.0 3.9l1.9 5.2h-3.0l-1.6-4.6h-2.7zm2.5-6.7h-2.5v4.3h2.6c1.4 0 1.9-1.0 1.9-2.2 0-1.3-0.7-2.2-2.0-2.2z"/>
          <path d="m231.9 208.7h2.8v13.6h-2.8v-13.6z"/>
          <path d="m237.4 208.7h10.0v2.4h-3.6v11.2h-2.8v-11.2h-3.6v-2.4z"/>
          <path d="m255.7 222.3h-2.8v-5.5l-4.2-8.1h3.1l2.5 5.4 2.5-5.4h3.1l-4.2 8.1v5.5z"/>
          <path d="m273.4 215.1h4.0v7.1s-2.9 0.5-4.6 0.5c-4.4 0-5.6-2.5-5.6-7.0 0-5.0 1.4-7.0 5.5-7.0 2.1 0 4.7 0.6 4.7 0.6l-0.1 2.1s-2.4-0.3-4.2-0.3c-2.4 0-3.1 0.8-3.1 4.6 0 3.6 0.5 4.6 3.0 4.6 0.8 0 1.7-0.1 1.7-0.1v-2.6h-1.2v-2.4z"/>
          <path d="m286 220.2c1.6 0 2.4-0.8 2.4-2.4v-9.1h2.8v9.0c0 3.4-1.8 4.8-5.2 4.8s-5.2-1.4-5.2-4.8v-9.0h2.8v9.1c0 1.6 0.8 2.4 2.4 2.4z"/>
          <path d="m295.0 208.7h2.8v13.6h-2.8v-13.6z"/>
          <path d="m301.8 222.3v-13.6h4.6c4.7 0 5.8 2.0 5.6 6.5 0 4.6-0.9 7.1-5.8 7.1h-4.6zm4.6-11.2h-1.8v8.8h1.8c2.7 0 2.9-1.6 2.9-4.7 0-3.0-0.3-4.1-3.0-4.1z"/>
          <path d="m315.5 208.7h8.8v2.4h-6.0v3.2h4.8v2.4h-4.8v3.3h6.0v2.4h-8.8v-13.6z"/>
        </g>
        <path d="m116.0 204.9h-2.8c-1.5 0-2.8 1.2-2.8 2.7v19.2c0 1.5 1.3 2.7 2.8 2.7h27.9c1.5 0 2.8-1.2 2.8-2.7v-19.2c0-1.5-1.3-2.7-2.8-2.7h-2.8v-8.2c0-6.1-5.0-11.0-11.2-11.0-6.2 0-11.2 4.9-11.2 11.0v8.2zm5.6-8.2c0-3.0 2.5-5.5 5.6-5.4 3.1 0 5.6 2.4 5.6 5.5v8.2h-11.2v-8.2z" fill="#6D0B2B"/>
        <g fill="#AD1D3F">
          <path d="m106.4 214.7c-16.4 11.4-37.5 7.8-50.0-3.4l11.9-11.7c2.3-1.9 3.4-5.4 1.2-8.8-0.1-0.1-6.7-11.0 2.3-19.8 7.3-7.2 17.8-5.8 23.3-0.3 3.2 3.1 4.9 7.1 4.9 11.4v0.1c0 4.3-1.8 8.5-5.1 11.7-4.0 3.9-9.6 5.4-15.4 4.1-2.1-0.5-4.3 0.8-4.8 2.9-0.5 2.1 0.8 4.2 2.9 4.7 8.4 2.0 16.9-0.3 22.8-6.1 4.9-4.8 7.5-10.9 7.4-17.4-0.0-6.3-2.6-12.3-7.3-16.8-8.2-8.1-23.8-10.3-34.5 0.3-10.7 10.5-6.6 23.8-3.7 28.8l-12.8 12.6c-2.9 2.9-2.3 6.6-0.2 8.7 15.4 15.2 38.7 17.9 56.9 8.2l-0.0-9.1z"/>
          <path d="m43.9 188.4c-1.1-7.5-1.1-21.8 11.2-33.9 8.0-7.9 18.5-12.0 29.5-11.7 10.2 0.3 20.1 4.5 27.1 11.4 7.6 7.4 11.8 17.3 11.9 27.8v0.1c1.16-0.3 2.4-0.4 3.6-0.4 1.5 0 2.9 0.2 4.3 0.6 0-0.1 0.0-0.2 0.0-0.3-0.1-12.5-5.2-24.3-14.2-33.2-8.4-8.3-20.2-13.3-32.4-13.7-13.2-0.5-25.8 4.5-35.4 14.0-9.1 8.9-14.0 20.8-14.0 33.3 0 2.4 0.2 4.8 0.5 7.2 0.6 4.0 1.8 8.1 3.7 12.2 0.9 2.0 3.2 2.8 5.2 1.9 2.0-0.9 2.9-3.1 2.0-5.1-1.5-3.3-2.6-6.8-3.1-10.1z"/>
        </g>
        <circle cy="218.49" cx="127.26" r="3.233" fill="#fff"/>
      </svg>
    </p>
  </front-matter>
  <rear-matter>Red Hat and Red Hat Enterprise Linux are either registered
trademarks or trademarks of Red Hat, Inc. in the United States and other
countries. All other names are registered trademarks or trademarks of their
respective companies.</rear-matter>
  <platform-cpes-macro/>
  <version>0.9</version>
  <metadata/>
  <Profile id="standard">
    <title>Standard System Security Profile</title>
    <description>This profile contains rules to ensure standard security baseline of a Fedora system.
Regardless of your system's workload all of these checks should pass.</description>
    <select idref="ensure_gpgcheck_globally_activated" selected="true"/>
    <select idref="rpm_verify_permissions" selected="true"/>
    <select idref="rpm_verify_hashes" selected="true"/>
    <select idref="no_empty_passwords" selected="true"/>
    <select idref="accounts_root_path_dirs_no_write" selected="true"/>
    <select idref="file_permissions_library_dirs" selected="true"/>
    <select idref="file_ownership_library_dirs" selected="true"/>
    <select idref="file_permissions_binary_dirs" selected="true"/>
    <select idref="file_ownership_binary_dirs" selected="true"/>
    <!-- The following rules currently returns 'notapplicable' on Fedora container -->
    <!-- Investigate why, fix the issues, and re-enable back once fixed -->
    <!-- <select idref="accounts_password_all_shadowed" selected="true"/> -->
    <!-- <select idref="root_path_no_dot" selected="true"/> -->
    <!-- <select idref="mount_option_dev_shm_nodev" selected="true" /> -->
    <!-- <select idref="mount_option_dev_shm_nosuid" selected="true" /> -->
  </Profile>
  <Profile id="common">
    <title>Common Profile for General-Purpose Fedora Systems</title>
    <description>This profile contains items common to general-purpose Fedora installations.</description>
    <select idref="disable_prelink" selected="true"/>
    <select idref="aide_build_database" selected="true"/>
    <!-- Installing and Maintaining Software section rules -->
    <!-- Updating Software section rules -->
    <select idref="ensure_gpgcheck_globally_activated" selected="true"/>
    <select idref="ensure_gpgcheck_never_disabled" selected="true"/>
    <select idref="rpm_verify_permissions" selected="true"/>
    <select idref="rpm_verify_hashes" selected="true"/>
    <!-- File Permissions And Masks -->
    <!-- Verify File Permissions Within Some Important Directories -->
    <select idref="file_permissions_library_dirs" selected="true"/>
    <select idref="file_ownership_library_dirs" selected="true"/>
    <select idref="file_permissions_binary_dirs" selected="true"/>
    <select idref="file_ownership_binary_dirs" selected="true"/>
    <!-- Account and Access Control section rules -->
    <!-- Protect Accounts by Restricting Password-Based Login section rules -->
    <!-- Restrict Root Logins section rules -->
    <select idref="no_direct_root_logins" selected="true"/>
    <select idref="securetty_root_login_console_only" selected="true"/>
    <select idref="restrict_serial_port_logins" selected="true"/>
    <!-- <select idref="no_root_webbrowsing" selected="true"/> -->
    <!-- <select idref="no_shelllogin_for_systemaccounts" selected="true"/> -->
    <select idref="accounts_no_uid_except_zero" selected="true"/>
    <!-- <select idref="root_path_default" selected="true"/> -->
    <!-- Verify Proper Storage and Existence of Password Hashes section rules -->
    <select idref="no_empty_passwords" selected="true"/>
    <select idref="display_login_attempts" selected="true"/>
    <select idref="accounts_password_all_shadowed" selected="true"/>
    <select idref="gid_passwd_group_same" selected="true"/>
    <select idref="no_netrc_files" selected="true"/>
    <!-- Set Password Expiration Parameters section rules -->
    <refine-value idref="var_accounts_password_minlen_login_defs" selector="12"/>
    <select idref="accounts_password_minlen_login_defs" selected="true"/>
    <refine-value idref="var_accounts_minimum_age_login_defs" selector="7"/>
    <select idref="accounts_minimum_age_login_defs" selected="true"/>
    <refine-value idref="var_accounts_maximum_age_login_defs" selector="90"/>
    <select idref="accounts_maximum_age_login_defs" selected="true"/>
    <refine-value idref="var_accounts_password_warn_age_login_defs" selector="7"/>
    <select idref="accounts_password_warn_age_login_defs" selected="true"/>
    <!-- Set Account Expiration Parameters section rules -->
    <select idref="account_unique_name" selected="true"/>
    <!-- Secure Session Configuration Files for Login Accounts -->
    <!-- Ensure that No Dangerous Directories Exist in Root's Path -->
    <select idref="accounts_root_path_dirs_no_write" selected="true"/>
    <!-- Network Configuration and Firewalls section rules -->
    <select idref="service_firewalld_enabled" selected="true"/>
    <select idref="set_firewalld_default_zone" selected="true"/>
    <!-- System Accounting with Auditd section rules -->
    <select idref="bootloader_audit_argument" selected="true"/>
    <refine-value idref="var_auditd_num_logs" selector="5"/>
    <select idref="auditd_data_retention_num_logs" selected="true"/>
    <select idref="auditd_data_retention_max_log_file" selected="true"/>
    <select idref="auditd_data_retention_max_log_file_action" selected="true"/>
    <select idref="auditd_data_retention_space_left_action" selected="true"/>
    <select idref="auditd_data_retention_admin_space_left_action" selected="true"/>
    <select idref="auditd_data_retention_action_mail_acct" selected="true"/>
    <select idref="auditd_audispd_syslog_plugin_activated" selected="true"/>
    <select idref="file_ownership_var_log_audit" selected="true"/>
    <select idref="audit_rules_time_adjtimex" selected="true"/>
    <select idref="audit_rules_time_settimeofday" selected="true"/>
    <select idref="audit_rules_time_stime" selected="true"/>
    <select idref="audit_rules_time_clock_settime" selected="true"/>
    <select idref="audit_rules_time_watch_localtime" selected="true"/>
    <select idref="audit_rules_usergroup_modification" selected="true"/>
    <select idref="audit_rules_networkconfig_modification" selected="true"/>
    <select idref="audit_rules_mac_modification" selected="true"/>
    <!-- Audit DAC modifications -->
    <select idref="audit_rules_dac_modification_chmod" selected="true"/>
    <select idref="audit_rules_dac_modification_chown" selected="true"/>
    <select idref="audit_rules_dac_modification_fchmod" selected="true"/>
    <select idref="audit_rules_dac_modification_fchmodat" selected="true"/>
    <select idref="audit_rules_dac_modification_fchown" selected="true"/>
    <select idref="audit_rules_dac_modification_fchownat" selected="true"/>
    <select idref="audit_rules_dac_modification_fremovexattr" selected="true"/>
    <select idref="audit_rules_dac_modification_fsetxattr" selected="true"/>
    <select idref="audit_rules_dac_modification_lchown" selected="true"/>
    <select idref="audit_rules_dac_modification_lremovexattr" selected="true"/>
    <select idref="audit_rules_dac_modification_lsetxattr" selected="true"/>
    <select idref="audit_rules_dac_modification_removexattr" selected="true"/>
    <select idref="audit_rules_dac_modification_setxattr" selected="true"/>
    <select idref="audit_rules_login_events" selected="true"/>
    <select idref="audit_rules_session_events" selected="true"/>
    <select idref="audit_rules_unsuccessful_file_modification" selected="true"/>
    <select idref="audit_rules_privileged_commands" selected="true"/>
    <select idref="audit_rules_media_export" selected="true"/>
    <select idref="audit_rules_file_deletion_events" selected="true"/>
    <select idref="audit_rules_sysadmin_actions" selected="true"/>
    <select idref="audit_rules_kernel_module_loading" selected="true"/>
    <select idref="audit_rules_immutable" selected="true"/>
    <!-- Configure USB interfaces -->
    <select idref="bootloader_nousb_argument" selected="true"/>
    <!-- Services -->
    <!-- Network Time Protocol -->
    <select idref="service_chronyd_enabled" selected="true"/>
    <select idref="chronyd_specify_remote_server" selected="true"/>
    <select idref="service_auditd_enabled" selected="true"/>
    <!-- SSH Server -->
    <select idref="sshd_disable_root_login" selected="true"/>
    <select idref="sshd_disable_empty_passwords" selected="true"/>
    <refine-value idref="sshd_idle_timeout_value" selector="5_minutes"/>
    <select idref="sshd_set_idle_timeout" selected="true"/>
    <select idref="sshd_set_keepalive" selected="true"/>
  </Profile>
  <Value id="conditional_clause" type="string" operator="equals">
    <title>A conditional clause for check statements.</title>
    <description>A conditional clause for check statements.</description>
    <value>This is a placeholder.</value>
  </Value>
  <Group id="remediation_functions">
    <title>Remediation functions used by the SCAP Security Guide Project</title>
    <description>XCCDF form of the various remediation functions as used by
remediation scripts from the SCAP Security Guide Project</description>
    <Value id="function_fix_audit_syscall_rule" type="string" operator="equals" interactive="0" hidden="true" prohibitChanges="true">
      <title>Remediation function to fix syscall audit rule for given system call</title>
      <description>Function to fix syscall audit rule for given system call. It is
based on example audit syscall rule definitions as outlined in
/usr/share/doc/audit-2.3.7/stig.rules file provided with the audit package. It
will combine multiple system calls belonging to the same syscall group into one
audit rule (rather than to create audit rule per different system call) to
avoid audit infrastructure performance penalty in the case of
'one-audit-rule-definition-per-one-system-call'. See:

	https://www.redhat.com/archives/linux-audit/2014-November/msg00009.html

for further details.

Expects five arguments (each of them is required) in the form of:
  * audit tool                          tool used to load audit rules,
                                        either 'auditctl', or 'augenrules
  * audit rules' pattern                audit rule skeleton for same syscall
  * syscall group                       greatest common string this rule shares
                                        with other rules from the same group
  * architecture                        architecture this rule is intended for
  * full form of new rule to add        expected full form of audit rule as to
                                        be added into audit.rules file

Note: The 2-th up to 4-th arguments are used to determine how many existing
audit rules will be inspected for resemblance with the new audit rule
(5-th argument) the function is going to add. The rule's similarity check
is performed to optimize audit.rules definition (merge syscalls of the same
group into one rule) to avoid the "single-syscall-per-audit-rule" performance
penalty.

Example call:

  PATTERN="-a always,exit -F arch=$ARCH -S .* -F auid&gt;=500 -F auid!=4294967295 -k delete"
  # Use escaped BRE regex to specify rule group
  GROUP="\(rmdir\|unlink\|rename\)"
  FULL_RULE="-a always,exit -F arch=$ARCH -S rmdir -S unlink -S unlinkat -S rename -S renameat -F auid&gt;=500 -F auid!=4294967295 -k delete"
  fix_audit_syscall_rule "auditctl" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
</description>
      <value selector="">
function fix_audit_syscall_rule {

# Load function arguments into local variables
local tool="$1"
local pattern="$2"
local group="$3"
local arch="$4"
local full_rule="$5"

# Check sanity of the input
if [ $# -ne "5" ]
then
        echo "Usage: fix_audit_syscall_rule 'tool' 'pattern' 'group' 'arch' 'full rule'"
        echo "Aborting."
        exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
#
# -----------------------------------------------------------------------------------------
#  Tool used to load audit rules | Rule already defined  |  Audit rules file to inspect    |
# -----------------------------------------------------------------------------------------
#        auditctl                |     Doesn't matter    |  /etc/audit/audit.rules         |
# -----------------------------------------------------------------------------------------
#        augenrules              |          Yes          |  /etc/audit/rules.d/*.rules     |
#        augenrules              |          No           |  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
#
declare -a files_to_inspect

# First check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
        echo "Unknown audit rules loading tool: $1. Aborting."
        echo "Use either 'auditctl' or 'augenrules'!"
        exit 1
# If audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# file to the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
        files_to_inspect=("${files_to_inspect[@]}" '/etc/audit/audit.rules' )
# If audit tool is 'augenrules', then check if the audit rule is defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to the list for inspection
# If rule isn't defined yet, add '/etc/audit/rules.d/$key.rules' to the list for inspection
elif [ "$tool" == 'augenrules' ]
then
        # Extract audit $key from audit rule so we can use it later
        key=$(expr "$full_rule" : '.*-k[[:space:]]\([^[:space:]]\+\)')
        # Check if particular audit rule is already defined
        IFS=$'\n' matches=($(sed -s -n -e "/${pattern}/!d" -e "/${arch}/!d" -e "/${group}/!d;F" /etc/audit/rules.d/*.rules))
        # Reset IFS back to default
        unset $IFS
        for match in "${matches[@]}"
        do
                files_to_inspect=("${files_to_inspect[@]}" "${match}")
        done
        # Case when particular rule isn't defined in /etc/audit/rules.d/*.rules yet
        if [ ${#files_to_inspect[@]} -eq "0" ]
        then
                files_to_inspect="/etc/audit/rules.d/$key.rules"
                if [ ! -e "$files_to_inspect" ]
                then
                        touch "$files_to_inspect"
                        chmod 0640 "$files_to_inspect"
                fi
        fi
fi

#
# Indicator that we want to append $full_rule into $audit_file by default
local append_expected_rule=0

for audit_file in "${files_to_inspect[@]}"
do

        # Filter existing $audit_file rules' definitions to select those that:
        # * follow the rule pattern, and
        # * meet the hardware architecture requirement, and
        # * are current syscall group specific
        IFS=$'\n' existing_rules=($(sed -e "/${pattern}/!d" -e "/${arch}/!d" -e "/${group}/!d"  "$audit_file"))
        # Reset IFS back to default
        unset $IFS

        # Process rules found case-by-case
        for rule in "${existing_rules[@]}"
        do
                # Found rule is for same arch &amp; key, but differs (e.g. in count of -S arguments)
                if [ "${rule}" != "${full_rule}" ]
                then
                        # If so, isolate just '(-S \w)+' substring of that rule
                        rule_syscalls=$(echo $rule | grep -o -P '(-S \w+ )+')
                        # Check if list of '-S syscall' arguments of that rule is subset
                        # of '-S syscall' list of expected $full_rule
                        if grep -q -- "$rule_syscalls" &lt;&lt;&lt; "$full_rule"
                        then
                                # Rule is covered (i.e. the list of -S syscalls for this rule is
                                # subset of -S syscalls of $full_rule =&gt; existing rule can be deleted
                                # Thus delete the rule from audit.rules &amp; our array
                                sed -i -e "/$rule/d" "$audit_file"
                                existing_rules=("${existing_rules[@]//$rule/}")
                        else
                                # Rule isn't covered by $full_rule - it besides -S syscall arguments
                                # for this group contains also -S syscall arguments for other syscall
                                # group. Example: '-S lchown -S fchmod -S fchownat' =&gt; group='chown'
                                # since 'lchown' &amp; 'fchownat' share 'chown' substring
                                # Therefore:
                                # * 1) delete the original rule from audit.rules
                                # (original '-S lchown -S fchmod -S fchownat' rule would be deleted)
                                # * 2) delete the -S syscall arguments for this syscall group, but
                                # keep those not belonging to this syscall group
                                # (original '-S lchown -S fchmod -S fchownat' would become '-S fchmod'
                                # * 3) append the modified (filtered) rule again into audit.rules
                                # if the same rule not already present
                                #
                                # 1) Delete the original rule
                                sed -i -e "/$rule/d" "$audit_file"
                                # 2) Delete syscalls for this group, but keep those from other groups
                                # Convert current rule syscall's string into array splitting by '-S' delimiter
                                IFS=$'-S' read -a rule_syscalls_as_array &lt;&lt;&lt; "$rule_syscalls"
                                # Reset IFS back to default
                                unset $IFS
                                # Declare new empty string to hold '-S syscall' arguments from other groups
                                new_syscalls_for_rule=''
                                # Walk through existing '-S syscall' arguments
                                for syscall_arg in "${rule_syscalls_as_array[@]}"
                                do
                                        # Skip empty $syscall_arg values
                                        if [ "$syscall_arg" == '' ]
                                        then
                                                continue
                                        fi
                                        # If the '-S syscall' doesn't belong to current group add it to the new list
                                        # (together with adding '-S' delimiter back for each of such item found)
                                        if grep -q -v -- "$group" &lt;&lt;&lt; "$syscall_arg"
                                        then
                                                new_syscalls_for_rule="$new_syscalls_for_rule -S $syscall_arg"
                                        fi
                                done
                                # Replace original '-S syscall' list with the new one for this rule
                                updated_rule=${rule//$rule_syscalls/$new_syscalls_for_rule}
                                # Squeeze repeated whitespace characters in rule definition (if any) into one
                                updated_rule=$(echo "$updated_rule" | tr -s '[:space:]')
                                # 3) Append the modified / filtered rule again into audit.rules
                                #    (but only in case it's not present yet to prevent duplicate definitions)
                                if ! grep -q -- "$updated_rule" "$audit_file"
                                then
                                        echo "$updated_rule" &gt;&gt; "$audit_file"
                                fi
                        fi
                else
                        # $audit_file already contains the expected rule form for this
                        # architecture &amp; key =&gt; don't insert it second time
                        append_expected_rule=1
                fi
        done

        # We deleted all rules that were subset of the expected one for this arch &amp; key.
        # Also isolated rules containing system calls not from this system calls group.
        # Now append the expected rule if it's not present in $audit_file yet
        if [[ ${append_expected_rule} -eq "0" ]]
        then
                echo "$full_rule" &gt;&gt; "$audit_file"
        fi
done

}
</value>
    </Value>
    <Value id="function_fix_audit_watch_rule" type="string" operator="equals" interactive="0" hidden="true" prohibitChanges="true">
      <title>Remediation function to fix audit file system object watch rule for given path</title>
      <description>Function to fix audit file system object watch rule for given path:
  * if rule exists, also verifies the -w bits match the requirements
  * if rule doesn't exist yet, appends expected rule form to $files_to_inspect
    audit rules file, depending on the tool which was used to load audit rules

Expects four arguments (each of them is required) in the form of:
  * audit tool                          tool used to load audit rules,
                                        either 'auditctl', or 'augenrules'
  * path                                value of -w audit rule's argument
  * required access bits                value of -p audit rule's argument
  * key                                 value of -k audit rule's argument

Example call:

  fix_audit_watch_rule "auditctl" "/etc/localtime" "wa" "audit_time_rules"
</description>
      <value selector="">
function fix_audit_watch_rule {

# Load function arguments into local variables
local tool="$1"
local path="$2"
local required_access_bits="$3"
local key="$4"

# Check sanity of the input
if [ $# -ne "4" ]
then
        echo "Usage: fix_audit_watch_rule 'tool' 'path' 'bits' 'key'"
        echo "Aborting."
        exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
#
# -----------------------------------------------------------------------------------------
# Tool used to load audit rules | Rule already defined  |  Audit rules file to inspect    |
# -----------------------------------------------------------------------------------------
#       auditctl                |     Doesn't matter    |  /etc/audit/audit.rules         |
# -----------------------------------------------------------------------------------------
#       augenrules              |          Yes          |  /etc/audit/rules.d/*.rules     |
#       augenrules              |          No           |  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
declare -a files_to_inspect

# Check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
        echo "Unknown audit rules loading tool: $1. Aborting."
        echo "Use either 'auditctl' or 'augenrules'!"
        exit 1
# If the audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# into the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
        files_to_inspect=("${files_to_inspect[@]}" '/etc/audit/audit.rules')
# If the audit is 'augenrules', then check if rule is already defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to list of files for inspection.
# If rule isn't defined, add '/etc/audit/rules.d/$key.rules' to list of files for inspection.
elif [ "$tool" == 'augenrules' ]
then
        # Case when particular audit rule is already defined in some of /etc/audit/rules.d/*.rules file
        # Get pair -- filepath : matching_row into @matches array
        IFS=$'\n' matches=($(grep -P "[\s]*-w[\s]+$path" /etc/audit/rules.d/*.rules))
        # Reset IFS back to default
        unset $IFS
        # For each of the matched entries
        for match in "${matches[@]}"
        do
                # Extract filepath from the match
                rulesd_audit_file=$(echo $match | cut -f1 -d ':')
                # Append that path into list of files for inspection
                files_to_inspect=("${files_to_inspect[@]}" "$rulesd_audit_file")
        done
        # Case when particular audit rule isn't defined yet
        if [ ${#files_to_inspect[@]} -eq "0" ]
        then
                # Append '/etc/audit/rules.d/$key.rules' into list of files for inspection
                files_to_inspect="/etc/audit/rules.d/$key.rules"
                # If the $key.rules file doesn't exist yet, create it with correct permissions
                if [ ! -e "$files_to_inspect" ]
                then
                        touch "$files_to_inspect"
                        chmod 0640 "$files_to_inspect"
                fi
        fi
fi

# Finally perform the inspection and possible subsequent audit rule
# correction for each of the files previously identified for inspection
for audit_rules_file in "${files_to_inspect[@]}"
do

        # Check if audit watch file system object rule for given path already present
        if grep -q -P -- "[\s]*-w[\s]+$path" "$audit_rules_file"
        then
                # Rule is found =&gt; verify yet if existing rule definition contains
                # all of the required access type bits

                # Escape slashes in path for use in sed pattern below
                local esc_path=${path//$'/'/$'\/'}
                # Define BRE whitespace class shortcut
                local sp="[[:space:]]"
                # Extract current permission access types (e.g. -p [r|w|x|a] values) from audit rule
                current_access_bits=$(sed -ne "s/$sp*-w$sp\+$esc_path$sp\+-p$sp\+\([rxwa]\{1,4\}\).*/\1/p" "$audit_rules_file")
                # Split required access bits string into characters array
                # (to check bit's presence for one bit at a time)
                for access_bit in $(echo "$required_access_bits" | grep -o .)
                do
                        # For each from the required access bits (e.g. 'w', 'a') check
                        # if they are already present in current access bits for rule.
                        # If not, append that bit at the end
                        if ! grep -q "$access_bit" &lt;&lt;&lt; "$current_access_bits"
                        then
                                # Concatenate the existing mask with the missing bit
                                current_access_bits="$current_access_bits$access_bit"
                        fi
                done
                # Propagate the updated rule's access bits (original + the required
                # ones) back into the /etc/audit/audit.rules file for that rule
                sed -i "s/\($sp*-w$sp\+$esc_path$sp\+-p$sp\+\)\([rxwa]\{1,4\}\)\(.*\)/\1$current_access_bits\3/" "$audit_rules_file"
        else
                # Rule isn't present yet. Append it at the end of $audit_rules_file file
                # with proper key

                echo "-w $path -p $required_access_bits -k $key" &gt;&gt; "$audit_rules_file"
        fi
done
}
</value>
    </Value>
    <Value id="function_package_command" type="string" operator="equals" interactive="0" hidden="true" prohibitChanges="true">
      <title>Remediation function to to install or uninstall packages on RHEL and Fedora systems</title>
      <description>Function to install or uninstall packages on RHEL and Fedora systems.

Example Call(s):

  package_command install aide
  package_command remove telnet-server
</description>
      <value selector="">
function package_command {

# Load function arguments into local variables
local package_operation=$1
local package=$2

# Check sanity of the input
if [ $# -ne "2" ]
then
  echo "Usage: package_command 'install/uninstall' 'rpm_package_name"
  echo "Aborting."
  exit 1
fi

# If dnf is installed, use dnf; otherwise, use yum
if [ -f "/usr/bin/dnf" ] ; then
  install_util="/usr/bin/dnf"
else
  install_util="/usr/bin/yum"
fi

if [ "$package_operation" != 'remove' ] ; then
  # If the rpm is not installed, install the rpm
  if ! /bin/rpm -q --quiet $package; then
    $install_util -y $package_operation $package
  fi
else
  # If the rpm is installed, uninstall the rpm
  if /bin/rpm -q --quiet $package; then
    $install_util -y $package_operation $package
  fi
fi

}
</value>
    </Value>
    <Value id="function_service_command" type="string" operator="equals" interactive="0" hidden="true" prohibitChanges="true">
      <title>Remediation function to enable/disable and start/stop services on RHEL
and Fedora systems</title>
      <description>Function to enable/disable and start/stop services on RHEL and
Fedora systems.

Example Call(s):

  service_command enable bluetooth
  service_command disable bluetooth.service

  Using xinetd:
  service_command disable rsh.socket xinetd=rsh
</description>
      <value selector="">
function service_command {

# Load function arguments into local variables
local service_state=$1
local service=$2
local xinetd=$(echo $3 | cut -d'=' -f2)

# Check sanity of the input
if [ $# -lt "2" ]
then
  echo "Usage: service_command 'enable/disable' 'service_name.service'"
  echo
  echo "To enable or disable xinetd services add \'xinetd=service_name\'"
  echo "as the last argument"
  echo "Aborting."
  exit 1
fi

# If systemctl is installed, use systemctl command; otherwise, use the service/chkconfig commands
if [ -f "/usr/bin/systemctl" ] ; then
  service_util="/usr/bin/systemctl"
else
  service_util="/sbin/service"
  chkconfig_util="/sbin/chkconfig"
fi

# If disable is not specified in arg1, set variables to enable services.
# Otherwise, variables are to be set to disable services.
if [ "$service_state" != 'disable' ] ; then
  service_state="enable"
  service_operation="start"
  chkconfig_state="on"
else
  service_state="disable"
  service_operation="stop"
  chkconfig_state="off"
fi

# If chkconfig_util is not empty, use chkconfig/service commands.
if ! [ "x$chkconfig_util" = x ] ; then
  $service_util $service $service_operation
  $chkconfig_util --level 0123456 $service $chkconfig_state
else
  $service_util $service_operation $service
  $service_util $service_state $service
fi

# Test if local variable xinetd is empty using non-bashism.
# If empty, then xinetd is not being used.
if ! [ "x$xinetd" = x ] ; then
  grep -qi disable /etc/xinetd.d/$xinetd &amp;&amp; \

  if ! [ "$service_operation" != 'disable' ] ; then
    sed -i "s/disable.*/disable         = no/gI" /etc/xinetd.d/$xinetd
  else
    sed -i "s/disable.*/disable         = yes/gI" /etc/xinetd.d/$xinetd
  fi
fi

}
</value>
    </Value>
    <Value id="function_perform_audit_rules_privileged_commands_remediation" type="string" operator="equals" interactive="0" hidden="true" prohibitChanges="true">
      <title>Remediation function to perform remediation for 'audit_rules_privileged_commands' rule</title>
      <description>Function to perform remediation for 'audit_rules_privileged_commands' rule

Expects two arguments:

  audit_tool            tool used to load audit rules
                        One of 'auditctl' or 'augenrules'

  min_auid              Minimum original ID the user logged in with
                        '500' for RHEL-6 and before, '1000' for RHEL-7 and after.

Example Call(s):

  perform_audit_rules_privileged_commands_remediation "auditctl" "500"
  perform_audit_rules_privileged_commands_remediation "augenrules" "1000"
</description>
      <value selector="">
function perform_audit_rules_privileged_commands_remediation {
#
# Load function arguments into local variables
local tool="$1"
local min_auid="$2"

# Check sanity of the input
if [ $# -ne "2" ]
then
        echo "Usage: perform_audit_rules_privileged_commands_remediation 'auditctl | augenrules' '500 | 1000'"
        echo "Aborting."
        exit 1
fi

declare -a files_to_inspect=()

# Check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
        echo "Unknown audit rules loading tool: $1. Aborting."
        echo "Use either 'auditctl' or 'augenrules'!"
        exit 1
# If the audit tool is 'auditctl', then:
# * add '/etc/audit/audit.rules'to the list of files to be inspected,
# * specify '/etc/audit/audit.rules' as the output audit file, where
#   missing rules should be inserted
elif [ "$tool" == 'auditctl' ]
then
        files_to_inspect=("/etc/audit/audit.rules")
        output_audit_file="/etc/audit/audit.rules"
#
# If the audit tool is 'augenrules', then:
# * add '/etc/audit/rules.d/*.rules' to the list of files to be inspected
#   (split by newline),
# * specify /etc/audit/rules.d/privileged.rules' as the output file, where
#   missing rules should be inserted
elif [ "$tool" == 'augenrules' ]
then
        IFS=$'\n' files_to_inspect=($(find /etc/audit/rules.d -maxdepth 1 -type f -name *.rules -print))
        output_audit_file="/etc/audit/rules.d/privileged.rules"
fi

# Obtain the list of SUID/SGID binaries on the particular system (split by newline)
# into privileged_binaries array
IFS=$'\n' privileged_binaries=($(find / -xdev -type f -perm -4000 -o -type f -perm -2000 2&gt;/dev/null))

# Keep list of SUID/SGID binaries that have been already handled within some previous iteration
declare -a sbinaries_to_skip=()

# For each found sbinary in privileged_binaries list
for sbinary in "${privileged_binaries[@]}"
do

        # Replace possible slash '/' character in sbinary definition so we could use it in sed expressions below
        sbinary_esc=${sbinary//$'/'/$'\/'}
        # Check if this sbinary wasn't already handled in some of the previous iterations
        # Return match only if whole sbinary definition matched (not in the case just prefix matched!!!)
        if [[ $(sed -ne "/${sbinary_esc}$/p" &lt;&lt;&lt; ${sbinaries_to_skip[@]}) ]]
        then
                # If so, don't process it second time &amp; go to process next sbinary
                continue
        fi

        # Reset the counter of inspected files when starting to check
        # presence of existing audit rule for new sbinary
        local count_of_inspected_files=0

        # For each audit rules file from the list of files to be inspected
        for afile in "${files_to_inspect[@]}"
        do

                # Search current audit rules file's content for match. Match criteria:
                # * existing rule is for the same SUID/SGID binary we are currently processing (but
                #   can contain multiple -F path= elements covering multiple SUID/SGID binaries)
                # * existing rule contains all arguments from expected rule form (though can contain
                #   them in arbitrary order)

                base_search=$(sed -e "/-a always,exit/!d" -e "/-F path=${sbinary_esc}$/!d"   \
                                  -e "/-F path=[^[:space:]]\+/!d" -e "/-F perm=.*/!d"       \
                                  -e "/-F auid&gt;=${min_auid}/!d" -e "/-F auid!=4294967295/!d"  \
                                  -e "/-k privileged/!d" $afile)

                # Increase the count of inspected files for this sbinary
                count_of_inspected_files=$((count_of_inspected_files + 1))

                # Define expected rule form for this binary
                expected_rule="-a always,exit -F path=${sbinary} -F perm=x -F auid&gt;=${min_auid} -F auid!=4294967295 -k privileged"

                # Require execute access type to be set for existing audit rule
                exec_access='x'

                # Search current audit rules file's content for presence of rule pattern for this sbinary
                if [[ $base_search ]]
                then

                        # Current audit rules file already contains rule for this binary =&gt;
                        # Store the exact form of found rule for this binary for further processing
                        concrete_rule=$base_search

                        # Select all other SUID/SGID binaries possibly also present in the found rule
                        IFS=$'\n' handled_sbinaries=($(grep -o -e "-F path=[^[:space:]]\+" &lt;&lt;&lt; $concrete_rule))
                        IFS=$' ' handled_sbinaries=(${handled_sbinaries[@]//-F path=/})

                        # Merge the list of such SUID/SGID binaries found in this iteration with global list ignoring duplicates
                        sbinaries_to_skip=($(for i in "${sbinaries_to_skip[@]}" "${handled_sbinaries[@]}"; do echo $i; done | sort -du))

                        # Separate concrete_rule into three sections using hash '#'
                        # sign as a delimiter around rule's permission section borders
                        concrete_rule=$(echo $concrete_rule | sed -n "s/\(.*\)\+\(-F perm=[rwax]\+\)\+/\1#\2#/p")

                        # Split concrete_rule into head, perm, and tail sections using hash '#' delimiter
                        IFS=$'#' read rule_head rule_perm rule_tail &lt;&lt;&lt;  "$concrete_rule"

                        # Extract already present exact access type [r|w|x|a] from rule's permission section
                        access_type=${rule_perm//-F perm=/}

                        # Verify current permission access type(s) for rule contain 'x' (execute) permission
                        if ! grep -q "$exec_access" &lt;&lt;&lt; "$access_type"
                        then

                                # If not, append the 'x' (execute) permission to the existing access type bits
                                access_type="$access_type$exec_access"
                                # Reconstruct the permissions section for the rule
                                new_rule_perm="-F perm=$access_type"
                                # Update existing rule in current audit rules file with the new permission section
                                sed -i "s#${rule_head}\(.*\)${rule_tail}#${rule_head}${new_rule_perm}${rule_tail}#" $afile

                        fi

                # If the required audit rule for particular sbinary wasn't found yet, insert it under following conditions:
                #
                # * in the "auditctl" mode of operation insert particular rule each time
                #   (because in this mode there's only one file -- /etc/audit/audit.rules to be inspected for presence of this rule),
                #
                # * in the "augenrules" mode of operation insert particular rule only once and only in case we have already
                #   searched all of the files from /etc/audit/rules.d/*.rules location (since that audit rule can be defined
                #   in any of those files and if not, we want it to be inserted only once into /etc/audit/rules.d/privileged.rules file)
                #
                elif [ "$tool" == "auditctl" ] || [[ "$tool" == "augenrules" &amp;&amp; $count_of_inspected_files -eq "${#files_to_inspect[@]}" ]]
                then

                        # Current audit rules file's content doesn't contain expected rule for this
                        # SUID/SGID binary yet =&gt; append it
                        echo $expected_rule &gt;&gt; $output_audit_file
                fi

        done

done

}
</value>
    </Value>
    <Value id="function_populate" type="string" operator="equals" interactive="0" hidden="true" prohibitChanges="true">
      <title>Remediation function to populate environment variables needed for unit testing</title>
      <description>The populate function isn't directly used by SSG at the moment but it can
ba used for testing purposes (to verify proper work of the remediation script directly
from the shell).</description>
      <value selector="">
function populate {
# Code to populate environment variables needed (for unit testing)
if [ -z "${!1}" ]; then
	echo "$1 is not defined. Exiting."
	exit
fi
}
</value>
    </Value>
    <Value id="function_rhel6_perform_audit_adjtimex_settimeofday_stime_remediation" type="string" operator="equals" interactive="0" hidden="true" prohibitChanges="true">
      <title>Remediation function for the 'adjtimex', 'settimeofday', and 'stime'
audit system calls on Red Hat Enterprise Linux 6</title>
      <description>Perform the remediation for the 'adjtimex', 'settimeofday', and 'stime' audit
# system calls on Red Hat Enterprise Linux 6 OS</description>
      <value selector="">
function fix_audit_syscall_rule {

# Load function arguments into local variables
local tool="$1"
local pattern="$2"
local group="$3"
local arch="$4"
local full_rule="$5"

# Check sanity of the input
if [ $# -ne "5" ]
then
        echo "Usage: fix_audit_syscall_rule 'tool' 'pattern' 'group' 'arch' 'full rule'"
        echo "Aborting."
        exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
# 
# -----------------------------------------------------------------------------------------
#  Tool used to load audit rules | Rule already defined  |  Audit rules file to inspect    |
# -----------------------------------------------------------------------------------------
#        auditctl                |     Doesn't matter    |  /etc/audit/audit.rules         |
# -----------------------------------------------------------------------------------------
#        augenrules              |          Yes          |  /etc/audit/rules.d/*.rules     |
#        augenrules              |          No           |  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
#
declare -a files_to_inspect

# First check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
        echo "Unknown audit rules loading tool: $1. Aborting."
        echo "Use either 'auditctl' or 'augenrules'!"
        exit 1
# If audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# file to the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
        files_to_inspect=("${files_to_inspect[@]}" '/etc/audit/audit.rules' )
# If audit tool is 'augenrules', then check if the audit rule is defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to the list for inspection
# If rule isn't defined yet, add '/etc/audit/rules.d/$key.rules' to the list for inspection
elif [ "$tool" == 'augenrules' ]
then
        # Extract audit $key from audit rule so we can use it later
        key=$(expr "$full_rule" : '.*-k[[:space:]]\([^[:space:]]\+\)')
        # Check if particular audit rule is already defined
        IFS=$'\n' matches=($(sed -s -n -e "/${pattern}/!d" -e "/${arch}/!d" -e "/${group}/!d;F" /etc/audit/rules.d/*.rules))
        # Reset IFS back to default
        unset $IFS
        for match in "${matches[@]}"
        do
                files_to_inspect=("${files_to_inspect[@]}" "${match}")
        done
        # Case when particular rule isn't defined in /etc/audit/rules.d/*.rules yet
        if [ ${#files_to_inspect[@]} -eq "0" ]
        then
                files_to_inspect="/etc/audit/rules.d/$key.rules"
                if [ ! -e "$files_to_inspect" ]
                then
                        touch "$files_to_inspect"
                        chmod 0640 "$files_to_inspect"
                fi
        fi
fi

#
# Indicator that we want to append $full_rule into $audit_file by default
local append_expected_rule=0

for audit_file in "${files_to_inspect[@]}"
do

        # Filter existing $audit_file rules' definitions to select those that:
        # * follow the rule pattern, and
        # * meet the hardware architecture requirement, and
        # * are current syscall group specific
        IFS=$'\n' existing_rules=($(sed -e "/${pattern}/!d" -e "/${arch}/!d" -e "/${group}/!d"  "$audit_file"))
        # Reset IFS back to default
        unset $IFS

        # Process rules found case-by-case
        for rule in "${existing_rules[@]}"
        do
                # Found rule is for same arch &amp; key, but differs (e.g. in count of -S arguments)
                if [ "${rule}" != "${full_rule}" ]
                then
                        # If so, isolate just '(-S \w)+' substring of that rule
                        rule_syscalls=$(echo $rule | grep -o -P '(-S \w+ )+')
                        # Check if list of '-S syscall' arguments of that rule is subset
                        # of '-S syscall' list of expected $full_rule
                        if grep -q -- "$rule_syscalls" &lt;&lt;&lt; "$full_rule"
                        then
                                # Rule is covered (i.e. the list of -S syscalls for this rule is
                                # subset of -S syscalls of $full_rule =&gt; existing rule can be deleted
                                # Thus delete the rule from audit.rules &amp; our array
                                sed -i -e "/$rule/d" "$audit_file"
                                existing_rules=("${existing_rules[@]//$rule/}")
                        else
                                # Rule isn't covered by $full_rule - it besides -S syscall arguments
                                # for this group contains also -S syscall arguments for other syscall
                                # group. Example: '-S lchown -S fchmod -S fchownat' =&gt; group='chown'
                                # since 'lchown' &amp; 'fchownat' share 'chown' substring
                                # Therefore:
                                # * 1) delete the original rule from audit.rules
                                # (original '-S lchown -S fchmod -S fchownat' rule would be deleted)
                                # * 2) delete the -S syscall arguments for this syscall group, but
                                # keep those not belonging to this syscall group
                                # (original '-S lchown -S fchmod -S fchownat' would become '-S fchmod'
                                # * 3) append the modified (filtered) rule again into audit.rules
                                # if the same rule not already present
                                #
                                # 1) Delete the original rule
                                sed -i -e "/$rule/d" "$audit_file"
                                # 2) Delete syscalls for this group, but keep those from other groups
                                # Convert current rule syscall's string into array splitting by '-S' delimiter
                                IFS=$'-S' read -a rule_syscalls_as_array &lt;&lt;&lt; "$rule_syscalls"
                                # Reset IFS back to default
                                unset $IFS
                                # Declare new empty string to hold '-S syscall' arguments from other groups
                                new_syscalls_for_rule=''
                                # Walk through existing '-S syscall' arguments
                                for syscall_arg in "${rule_syscalls_as_array[@]}"
                                do
                                        # Skip empty $syscall_arg values
                                        if [ "$syscall_arg" == '' ]
                                        then
                                                continue
                                        fi
                                        # If the '-S syscall' doesn't belong to current group add it to the new list
                                        # (together with adding '-S' delimiter back for each of such item found)
                                        if grep -q -v -- "$group" &lt;&lt;&lt; "$syscall_arg"
                                        then
                                                new_syscalls_for_rule="$new_syscalls_for_rule -S $syscall_arg"
                                        fi
                                done
                                # Replace original '-S syscall' list with the new one for this rule
                                updated_rule=${rule//$rule_syscalls/$new_syscalls_for_rule}
                                # Squeeze repeated whitespace characters in rule definition (if any) into one
                                updated_rule=$(echo "$updated_rule" | tr -s '[:space:]')
                                # 3) Append the modified / filtered rule again into audit.rules
                                #    (but only in case it's not present yet to prevent duplicate definitions)
                                if ! grep -q -- "$updated_rule" "$audit_file"
                                then
                                        echo "$updated_rule" &gt;&gt; "$audit_file"
                                fi
                        fi
                else
                        # $audit_file already contains the expected rule form for this
                        # architecture &amp; key =&gt; don't insert it second time
                        append_expected_rule=1
                fi
        done

        # We deleted all rules that were subset of the expected one for this arch &amp; key.
        # Also isolated rules containing system calls not from this system calls group.
        # Now append the expected rule if it's not present in $audit_file yet
        if [[ ${append_expected_rule} -eq "0" ]]
        then
                echo "$full_rule" &gt;&gt; "$audit_file"
        fi
done

}

function rhel6_perform_audit_adjtimex_settimeofday_stime_remediation {

# Perform the remediation for the 'adjtimex', 'settimeofday', and 'stime' audit
# system calls on Red Hat Enterprise Linux 6 OS
#
# Retrieve hardware architecture of the underlying system
[ $(getconf LONG_BIT) = "32" ] &amp;&amp; RULE_ARCHS=("b32") || RULE_ARCHS=("b32" "b64")

for ARCH in "${RULE_ARCHS[@]}"
do
        PATTERN="-a always,exit -F arch=${ARCH} -S .* -k *"
        # Create expected audit group and audit rule form for particular system call &amp; architecture
        if [ ${ARCH} = "b32" ]
        then
                # stime system call is known at 32-bit arch (see e.g "$ ausyscall i386 stime" 's output)
                # so append it to the list of time group system calls to be audited
                GROUP="\(adjtimex\|settimeofday\|stime\)"
                FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -S stime -k audit_time_rules"
        elif [ ${ARCH} = "b64" ]
        then
                # stime system call isn't known at 64-bit arch (see "$ ausyscall x86_64 stime" 's output)
                # therefore don't add it to the list of time group system calls to be audited
                GROUP="\(adjtimex\|settimeofday\)"
                FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -k audit_time_rules"
        fi
        # Perform the remediation itself
        fix_audit_syscall_rule "auditctl" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
done

}
</value>
    </Value>
    <Value id="function_rhel7_fedora_perform_audit_adjtimex_settimeofday_stime_remediation" type="string" operator="equals" interactive="0" hidden="true" prohibitChanges="true">
      <title>Remediation function for the 'adjtimex', 'settimeofday', and 'stime'
audit system calls on Red Hat Enterprise Linux 7 or Fedora</title>
      <description>Perform the remediation for the 'adjtimex', 'settimeofday', and
'stime' audit system calls on Red Hat Enterprise Linux 7 or Fedora OSes</description>
      <value selector="">
function fix_audit_syscall_rule {

# Load function arguments into local variables
local tool="$1"
local pattern="$2"
local group="$3"
local arch="$4"
local full_rule="$5"

# Check sanity of the input
if [ $# -ne "5" ]
then
        echo "Usage: fix_audit_syscall_rule 'tool' 'pattern' 'group' 'arch' 'full rule'"
        echo "Aborting."
        exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
# 
# -----------------------------------------------------------------------------------------
#  Tool used to load audit rules | Rule already defined  |  Audit rules file to inspect    |
# -----------------------------------------------------------------------------------------
#        auditctl                |     Doesn't matter    |  /etc/audit/audit.rules         |
# -----------------------------------------------------------------------------------------
#        augenrules              |          Yes          |  /etc/audit/rules.d/*.rules     |
#        augenrules              |          No           |  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
#
declare -a files_to_inspect

# First check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
        echo "Unknown audit rules loading tool: $1. Aborting."
        echo "Use either 'auditctl' or 'augenrules'!"
        exit 1
# If audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# file to the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
        files_to_inspect=("${files_to_inspect[@]}" '/etc/audit/audit.rules' )
# If audit tool is 'augenrules', then check if the audit rule is defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to the list for inspection
# If rule isn't defined yet, add '/etc/audit/rules.d/$key.rules' to the list for inspection
elif [ "$tool" == 'augenrules' ]
then
        # Extract audit $key from audit rule so we can use it later
        key=$(expr "$full_rule" : '.*-k[[:space:]]\([^[:space:]]\+\)')
        # Check if particular audit rule is already defined
        IFS=$'\n' matches=($(sed -s -n -e "/${pattern}/!d" -e "/${arch}/!d" -e "/${group}/!d;F" /etc/audit/rules.d/*.rules))
        # Reset IFS back to default
        unset $IFS
        for match in "${matches[@]}"
        do
                files_to_inspect=("${files_to_inspect[@]}" "${match}")
        done
        # Case when particular rule isn't defined in /etc/audit/rules.d/*.rules yet
        if [ ${#files_to_inspect[@]} -eq "0" ]
        then
                files_to_inspect="/etc/audit/rules.d/$key.rules"
                if [ ! -e "$files_to_inspect" ]
                then
                        touch "$files_to_inspect"
                        chmod 0640 "$files_to_inspect"
                fi
        fi
fi

#
# Indicator that we want to append $full_rule into $audit_file by default
local append_expected_rule=0

for audit_file in "${files_to_inspect[@]}"
do

        # Filter existing $audit_file rules' definitions to select those that:
        # * follow the rule pattern, and
        # * meet the hardware architecture requirement, and
        # * are current syscall group specific
        IFS=$'\n' existing_rules=($(sed -e "/${pattern}/!d" -e "/${arch}/!d" -e "/${group}/!d"  "$audit_file"))
        # Reset IFS back to default
        unset $IFS

        # Process rules found case-by-case
        for rule in "${existing_rules[@]}"
        do
                # Found rule is for same arch &amp; key, but differs (e.g. in count of -S arguments)
                if [ "${rule}" != "${full_rule}" ]
                then
                        # If so, isolate just '(-S \w)+' substring of that rule
                        rule_syscalls=$(echo $rule | grep -o -P '(-S \w+ )+')
                        # Check if list of '-S syscall' arguments of that rule is subset
                        # of '-S syscall' list of expected $full_rule
                        if grep -q -- "$rule_syscalls" &lt;&lt;&lt; "$full_rule"
                        then
                                # Rule is covered (i.e. the list of -S syscalls for this rule is
                                # subset of -S syscalls of $full_rule =&gt; existing rule can be deleted
                                # Thus delete the rule from audit.rules &amp; our array
                                sed -i -e "/$rule/d" "$audit_file"
                                existing_rules=("${existing_rules[@]//$rule/}")
                        else
                                # Rule isn't covered by $full_rule - it besides -S syscall arguments
                                # for this group contains also -S syscall arguments for other syscall
                                # group. Example: '-S lchown -S fchmod -S fchownat' =&gt; group='chown'
                                # since 'lchown' &amp; 'fchownat' share 'chown' substring
                                # Therefore:
                                # * 1) delete the original rule from audit.rules
                                # (original '-S lchown -S fchmod -S fchownat' rule would be deleted)
                                # * 2) delete the -S syscall arguments for this syscall group, but
                                # keep those not belonging to this syscall group
                                # (original '-S lchown -S fchmod -S fchownat' would become '-S fchmod'
                                # * 3) append the modified (filtered) rule again into audit.rules
                                # if the same rule not already present
                                #
                                # 1) Delete the original rule
                                sed -i -e "/$rule/d" "$audit_file"
                                # 2) Delete syscalls for this group, but keep those from other groups
                                # Convert current rule syscall's string into array splitting by '-S' delimiter
                                IFS=$'-S' read -a rule_syscalls_as_array &lt;&lt;&lt; "$rule_syscalls"
                                # Reset IFS back to default
                                unset $IFS
                                # Declare new empty string to hold '-S syscall' arguments from other groups
                                new_syscalls_for_rule=''
                                # Walk through existing '-S syscall' arguments
                                for syscall_arg in "${rule_syscalls_as_array[@]}"
                                do
                                        # Skip empty $syscall_arg values
                                        if [ "$syscall_arg" == '' ]
                                        then
                                                continue
                                        fi
                                        # If the '-S syscall' doesn't belong to current group add it to the new list
                                        # (together with adding '-S' delimiter back for each of such item found)
                                        if grep -q -v -- "$group" &lt;&lt;&lt; "$syscall_arg"
                                        then
                                                new_syscalls_for_rule="$new_syscalls_for_rule -S $syscall_arg"
                                        fi
                                done
                                # Replace original '-S syscall' list with the new one for this rule
                                updated_rule=${rule//$rule_syscalls/$new_syscalls_for_rule}
                                # Squeeze repeated whitespace characters in rule definition (if any) into one
                                updated_rule=$(echo "$updated_rule" | tr -s '[:space:]')
                                # 3) Append the modified / filtered rule again into audit.rules
                                #    (but only in case it's not present yet to prevent duplicate definitions)
                                if ! grep -q -- "$updated_rule" "$audit_file"
                                then
                                        echo "$updated_rule" &gt;&gt; "$audit_file"
                                fi
                        fi
                else
                        # $audit_file already contains the expected rule form for this
                        # architecture &amp; key =&gt; don't insert it second time
                        append_expected_rule=1
                fi
        done

        # We deleted all rules that were subset of the expected one for this arch &amp; key.
        # Also isolated rules containing system calls not from this system calls group.
        # Now append the expected rule if it's not present in $audit_file yet
        if [[ ${append_expected_rule} -eq "0" ]]
        then
                echo "$full_rule" &gt;&gt; "$audit_file"
        fi
done

}

function rhel7_fedora_perform_audit_adjtimex_settimeofday_stime_remediation {

# Perform the remediation for the 'adjtimex', 'settimeofday', and 'stime' audit
# system calls on Red Hat Enterprise Linux 7 or Fedora OSes
#
# Retrieve hardware architecture of the underlying system
[ $(getconf LONG_BIT) = "32" ] &amp;&amp; RULE_ARCHS=("b32") || RULE_ARCHS=("b32" "b64")

for ARCH in "${RULE_ARCHS[@]}"
do

        PATTERN="-a always,exit -F arch=${ARCH} -S .* -k *"
        # Create expected audit group and audit rule form for particular system call &amp; architecture
        if [ ${ARCH} = "b32" ]
        then
                # stime system call is known at 32-bit arch (see e.g "$ ausyscall i386 stime" 's output)
                # so append it to the list of time group system calls to be audited
                GROUP="\(adjtimex\|settimeofday\|stime\)"
                FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -S stime -k audit_time_rules"
        elif [ ${ARCH} = "b64" ]
        then
                # stime system call isn't known at 64-bit arch (see "$ ausyscall x86_64 stime" 's output)
                # therefore don't add it to the list of time group system calls to be audited
                GROUP="\(adjtimex\|settimeofday\)"
                FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -k audit_time_rules"
        fi
        # Perform the remediation for both possible tools: 'auditctl' and 'augenrules'
        fix_audit_syscall_rule "auditctl" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
        fix_audit_syscall_rule "augenrules" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
done

}
</value>
    </Value>
    <Value id="function_replace_or_append" type="string" operator="equals" interactive="0" hidden="true" prohibitChanges="true">
      <title>Remediation function to replace configuration setting in config file or
add the configuration setting if it does not exist yet</title>
      <description>Function to replace configuration setting in config file or add
the configuration setting if it does not exist.

Expects four arguments:

  config_file:		Configuration file that will be modified
  key:			Configuration option to change
  value:		Value of the configuration option to change
  cce:			The CCE identifier or '$CCENUM' if no CCE identifier exists

Optional arguments:

  format:		Optional argument to specify the format of how key/value should be
			modified/appended in the configuration file. The default is key = value.

Example Call(s):

  With default format of 'key = value':
  replace_or_append '/etc/sysctl.conf' '^kernel.randomize_va_space' '2' '$CCENUM'

  With custom key/value format:
  replace_or_append '/etc/sysconfig/selinux' '^SELINUX=' 'disabled' '$CCENUM' '%s=%s'

  With a variable:
  replace_or_append '/etc/sysconfig/selinux' '^SELINUX=' $var_selinux_state '$CCENUM' '%s=%s'
</description>
      <value selector="">
function replace_or_append {
  local config_file=$1
  local key=$2
  local value=$3
  local cce=$4
  local format=$5

  # Check sanity of the input
  if [ $# -lt "3" ]
  then
        echo "Usage: replace_or_append 'config_file_location' 'key_to_search' 'new_value'"
        echo
        echo "If symlinks need to be taken into account, add yes/no to the last argument"
        echo "to allow to 'follow_symlinks'."
        echo "Aborting."
        exit 1
  fi

  # Test if the config_file is a symbolic link. If so, use --follow-symlinks with sed.
  # Otherwise, regular sed command will do.
  if test -L $config_file; then
    sed_command="sed -i --follow-symlinks"
  else
    sed_command="sed -i"
  fi

  # Test that the cce arg is not empty or does not equal $CCENUM.
  # If $CCENUM exists, it means that there is no CCE assigned.
  if ! [ "x$cce" = x ] &amp;&amp; [ "$cce" != '$CCENUM' ]; then
    cce="CCE-${cce}"
  else
    cce="CCE"
  fi

  # Strip any search characters in the key arg so that the key can be replaced without
  # adding any search characters to the config file.
  stripped_key=$(sed "s/[\^=\$,;+]*//g" &lt;&lt;&lt; $key)

  # If there is no print format specified in the last arg, use the default format.
  if ! [ "x$format" = x ] ; then
    printf -v formatted_output "$format" $stripped_key $value
  else
    formatted_output="$stripped_key = $value"
  fi

  # If the key exists, change it. Otherwise, add it to the config_file.
  if `grep -qi $key $config_file` ; then
    $sed_command "s/$key.*/$formatted_output/g" $config_file
  else
    # \n is precaution for case where file ends without trailing newline
    echo -e "\n# Per $cce: Set $formatted_output in $config_file" &gt;&gt; $config_file
    echo -e "$formatted_output" &gt;&gt; $config_file
  fi

}
</value>
    </Value>
    <Value id="function_firefox_js_setting" type="string" operator="equals" interactive="0" hidden="true" prohibitChanges="true">
      <title>Remediation function to replace configuration setting(s) in the Firefox
preferences JavaScript file or add the preference if it does not exist yet</title>
      <description>Function to replace configuration setting(s) in the Firefox
preferences JavaScript file or add the preference if it does not exist.

Expects three arguments:

  config_file:          Configuration file that will be modified
  key:                  Configuration option to change
  value:                Value of the configuration option to change


Example Call(s):

  Without string or variable:
  firefox_js_setting "stig_settings.js" "general.config.obscure_value" "0"

  With string:
  firefox_js_setting "stig_settings.js" "general.config.filename" "\"stig.cfg\""

  With a string variable:
  firefox_js_setting "stig_settings.js" "general.config.filename" "\"$var_config_file_name\""
</description>
      <value selector="">
function firefox_js_setting {
  local firefox_js=$1
  local key=$2
  local value=$3
  local firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"
  local firefox_pref="/defaults/pref"
  local firefox_preferences="/defaults/preferences"

  # Check sanity of input
  if [ $# -lt "3" ]
  then
        echo "Usage: firefox_js_setting 'config_javascript_file' 'key_to_search' 'new_value'"
        echo
        echo "Aborting."
        exit 1
  fi

  # Check the possible Firefox install directories
  for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
      # Different versions of Firefox have different preferences directories, check for them and set the right one
      if [ -d "${firefox_dir}/${firefox_pref}" ] ; then
        local firefox_pref_dir="${firefox_dir}/${firefox_pref}"
      elif [ -d "${firefox_dir}/${firefox_preferences}" ] ; then
        local firefox_pref_dir="${firefox_dir}/${firefox_preferences}"
      else
        mkdir -m 755 -p "${firefox_dir}/${firefox_preferences}"
        local firefox_pref_dir="${firefox_dir}/${firefox_preferences}"
      fi

      # Make sure the Firefox .js file exists and has the appropriate permissions
      if ! [ -f "${firefox_pref_dir}/${firefox_js}" ] ; then
        touch "${firefox_pref_dir}/${firefox_js}"
        chmod 644 "${firefox_pref_dir}/${firefox_js}"
      fi

      # If the key exists, change it. Otherwise, add it to the config_file.
      if `grep -q "^pref(\"${key}\", " "${firefox_pref_dir}/${firefox_js}"` ; then
        sed -i "s/pref(\"${key}\".*/pref(\"${key}\", ${value});/g" "${firefox_pref_dir}/${firefox_js}"
      else
        echo "pref(\"${key}\", ${value});" &gt;&gt; "${firefox_pref_dir}/${firefox_js}"
      fi
    fi
  done

}
</value>
    </Value>
    <Value id="function_firefox_cfg_setting" type="string" operator="equals" interactive="0" hidden="true" prohibitChanges="true">
      <title>Remediation function to replace configuration setting(s) in the Firefox
preferences configuration (.cfg) file or add the preference if it does not exist yet</title>
      <description>Function to replace configuration setting(s) in the Firefox
preferences configuration (.cfg) file or add the preference if it does not exist.

Expects three arguments:

  config_file:          Configuration file that will be modified
  key:                  Configuration option to change
  value:                Value of the configuration option to change


Example Call(s):

  Without string or variable:
  firefox_cfg_setting "stig.cfg" "extensions.update.enabled" "false"

  With string:
  firefox_cfg_setting "stig.cfg" "security.default_personal_cert" "\"Ask Every Time\""

  With a string variable:
  firefox_cfg_setting "stig.cfg" "browser.startup.homepage\" "\"${var_default_home_page}\""
</description>
      <value selector="">
function firefox_cfg_setting {
  local firefox_cfg=$1
  local key=$2
  local value=$3
  local firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

  # Check sanity of input
  if [ $# -lt "3" ]
  then
        echo "Usage: firefox_cfg_setting 'config_cfg_file' 'key_to_search' 'new_value'"
        echo
        echo "Aborting."
        exit 1
  fi

  # Check the possible Firefox install directories
  for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
      # Make sure the Firefox .cfg file exists and has the appropriate permissions
      if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
        touch "${firefox_dir}/${firefox_cfg}"
        chmod 644 "${firefox_dir}/${firefox_cfg}"
      fi

      # If the key exists, change it. Otherwise, add it to the config_file.
      if `grep -q "^lockPref(\"${key}\", " "${firefox_dir}/${firefox_cfg}"` ; then
        sed -i "s/lockPref(\"${key}\".*/lockPref(\"${key}\", ${value});/g" "${firefox_dir}/${firefox_cfg}"
      else
        echo "lockPref(\"${key}\", ${value});" &gt;&gt; "${firefox_dir}/${firefox_cfg}"
      fi
    fi
  done
}
</value>
    </Value>
  </Group>
  <Group id="intro" prodtype="all">
    <title>Introduction</title>
    <description><!-- purpose and scope of guidance -->
The purpose of this guidance is to provide security configuration
recommendations and baselines for the <product-name-macro/> operating
system. Recommended settings for the basic operating system are provided,
as well as for many network services that the system can provide to other systems.
<!-- audience -->The guide is intended for system administrators. Readers are assumed to
possess basic system administration skills for Unix-like systems, as well
as some familiarity with the product's documentation and administration
conventions. Some instructions within this guide are complex.
All directions should be followed completely and with understanding of
their effects in order to avoid serious adverse effects on the system
and its security.
</description>
    <Group id="general-principles" prodtype="all">
      <title>General Principles</title>
      <description>
The following general principles motivate much of the advice in this
guide and should also influence any configuration decisions that are
not explicitly covered.
</description>
      <Group id="principle-encrypt-transmitted-data" prodtype="all">
        <title>Encrypt Transmitted Data Whenever Possible</title>
        <description>
Data transmitted over a network, whether wired or wireless, is susceptible
to passive monitoring. Whenever practical solutions for encrypting
such data exist, they should be applied. Even if data is expected to
be transmitted only over a local network, it should still be encrypted.
Encrypting authentication data, such as passwords, is particularly
important. Networks of <product-name-macro/> machines can and should be configured
so that no unencrypted authentication data is ever transmitted between
machines.
</description>
      </Group>
      <Group id="principle-minimize-software" prodtype="all">
        <title>Minimize Software to Minimize Vulnerability</title>
        <description>
The simplest way to avoid vulnerabilities in software is to avoid
installing that software. On <product-name-macro/>,
<os-type-macro type="rhel7,rhel6,rhel5,fedora,opensuse,suse11,suse12,osp7,eap5,fuse6,wrlinux">the RPM Package Manager (originally Red Hat
Package Manager, abbreviated RPM)</os-type-macro><os-type-macro type="debian">
the Package Manager (originally
<weblink-macro link="https://www.debian.org/doc/manuals/debian-faq/ch-pkgtools.en.html" text="apt"/>)</os-type-macro>
allows for careful management of
the set of software packages installed on a system. Installed software
contributes to system vulnerability in several ways. Packages that
include setuid programs may provide local attackers a potential path to
privilege escalation. Packages that include network services may give
this opportunity to network-based attackers. Packages that include
programs which are predictably executed by local users (e.g. after
graphical login) may provide opportunities for trojan horses or other
attack code to be run undetected. The number of software packages
installed on a system can almost always be significantly pruned to include
only the software for which there is an environmental or operational need.
</description>
      </Group>
      <Group id="principle-separate-servers" prodtype="all">
        <title>Run Different Network Services on Separate Systems</title>
        <description>
Whenever possible, a server should be dedicated to serving exactly one
network service. This limits the number of other services that can
be compromised in the event that an attacker is able to successfully
exploit a software flaw in one network service.
</description>
      </Group>
      <Group id="principle-use-security-tools" prodtype="all">
        <title>Configure Security Tools to Improve System Robustness</title>
        <description>
Several tools exist which can be effectively used to improve a system's
resistance to and detection of unknown attacks. These tools can improve
robustness against attack at the cost of relatively little configuration
effort. In particular, this guide recommends and discusses the use of
host-based firewalling, SELinux for protection against
vulnerable services, and a logging and auditing infrastructure for
detection of problems.
</description>
      </Group>
      <Group id="principle-least-privilege" prodtype="all">
        <title>Least Privilege</title>
        <description>
Grant the least privilege necessary for user accounts and software to perform tasks.
For example, <tt>sudo</tt> can be implemented to limit authorization to super user
accounts on the system only to designated personnel. Another example is to limit
logins on server systems to only those administrators who need to log into them in
order to perform administration tasks. Using SELinux also follows the principle of
least privilege: SELinux policy can confine software to perform only actions on the
system that are specifically allowed. This can be far more restrictive than the
actions permissible by the traditional Unix permissions model.
</description>
      </Group>
    </Group>
    <Group id="how-to-use" prodtype="all">
      <title>How to Use This Guide</title>
      <description>
Readers should heed the following points when using the guide.
</description>
      <Group id="intro-read-sections-completely" prodtype="all">
        <title>Read Sections Completely and in Order</title>
        <description>
Each section may build on information and recommendations discussed in
prior sections. Each section should be read and understood completely;
instructions should never be blindly applied. Relevant discussion may
occur after instructions for an action. 
</description>
      </Group>
      <Group id="intro-test-non-production" prodtype="all">
        <title>Test in Non-Production Environment</title>
        <description>
This guidance should always be tested in a non-production environment
before deployment. This test environment should simulate the setup in
which the system will be deployed as closely as possible.
</description>
      </Group>
      <Group id="intro-root-shell-assumed" prodtype="all">
        <title>Root Shell Environment Assumed</title>
        <description>
Most of the actions listed in this document are written with the
assumption that they will be executed by the root user running the
<tt>/bin/bash</tt> shell. Commands preceded with a hash mark (#)
assume that the administrator will execute the commands as root, i.e.
apply the command via <tt>sudo</tt> whenever possible, or use
<tt>su</tt> to gain root privileges if <tt>sudo</tt> cannot be
used. Commands which can be executed as a non-root user are are preceded
by a dollar sign ($) prompt.
</description>
      </Group>
      <Group id="intro-formatting-conventions" prodtype="all">
        <title>Formatting Conventions</title>
        <description>
Commands intended for shell execution, as well as configuration file text,
are featured in a <tt>monospace font</tt>. <i>Italics</i> are used
to indicate instances where the system administrator must substitute
the appropriate information into a command or configuration file.
</description>
      </Group>
      <Group id="intro-reboot-required" prodtype="all">
        <title>Reboot Required</title>
        <description>
A system reboot is implicitly required after some actions in order to
complete the reconfiguration of the system. In many cases, the changes
will not take effect until a reboot is performed. In order to ensure
that changes are applied properly and to test functionality, always
reboot the system after applying a set of recommendations from this guide.
</description>
      </Group>
    </Group>
  </Group>
  <Group id="system" prodtype="all">
    <title>System Settings</title>
    <description>Contains rules that check correct system settings.</description>
    <Group id="software" prodtype="all">
      <title>Installing and Maintaining Software</title>
      <description>The following sections contain information on
security-relevant choices during the initial operating system
installation process and the setup of software
updates.</description>
      <Group id="updating">
        <title>Updating Software</title>
        <description>The <tt>dnf</tt> command line tool is used to install and
update software packages. The system also provides a graphical
software update tool in the <b>System</b> menu, in the <b>Administration</b> submenu,
called <b>Software Update</b>.
<br/><br/>
Fedora systems contain an installed software catalog called
the RPM database, which records metadata of installed packages.  Tools such as
<tt>dnf</tt> or the graphical <b>Software Update</b> ensure usage of RPM
packages for software installation.  This allows for insight into the current
inventory of installed software on the system, and is highly recommended.
</description>
        <!-- REMINDER: Before telling people to update their systems
     via the security_patches_up_to_date rule, we must
     ensure they have configured an update source! -->
        <Rule id="ensure_gpgcheck_globally_activated" severity="high">
          <title>gpgcheck Enabled In Main Dnf Configuration</title>
          <description>The <tt>gpgcheck</tt> option should be used to ensure
checking of an RPM package's signature always occurs prior to its
installation. To configure dnf to check package signatures before installing
them, ensure the following line appears in <tt>/etc/dnf/dnf.conf</tt> in
the <tt>[main]</tt> section:
<pre>gpgcheck=1</pre>
</description>
          <ocil clause="GPG checking is not enabled">
To determine whether <tt>dnf</tt> is configured to use <tt>gpgcheck</tt>,
inspect <tt>/etc/dnf/dnf.conf</tt> and ensure the following appears in the
<tt>[main]</tt> section:
<pre>gpgcheck=1</pre>
A value of <tt>1</tt> indicates that <tt>gpgcheck</tt> is enabled. Absence of a
<tt>gpgcheck</tt> line or a setting of <tt>0</tt> indicates that it is
disabled.
</ocil>
          <rationale>
Ensuring the validity of packages' cryptographic signatures prior to
installation ensures the provenance of the software and
protects against malicious tampering.
</rationale>
          <oval id="ensure_gpgcheck_globally_activated"/>
          <ref nist="SI-7,MA-1(b)" disa="352,663"/>
        </Rule>
        <Rule id="ensure_gpgcheck_never_disabled" severity="high">
          <title>gpgcheck Enabled For All Dnf Package Repositories</title>
          <description>To ensure signature checking is not disabled for
any repos, remove any lines from files in <tt>/etc/yum.repos.d</tt> of the form:
<pre>gpgcheck=0</pre>
</description>
          <ocil clause="GPG checking is disabled">
To determine whether <tt>dnf</tt> has been configured to disable
<tt>gpgcheck</tt> for any repos,  inspect all files in
<tt>/etc/yum.repos.d</tt> and ensure the following does not appear in any
sections:
<pre>gpgcheck=0</pre>
A value of <tt>0</tt> indicates that <tt>gpgcheck</tt> has been disabled for that repo. 
</ocil>
          <rationale>
Ensuring all packages' cryptographic signatures are valid prior to
installation ensures the provenance of the software and
protects against malicious tampering.
</rationale>
          <oval id="ensure_gpgcheck_never_disabled"/>
          <ref nist="SI-7,MA-1(b)" disa="352,663"/>
        </Rule>
      </Group>
      <Group id="integrity">
        <title>Software Integrity Checking</title>
        <description>
Both the AIDE (Advanced Intrusion Detection Environment)
software and the RPM package management system provide
mechanisms for verifying the integrity of installed software.
AIDE uses snapshots of file metadata (such as hashes) and compares these
to current system files in order to detect changes.
The RPM package management system can conduct integrity
checks by comparing information in its metadata database with
files installed on the system.
<br/><br/>
Integrity checking cannot <i>prevent</i> intrusions,
but can detect that they have occurred. Requirements
for software integrity checking may be highly dependent on
the environment in which the system will be used. Snapshot-based
approaches such as AIDE may induce considerable overhead
in the presence of frequent software updates.
</description>
        <Group id="aide">
          <title>Verify Integrity with AIDE</title>
          <description>AIDE conducts integrity checks by comparing information about
files with previously-gathered information. Ideally, the AIDE database is
created immediately after initial system configuration, and then again after any
software update.  AIDE is highly configurable, with further configuration
information located in <tt>/usr/share/doc/aide-<i>VERSION</i></tt>.
</description>
          <Rule id="package_aide_installed" severity="medium">
            <title>Install AIDE</title>
            <description>
Install the AIDE package with the command:
<pre>$ sudo dnf install aide</pre>
</description>
            <ocil clause="the package is not installed">
              <package-check-macro package="aide"/>
            </ocil>
            <rationale>
The AIDE package must be installed if it is to be available for integrity checking.
</rationale>
            <!--oval id="package_aide_installed" /-->
            <ref nist="CM-3(d),CM-3(e),CM-6(d),CM-6(3),SC-28, SI-7" disa="1069"/>
          </Rule>
          <Rule id="disable_prelink">
            <title>Disable Prelinking</title>
            <description>
The prelinking feature changes binaries in an attempt to decrease their startup
time.  In order to disable it, change or add the following line inside the file
<tt>/etc/sysconfig/prelink</tt>:
<pre>PRELINKING=no</pre>
Next, run the following command to return binaries to a normal, non-prelinked state:
<pre>$ sudo /usr/sbin/prelink -ua</pre>
</description>
            <rationale>
The prelinking feature can interfere with the operation
of AIDE, because it changes binaries.
</rationale>
            <oval id="disable_prelink"/>
            <ref nist="CM-6(d),CM-6(3),SC-28, SI-7"/>
          </Rule>
          <Rule id="aide_build_database" severity="medium">
            <title>Build and Test AIDE Database</title>
            <description>Run the following command to generate a new database:
<pre># /usr/sbin/aide --init</pre>
By default, the database will be written to the file <tt>/var/lib/aide/aide.db.new.gz</tt>.
Storing the database, the configuration file <tt>/etc/aide.conf</tt>, and the binary
<tt>/usr/sbin/aide</tt> (or hashes of these files), in a secure location (such as on read-only media) provides additional assurance about their integrity.
The newly-generated database can be installed as follows:
<pre># cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz</pre>
To initiate a manual check, run the following command:
<pre># /usr/sbin/aide --check</pre>
If this check produces any unexpected output, investigate.
</description>
            <rationale>
For AIDE to be effective, an initial database of "known-good" information about files
must be captured and it should be able to be verified against the installed files.
</rationale>
            <oval id="aide_build_database"/>
            <ref nist="CM-3(d),CM-3(e),CM-6(d),CM-6(3),SC-28,SI-7"/>
          </Rule>
          <Rule id="aide_periodic_cron_checking" severity="medium">
            <title>Configure Periodic Execution of AIDE</title>
            <description>
To implement a daily execution of AIDE at 4:05am using cron, add the following line to <tt>/etc/crontab</tt>:
<pre>05 4 * * * root /usr/sbin/aide --check</pre>
AIDE can be executed periodically through other means; this is merely one example.
</description>
            <ocil clause="there is no output">
To determine that periodic AIDE execution has been scheduled, run the following command:
<pre># grep aide /etc/crontab</pre>
</ocil>
            <rationale>
By default, AIDE does not install itself for periodic execution. Periodically
running AIDE is necessary to reveal unexpected changes in installed files.
</rationale>
            <ref nist="CM-3(d),CM-3(e),CM-6(d),CM-6(3),SC-28,SI-7" disa="374,416,1069,1263,1297,1589"/>
          </Rule>
        </Group>
        <Group id="rpm_verification">
          <title>Verify Integrity with RPM</title>
          <description>The RPM package management system includes the ability
to verify the integrity of installed packages by comparing the
installed files with information about the files taken from the
package metadata stored in the RPM database. Although an attacker
could corrupt the RPM database (analogous to attacking the AIDE
database as described above), this check can still reveal
modification of important files. To list which files on the system differ from what is expected by the RPM database:
<pre># rpm -qVa</pre>
See the man page for <tt>rpm</tt> to see a complete explanation of each column.
</description>
          <Rule id="rpm_verify_permissions">
            <title>Verify and Correct File Permissions with RPM</title>
            <description>
The RPM package management system can check file access
permissions of installed software packages, including many that are
important to system security. 
After locating a file with incorrect permissions, run the following command to determine which package owns it:
<pre># rpm -qf <i>FILENAME</i></pre>
Next, run the following command to reset its permissions to 
the correct values:
<pre># rpm --setperms <i>PACKAGENAME</i></pre>
</description>
            <ocil clause="there is output">
The following command will list which files on the system have permissions different from what
is expected by the RPM database:
<pre># rpm -Va | grep '^.M'</pre>
</ocil>
            <rationale>
Permissions on system binaries and configuration files that are too generous
could allow an unauthorized user to gain privileges that they should not have.
The permissions set by the vendor should be maintained. Any deviations from
this baseline should be investigated.</rationale>
            <oval id="rpm_verify_permissions"/>
            <ref nist="AC-6,CM-6(d),CM-6(3)" disa="1493,1494,1495"/>
          </Rule>
          <Rule id="rpm_verify_hashes">
            <title>Verify File Hashes with RPM</title>
            <description>The RPM package management system can check the hashes of
installed software packages, including many that are important to system
security. Run the following command to list which files on the system
have hashes that differ from what is expected by the RPM database:
<pre># rpm -Va | grep '^..5'</pre>
A "c" in the second column indicates that a file is a configuration file, which
may appropriately be expected to change.  If the file was not expected to
change, investigate the cause of the change using audit logs or other means.
The package can then be reinstalled to restore the file.
Run the following command to determine which package owns the file:
<pre># rpm -qf <i>FILENAME</i></pre>
The package can be reinstalled from a dnf repository using the command:
<pre>dnf reinstall <i>PACKAGENAME</i></pre>
Alternatively, the package can be reinstalled from trusted media using the command:
<pre>rpm -Uvh <i>PACKAGENAME</i></pre> 
</description>
            <ocil clause="there is output"> The following command will list which files on the system 
have file hashes different from what is expected by the RPM database. 
<pre># rpm -Va | awk '$1 ~ /..5/ &amp;&amp; $2 != "c"'</pre> 
</ocil>
            <rationale>
The hashes of important files like system executables should match the
information given by the RPM database. Executables with erroneous hashes could
be a sign of nefarious activity on the system.</rationale>
            <oval id="rpm_verify_hashes"/>
            <ref nist="CM-6(d),CM-6(3),SI-7" disa="1496"/>
          </Rule>
        </Group>
        <Group id="additional_security_software">
          <title>Additional Security Software</title>
          <description>
Additional security software that is not provided or supported
by Red Hat can be installed to provide complementary or duplicative
security capabilities to those provided by the base platform.  Add-on
software may not be appropriate for some specialized systems.
</description>
          <Rule id="install_hids" severity="high">
            <title>Install Intrusion Detection Software</title>
            <description>
The Red Hat platform includes a sophisticated auditing system 
and SELinux, which provide host-based intrusion detection capabilities.
</description>
            <ocil clause="no host-based intrusion detection tools are installed">
Inspect the system to determine if intrusion detection software has been installed. 
Verify this intrusion detection software is active.
</ocil>
            <rationale>
Host-based intrusion detection tools provide a system-level defense when an
intruder gains access to a system or network.  
</rationale>
            <ref nist="SC-7" disa="1263"/>
          </Rule>
          <Rule id="install_antivirus">
            <title>Install Virus Scanning Software</title>
            <description>
Install virus scanning software, which uses signatures to search for the
presence of viruses on the filesystem. 
The McAfee VirusScan Enterprise for Linux virus scanning tool is provided for DoD systems.
Ensure virus definition files are no older than 7 days, or their last release.
<!-- need info here on where DoD admins can go to get this -->
Configure the virus scanning software to perform scans dynamically on all
accessed files.  If this is not possible, configure the
system to scan all altered files on the system on a daily
basis. If the system processes inbound SMTP mail, configure the virus scanner
to scan all received mail.
<!-- what's the basis for the IAO language? would not failure of a check
     imply a discussion, for every check in this document, 
     with the IAO (or SSO or ISSO or ISSM or whatever is the right acronym in your
     particular neighborhood) should occur? -->
</description>
            <ocil clause="virus scanning software does not run continuously, or at least daily, or has signatures that are out of date">
Inspect the system for a cron job or system service which executes
a virus scanning tool regularly.
<br/>
<!-- this should be handled as DoD-specific text in a future revision -->
To verify the McAfee VSEL system service is operational,
run the following command:
<pre># /etc/init.d/nails status</pre>
<br/>
To check on the age of uvscan virus definition files, run the following command:
<pre># cd /opt/NAI/LinuxShield/engine/dat
# ls -la avvscan.dat avvnames.dat avvclean.dat</pre>
</ocil>
            <rationale>
Virus scanning software can be used to detect if a system has been compromised by
computer viruses, as well as to limit their spread to other systems. 
</rationale>
            <oval id="install_antivirus"/>
            <ref nist="SC-28, SI-3" disa="1239,1668"/>
          </Rule>
        </Group>
      </Group>
      <Group id="gnome">
        <title>GNOME Desktop Environment</title>
        <description>
GNOME is a graphical desktop environment bundled with many Linux distributions that
allow users to easily interact with the operating system graphically rather than
textually. The GNOME Graphical Display Manager (GDM) provides login, logout, and user
switching contexts as well as display server management.
<br/><br/>
GNOME is developed by the GNOME Project and is considered the default
Fedora Graphical environment.
<br/><br/>
For more information on GNOME and the GNOME Project, see <b><weblink-macro link="https://www.gnome.org"/></b>
</description>
        <Rule id="enable_dconf_user_profile" severity="high">
          <title>Configure GNOME3 DConf User Profile</title>
          <description>
By default, DConf provides a standard user profile. This profile contains a list
of DConf configuration databases. The user profile and database always take the
highest priority. As such the DConf User profile should always exist and be
configured correctly. 
<br/><br/>
To make sure that the user profile is configured correctly, the <tt>/etc/dconf/profile/user</tt> should be set as follows:
<pre>user-db:user
system-db:local
system-db:site
system-db:distro
</pre>
</description>
          <ocil clause="DConf User profile does not exist or is not configured correctly">
To verify that the DConf User profile is configured correctly, run the following
command:
<pre>$ cat /etc/dconf/profile/user</pre>
The output should show the following:
<pre>user-db:user
system-db:local
system-db:site
system-db:distro</pre>
</ocil>
          <rationale>
Failure to have a functional DConf profile prevents GNOME3 configuration settings
from being enforced for all users and allows various security risks.
</rationale>
          <oval id="enable_dconf_user_profile"/>
        </Rule>
        <Group id="gnome_login_screen">
          <title>Configure GNOME Login Screen</title>
          <description>In the default GNOME3 desktop, the login is displayed after system boot
and can display user accounts, allow users to reboot the system, and allow users to
login automatically and/or with a guest account. The login screen should be configured
to prevent such behavior.
<br/><br/>
For more information about enforcing preferences in the GNOME3 environment using the DConf
configuration system, see <b><weblink-macro link="https://wiki.gnome.org/Projects/dconf/SystemAdministrators"/></b> and the man page <tt>dconf(1)</tt>.
</description>
          <Rule id="gnome_gdm_disable_automatic_login" severity="high">
            <title>Disable GDM Automatic Login</title>
            <description>The GNOME Display Manager (GDM) can allow users to automatically login without
user interaction or credentials. User should always be required to authenticate themselves
to the system that they are authorized to use. To disable user ability to automatically
login to the system, set the <tt>AutomaticLoginEnable</tt> to <tt>false</tt> in the
<tt>[daemon]</tt> section in <tt>/etc/gdm/custom.conf</tt>. For example:
<pre>[daemon]
AutomaticLoginEnable=false</pre>
</description>
            <ocil clause="GDM allows users to automatically login">
To verify that automatic logins are disabled, run the following command:
<pre>$ grep -Pzoi "^\[daemon]\\nautomaticlogin.*" /etc/gdm/custom.conf</pre>
The output should show the following:
<pre>[daemon]
AutomaticLoginEnable=false</pre>
</ocil>
            <rationale>
Failure to restrict system access to authenticated users negatively impacts operating
system security.
</rationale>
            <oval id="gnome_gdm_disable_automatic_login"/>
            <ref nist="CM-6(b)" disa="366"/>
          </Rule>
          <Rule id="gnome_gdm_disable_guest_login" severity="high">
            <title>Disable GDM Guest Login</title>
            <description>The GNOME Display Manager (GDM) can allow users to login without credentials
which can be useful for public kiosk scenarios. Allowing users to login without credentials
or "guest" account access has inherent security risks and should be disabled. To do disable
timed logins or guest account access, set the <tt>TimedLoginEnable</tt> to <tt>false</tt> in
the <tt>[daemon]</tt> section in <tt>/etc/gdm/custom.conf</tt>. For example:
<pre>[daemon]
TimedLoginEnable=false</pre>
</description>
            <ocil clause="GDM allows a guest to login without credentials">
To verify that timed logins are disabled, run the following command:
<pre>$ grep -Pzoi "^\[daemon]\\ntimedlogin.*" /etc/gdm/custom.conf</pre>
The output should show the following:
<pre>[daemon]
TimedLoginEnable=false</pre>
</ocil>
            <rationale>
Failure to restrict system access to authenticated users negatively impacts operating
system security.
</rationale>
            <oval id="gnome_gdm_disable_guest_login"/>
            <ref nist="CM-6(b)" disa="366"/>
          </Rule>
          <Rule id="dconf_gnome_disable_user_list" severity="medium">
            <title>Disable the GNOME3 Login User List</title>
            <description>In the default graphical environment, users logging
directly into the system are greeted with a login screen that displays
all known users. This functionality should be disabled by setting
<tt>disable-user-list</tt> to <tt>true</tt>.
<br/><br/>
To disable, add or edit <tt>disable-user-list</tt> to 
<tt>/etc/dconf/db/gdm.d/00-security-settings</tt>. For example:
<pre>[org/gnome/login-screen]
disable-user-list=true</pre>
Once the setting has been added, add a lock to
<tt>/etc/dconf/db/gdm.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/login-screen/disable-user-list</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="disable-user-list has not been configured or is not disabled">
To ensure the user list is disabled, run the following command:
<pre>$ grep disable-user-list /etc/dconf/db/gdm.d/*</pre>
The output should be <tt>true</tt>.
To ensure that users cannot enable displaying the user list, run the following:
<pre>$ grep disable-user-list /etc/dconf/db/gdm.d/locks/*</pre>
If properly configured, the output should be <tt>/org/gnome/login-screen/disable-user-list</tt>
</ocil>
            <rationale>Leaving the user list enabled is a security risk since it allows anyone
with physical access to the system to quickly enumerate known user accounts
without logging in.</rationale>
            <oval id="dconf_gnome_disable_user_list"/>
            <ref nist="AC-23"/>
          </Rule>
          <Rule id="dconf_gnome_disable_restart_shutdown" severity="high">
            <title>Disable the GNOME3 Login Restart and Shutdown Buttons</title>
            <description>In the default graphical environment, users logging
directly into the system are greeted with a login screen that allows
any user, known or unknown, the ability the ability to shutdown or restart
the system. This functionality should be disabled by setting 
<tt>disable-restart-buttons</tt> to <tt>true</tt>.
<br/><br/>
To disable, add or edit <tt>disable-restart-buttons</tt> to
<tt>/etc/dconf/db/gdm.d/00-security-settings</tt>. For example:
<pre>[org/gnome/login-screen]
disable-restart-buttons=true</pre>
Once the setting has been added, add a lock to
<tt>/etc/dconf/db/gdm.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/login-screen/disable-restart-buttons</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="disable-restart-buttons has not been configured or is not disabled">
To ensure disable and restart on the login screen are disabled, run the following command:
<pre>$ grep disable-restart-buttons /etc/dconf/db/gdm.d/*</pre>
The output should be <tt>true</tt>.
To ensure that users cannot enable disable and restart on the login screen, run the following:
<pre>$ grep disable-restart-buttons /etc/dconf/db/gdm.d/locks/*</pre>
If properly configured, the output should be <tt>/org/gnome/login-screen/disable-restart-buttons</tt>
</ocil>
            <rationale>
A user who is at the console can reboot the system at the login screen. If restart or shutdown buttons
are pressed at the login screen, this can create the risk of short-term loss of availability of systems
due to reboot.
</rationale>
            <oval id="dconf_gnome_disable_restart_shutdown"/>
            <ref nist="AC-6" disa="366"/>
          </Rule>
          <Rule id="dconf_gnome_enable_smartcard_auth" severity="medium">
            <title>Enable the GNOME3 Login Smartcard Authentication</title>
            <description>In the default graphical environment, smart card authentication
can be enabled on the login screen by setting <tt>enable-smartcard-authentication</tt>
to <tt>true</tt>.
<br/><br/>
To enable, add or edit <tt>enable-smartcard-authentication</tt> to
<tt>/etc/dconf/db/gdm.d/00-security-settings</tt>. For example:
<pre>[org/gnome/login-screen]
enable-smartcard-authentication=true</pre>
Once the setting has been added, add a lock to
<tt>/etc/dconf/db/gdm.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/login-screen/enable-smartcard-authentication</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="enable-smartcard-authentication has not been configured or is disabled">
To ensure smart card authentication on the login screen is enabled, run the following command:
<pre>$ grep enable-smartcard-authentication /etc/dconf/db/gdm.d/*</pre>
The output should be <tt>true</tt>.
To ensure that users cannot disable smart card authentication on the login screen, run the following:
<pre>$ grep enable-smartcard-authentication /etc/dconf/db/gdm.d/locks/*</pre>
If properly configured, the output should be <tt>/org/gnome/login-screen/enable-smartcard-authentication</tt>
</ocil>
            <rationale>
Smart card login provides two-factor authentication stronger than
that provided by a username and password combination. Smart cards leverage PKI
(public key infrastructure) in order to provide and verify credentials.
</rationale>
            <oval id="dconf_gnome_enable_smartcard_auth"/>
            <ref disa="765,766,767,768,771,772,884" pcidss="Req-8.3"/>
          </Rule>
          <Rule id="dconf_gnome_login_retries" severity="medium">
            <title>Set the GNOME3 Login Number of Failures</title>
            <description>In the default graphical environment, the GNOME3 login 
screen and be configured to restart the authentication process after 
a configured number of attempts. This can be configured by setting
<tt>allowed-failures</tt> to <tt>3</tt> or less.
<br/><br/>
To enable, add or edit <tt>allowed-failures</tt> to
<tt>/etc/dconf/db/gdm.d/00-security-settings</tt>. For example:
<pre>[org/gnome/login-screen]
allowed-failures=3</pre>
Once the setting has been added, add a lock to
<tt>/etc/dconf/db/gdm.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/login-screen/allowed-failures</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="allowed-failures is not equal to or less than the expected value">
To ensure the login screen resets after a specified number of failures,
run the following command:
<pre>$ grep allowed-failures /etc/dconf/db/gdm.d/*</pre>
The output should be <tt>3</tt> or less.
To ensure that users cannot change or configure the resets after a specified
number of failures on the login screen, run the following:
<pre>$ grep allowed-failures /etc/dconf/db/gdm.d/locks/*</pre>
If properly configured, the output should be <tt>/org/gnome/login-screen/allowed-failures</tt>
</ocil>
            <rationale>
Setting the password retry prompts that are permitted on a per-session basis to a low value
requires some software, such as SSH, to re-connect. This can slow down and
draw additional attention to some types of password-guessing attacks.
</rationale>
            <oval id="dconf_gnome_login_retries"/>
          </Rule>
        </Group>
        <Group id="gnome_screen_locking">
          <title>Configure GNOME Screen Locking</title>
          <description>In the default GNOME3 desktop, the screen can be locked
by selecting the user name in the far right corner of the main panel and
selecting <b>Lock</b>.
<br/><br/>
The following sections detail commands to enforce idle activation of the screensaver,
screen locking, a blank-screen screensaver, and an idle activation time.
<br/><br/>
Because users should be trained to lock the screen when they
step away from the computer, the automatic locking feature is only
meant as a backup.
<br/><br/>
The root account can be screen-locked; however, the root account should
<i>never</i> be used to log into an X Windows environment and should only
be used to for direct login via console in emergency circumstances.
<br/><br/>
For more information about enforcing preferences in the GNOME3 environment using the DConf
configuration system, see <b><weblink-macro link="http://wiki.gnome.org/dconf"/></b> and
the man page <tt>dconf(1)</tt>. For Red Hat specific information on configuring DConf
settings, see <b><weblink-macro link="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Desktop_Migration_and_Administration_Guide/part-Configuration_and_Administration.html"/></b>
</description>
          <Value id="inactivity_timeout_value" type="number" operator="equals">
            <title>Inactivity timeout</title>
            <description>Choose allowed duration of inactive SSH connections, shells, and X sessions</description>
            <value>900</value>
            <value selector="5_minutes">300</value>
            <value selector="10_minutes">600</value>
            <value selector="15_minutes">900</value>
          </Value>
          <Rule id="dconf_gnome_screensaver_idle_delay" severity="medium">
            <title>Set GNOME3 Screensaver Inactivity Timeout</title>
            <description>
The idle time-out value for inactivity in the GNOME3 desktop is configured via the <tt>idle-delay</tt>
setting must be set under an appropriate configuration file(s) in the <tt>/etc/dconf/db/local.d</tt> directory
and locked in <tt>/etc/dconf/db/local.d/locks</tt> directory to prevent user modification.
<br/>
For example, to configure the system for a 15 minute delay, add the following to
<tt>/etc/dconf/db/local.d/00-security-settings</tt>:
<pre>[org/gnome/desktop/session]
idle-delay=900</pre>
Once the setting has been added, add a lock to
<tt>/etc/dconf/db/local.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/desktop/session/idle-delay</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="idle-delay is not equal to or less than the expected value">
To check the current idle time-out value, run the following command:
<pre>$ gsettings get org.gnome.desktop.session idle-delay</pre>
If properly configured, the output should be <tt>'uint32 <sub idref="inactivity_timeout_value"/>'</tt>.
To ensure that users cannot change the screensaver inactivity timeout setting, run the following:
<pre>$ grep idle-delay /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be <tt>/org/gnome/desktop/session/idle-delay</tt>
</ocil>
            <rationale>
A session time-out lock is a temporary action taken when a user stops work and moves away from
the immediate physical vicinity of the information system but does not logout because of the
temporary nature of the absence. Rather than relying on the user to manually lock their operating
system session prior to vacating the vicinity, GNOME3 can be configured to identify when
a user's session has idled and take action to initiate a session lock.
</rationale>
            <oval id="dconf_gnome_screensaver_idle_delay" value="inactivity_timeout_value"/>
            <ref nist="AC-11(a)" disa="57" pcidss="Req-8.1.8"/>
          </Rule>
          <Rule id="dconf_gnome_screensaver_idle_activation_enabled" severity="medium">
            <title>Enable GNOME3 Screensaver Idle Activation</title>
            <description>
To activate the screensaver in the GNOME3 desktop after a period of inactivity,
add or set <tt>idle-activation-enabled</tt> to <tt>true</tt> in 
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/desktop/screensaver]
idle_activation_enabled=true</pre>
Once the setting has been added, add a lock to
<tt>/etc/dconf/db/gdm.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/desktop/screensaver/idle-activation-enabled</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="idle_activation_enabled is not enabled or configured">
To check the screensaver mandatory use status, run the following command:
<pre>$ gsettings get org.gnome.desktop.screensaver idle-activation-enabled</pre>
If properly configured, the output should be <tt>true</tt>.
To ensure that users cannot disable the screensaver idle inactivity setting, run the following:
<pre>$ grep idle-activation-enabled /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be <tt>/org/gnome/desktop/screensaver/idle-activation-enabled</tt>
</ocil>
            <rationale>
A session time-out lock is a temporary action taken when a user stops work and moves away from the immediate
physical vicinity of the information system but does not logout because of the temporary nature of the absence.
Rather than relying on the user to manually lock their operating system session prior to vacating the vicinity,
GNOME desktops can be configured to identify when a user's session has idled and take action to initiate the
session lock.

Enabling idle activation of the screensaver ensures the screensaver will
be activated after the idle delay.  Applications requiring continuous,
real-time screen display (such as network management products) require the
login session does not have administrator rights and the display station is located in a
controlled-access area.
</rationale>
            <oval id="dconf_gnome_screensaver_idle_activation_enabled"/>
            <ref nist="AC-11(a)" disa="57" pcidss="Req-8.1.8"/>
          </Rule>
          <Rule id="dconf_gnome_screensaver_lock_enabled" severity="medium">
            <title>Enable GNOME3 Screensaver Lock After Idle Period</title>
            <description>
To activate locking of the screensaver in the GNOME3 desktop when it is activated,
add or set <tt>lock-enabled</tt> to <tt>true</tt> and <tt>lock-delay</tt> to <tt>0</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/desktop/screensaver]
lock-enabled=true
lock-delay=0
</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/gdm.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/desktop/screensaver/lock-enabled
/org/gnome/desktop/screensaver/lock-delay</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="screensaver locking is not enabled and/or the screensaver lock delay has not been set or configured correctly">
To check the status of the idle screen lock activation, run the following command:
<pre>$ gsettings get org.gnome.desktop.screensaver lock-enabled</pre>
If properly configured, the output should be <tt>true</tt>.
To check that the screen locks immediately when activated, run the following command:
<pre>$ gsettings get org.gnome.desktop.screensaver lock-delay</pre>
If properly configured, the output should be <tt>'uint32 0'</tt>.
To ensure that users cannot change how long until the the screensaver locks, run the following:
<pre>$ grep 'lock-enabled\|lock-delay' /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output for <tt>lock-enabled</tt> should be <tt>/org/gnome/desktop/screensaver/lock-enabled</tt>
If properly configured, the output for <tt>lock-delay</tt> should be <tt>/org/gnome/desktop/screensaver/lock-delay</tt>
</ocil>
            <rationale>
A session lock is a temporary action taken when a user stops work and moves away from the immediate physical vicinity
of the information system but does not want to logout because of the temporary nature of the absense.
</rationale>
            <oval id="dconf_gnome_screensaver_lock_enabled"/>
            <ref nist="AC-11(b)" disa="56" pcidss="Req-8.1.8"/>
          </Rule>
          <Rule id="dconf_gnome_screensaver_mode_blank">
            <title>Implement Blank Screensaver</title>
            <description>
To set the screensaver mode in the GNOME3 desktop to a blank screen,
add or set <tt>picture-uri</tt> to <tt>''</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/desktop/screensaver]
picture-uri=''
</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/gdm.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/desktop/screensaver/picture-uri</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="it is not set or configured properly">
To ensure the screensaver is configured to be blank, run the following command:
<pre>$ gsettings get org.gnome.desktop.screensaver picture-uri</pre>
If properly configured, the output should be <tt>''</tt>.
To ensure that users cannot set the screensaver background, run the following:
<pre>$ grep picture-uri /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be <tt>/org/gnome/desktop/screensaver/picture-uri</tt>
</ocil>
            <rationale>
Setting the screensaver mode to blank-only conceals the
contents of the display from passersby.
</rationale>
            <oval id="dconf_gnome_screensaver_mode_blank"/>
            <ref nist="AC-11(b)" disa="60" pcidss="Req-8.1.8"/>
          </Rule>
          <Rule id="dconf_gnome_screensaver_user_info">
            <title>Disable Full User Name on Splash Shield</title>
            <description>
By default when the screen is locked, the splash shield will show the user's
full name. This should be disabled to prevent casual observers from seeing
who has access to the system. This can be disabled by adding or setting
<tt>show-full-name-in-top-bar</tt> to <tt>false</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/desktop/screensaver]
show-full-name-in-top-bar=false
</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/gdm.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/desktop/screensaver/show-full-name-in-top-bar</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="it is not set or configured properly">
To ensure the splash screen is configured not to show user name, run the following command:
<pre>$ gsettings get org.gnome.desktop.screensaver show-full-name-in-top-bar</pre>
If properly configured, the output should be <tt>false</tt>.
To ensure that users cannot enable user name on the lock screen, run the following:
<pre>$ grep show-full-name-in-top-bar /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be <tt>/org/gnome/desktop/screensaver/show-full-name-in-top-bar</tt>
</ocil>
            <rationale>
Setting the splash screen to not reveal the logged in user's name
conceals who has access to the system from passersby.
</rationale>
            <oval id="dconf_gnome_screensaver_user_info"/>
          </Rule>
        </Group>
        <Group id="gnome_system_settings">
          <title>GNOME System Settings</title>
          <description>
GNOME provides configuration and functionality to a graphical desktop environment
that changes grahical configurations or allow a user to perform
actions that users normally would not be able to do in non-graphical mode such as
remote access configuration, power policies, Geo-location, etc.
Configuring such settings in GNOME will prevent accidential graphical configuration
changes by users from taking place.
</description>
          <Rule id="dconf_gnome_disable_ctrlaltdel_reboot" severity="high">
            <title>Disable Ctrl-Alt-Del Reboot Key Sequence in GNOME3</title>
            <description>
By default, <tt>GNOME</tt> will reboot the system if the <tt>Ctrl-Alt-Del</tt>
key sequence is pressed.
<br/>
To configure the system to ignore the <tt>Ctrl-Alt-Del</tt> key sequence from the
Graphical User Interface (GUI) instead of rebooting the system, add or set 
<tt>logout</tt> to <tt>''</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/settings-daemon/plugins/media-keys]
logout=''
</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/local.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/settings-daemon/plugins/media-keys/logout</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="GNOME3 is configured to reboot when Ctrl-Alt-Del is pressed">
To ensure the system is configured to ignore the Ctrl-Alt-Del sequence,
run the following command:
<pre>$ gsettings get org.gnome.settings-daemon.plugins.media-keys logout</pre>
If properly configured, the output should be <tt>''</tt>.
To ensure that users cannot enable the Ctrl-Alt-Del sequence, run the following:
<pre>$ grep logout /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be
<tt>/org/gnome/settings-daemon/plugins/media-keys/logout</tt>
</ocil>
            <rationale>
A locally logged-in user who presses Ctrl-Alt-Del, when at the console,
can reboot the system. If accidentally pressed, as could happen in
the case of mixed OS environment, this can create the risk of short-term
loss of availability of systems due to unintentional reboot.
</rationale>
            <oval id="dconf_gnome_disable_ctrlaltdel_reboot"/>
            <ref nist="AC-6" disa="366"/>
          </Rule>
          <Rule id="dconf_gnome_disable_user_admin" severity="high">
            <title>Disable User Administration in GNOME3</title>
            <description>
By default, <tt>GNOME</tt> will allow all users to have some administratrion
capability. This should be disabled so that non-administrative users are not making
configuration changes. To configure the system to disable user administration
capability in the Graphical User Interface (GUI), add or set
<tt>user-administration-disabled</tt> to <tt>true</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/desktop/lockdown]
user-administration-disabled=true
</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/local.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/desktop/lockdown/user-administration-disabled</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="user administration is not configured or disabled">
To ensure the GUI does not allow user administratrion capabilities to all users,
run the following command:
<pre>$ gsettings get org.gnome.desktop.lockdown user-administration-disabled</pre>
If properly configured, the output should be <tt>true</tt>.
To ensure that users cannot enable user administration, run the following:
<pre>$ grep user-administration /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be
<tt>/org/gnome/desktop/lockdown/user-administration-disabled</tt>
</ocil>
            <rationale>
Allowing all users to have some administratrive capabilities to the system through
the Graphical User Interface (GUI) when they would not have them otherwise could allow
unintended configuration changes as well as a nefarious user the capability to make system
changes such as adding new accounts, etc.
</rationale>
            <oval id="dconf_gnome_disable_user_admin"/>
          </Rule>
          <Rule id="dconf_gnome_disable_power_settings" severity="medium">
            <title>Disable Power Settings in GNOME3</title>
            <description>
By default, <tt>GNOME</tt> enables a power profile designed for mobile devices
with battery usage. While useful for mobile devices, this setting should be disabled
for all other systems. To configure the system to disable the power setting, add or set
<tt>active</tt> to <tt>false</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/settings-daemon/plugins/power]
active=false
</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/local.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/settings-daemon/plugins/power</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="power settings are enabled and are not disabled">
To ensure that the GUI power settings are not active, run the following command:
<pre>$ gsettings get org.gnome.settings-daemon.plugins.power active</pre>
If properly configured, the output should be <tt>false</tt>.
To ensure that users cannot enable the power settings, run the following:
<pre>$ grep power /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be
<tt>/org/gnome/settings-daemon/plugins/power/active</tt>
</ocil>
            <rationale>
Power settings should not be enabled on systems that are not mobile devices.
Enabling power settings on non-mobile devices could have unintended processing
consequences on standard systems.
</rationale>
            <oval id="dconf_gnome_disable_power_settings"/>
          </Rule>
          <Rule id="dconf_gnome_disable_geolocation" severity="medium">
            <title>Disable Geolocation in GNOME3</title>
            <description><tt>GNOME</tt> allows the clock and applications to track and access location 
information. This setting should be disabled as applications should not track
system location. To configure the system to disable location tracking, add or set
<tt>enabled</tt> to <tt>false</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/system/location]
enabled=false
</pre>
To configure the clock to disable location tracking, add or set
<tt>geolocation</tt> to <tt>false</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/clocks]
geolocation=false
</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/local.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/system/location/enabled
/org/gnome/clocks/geolocation</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="geolocation is enabled and not disabled">
To ensure that system location tracking is not active, run the following command:
<pre>$ gsettings get org.gnome.system.location enabled
$ gsettings get org.gnome.clocks geolocation</pre>
If properly configured, the output should be <tt>false</tt>.
To ensure that users cannot enable system location tracking, run the following:
<pre>$ grep location /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be
<tt>/org/gnome/system/location/enabled</tt> and <tt>/org/gnome/clocks/geolocation</tt>.
</ocil>
            <rationale>
Power settings should not be enabled on systems that are not mobile devices.
Enabling power settings on non-mobile devices could have unintended processing
consequences on standard systems.
</rationale>
            <oval id="dconf_gnome_disable_geolocation"/>
          </Rule>
        </Group>
        <Group id="gnome_network_settings">
          <title>GNOME Network Settings</title>
          <description>
GNOME network settings that apply to the graphical interface.
</description>
          <Rule id="dconf_gnome_disable_wifi_create" severity="medium">
            <title>Disable WIFI Network Connection Creation in GNOME3</title>
            <description><tt>GNOME</tt> allows users to create ad-hoc wireless connections through the
<tt>NetworkManager</tt> applet. Wireless connections should be disabled by
adding or setting <tt>disable-wifi-create</tt> to <tt>true</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/nm-applet]
disable-wifi-create=true
</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/local.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/nm-applet/disable-wifi-create</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="WIFI connections can be created through GNOME">
To ensure that WIFI connections caanot be created, run the following command:
<pre>$ gsettings get org.gnome.nm-applet disable-wifi-create</pre>
If properly configured, the output should be <tt>true</tt>.
To ensure that users cannot enable WIFI connection creation, run the following:
<pre>$ grep wifi-create /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be
<tt>/org/gnome/nm-applet/disable-wifi-create</tt>
</ocil>
            <rationale>
Wireless network connections should not be allowed to be configured by general
users on a given system as it could open the system to backdoor attacks.
</rationale>
            <oval id="dconf_gnome_disable_wifi_create"/>
          </Rule>
          <Rule id="dconf_gnome_disable_wifi_notification" severity="medium">
            <title>Disable WIFI Network Notification in GNOME3</title>
            <description>
By default, <tt>GNOME</tt> disables WIFI notification. This should be permanently set
so that users do not connect to a wireless network when the system finds one.
While useful for mobile devices, this setting should be disabled for all other systems.
To configure the system to disable the WIFI notication, add or set
<tt>suppress-wireless-networks-available</tt> to <tt>true</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/nm-applet]
suppress-wireless-networks-available=true
</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/local.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/nm-applet/suppress-wireless-networks-available</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="wireless network notification is enabled and not disabled">
To ensure that wireless network notification is disabled, run the following command:
<pre>$ gsettings get org.gnome.nm-applet suppress-wireless-networks-available</pre>
If properly configured, the output should be <tt>true</tt>.
To ensure that users cannot enable wireless notification, run the following:
<pre>$ grep wireless-networks-available /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be
<tt>/org/gnome/nm-applet/suppress-wireless-networks-available</tt>
</ocil>
            <rationale>
Wireless network connections should not be allowed to be configured by general
users on a given system as it could open the system to backdoor attacks.
</rationale>
            <oval id="dconf_gnome_disable_wifi_notification"/>
          </Rule>
        </Group>
        <Group id="gnome_remote_access_settings">
          <title>GNOME Remote Access Settings</title>
          <description>
GNOME remote access settings that apply to the graphical interface.
</description>
          <Rule id="dconf_gnome_remote_access_credential_prompt" severity="medium">
            <title>Require Credential Prompting for Remote Access in GNOME3</title>
            <description>
By default, <tt>GNOME</tt> does not require credentials when using <tt>Vino</tt> for
remote access. To configure the system to require remote credentials, add or set
<tt>authentication-methods</tt> to <tt>['vnc']</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/Vino]
authentication-methods=['vnc']
</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/local.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/Vino/authentication-methods</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="wireless network notification is enabled and not disabled">
To ensure that remote access requires credentials, run the following command:
<pre>$ gsettings get org.gnome.Vino authentication-methods</pre>
If properly configured, the output should be <tt>false</tt>.
To ensure that users cannot disable credentials for remote access, run the following:
<pre>$ grep authentication-methods /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be
<tt>/org/gnome/Vino/authentication-methods</tt>
</ocil>
            <rationale>
Username and password prompting is required for remote access. Otherwise, non-authorized
and nefarious users can access the system freely.
</rationale>
            <oval id="dconf_gnome_remote_access_credential_prompt"/>
          </Rule>
          <Rule id="dconf_gnome_remote_access_encryption" severity="medium">
            <title>Require Encryption for Remote Access in GNOME3</title>
            <description>
By default, <tt>GNOME</tt> requires encryption when using <tt>Vino</tt> for remote access.
To prevent remote access encryption from being disabled, add or set
<tt>require-encryption</tt> to <tt>true</tt> in
<tt>/etc/dconf/db/local.d/00-security-settings</tt>. For example:
<pre>[org/gnome/Vino]
require-encryption=true
</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/local.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/Vino/require-encryption</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="remote access connections are not encrypted">
To ensure that remote access connections are encrypted, run the following command:
<pre>$ gsettings get org.gnome.Vino require-encrpytion</pre>
If properly configured, the output should be <tt>true</tt>.
To ensure that users cannot disable encrypted remote connections, run the following:
<pre>$ grep require-encryption /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be
<tt>/org/gnome/Vino/require-encryption</tt>
</ocil>
            <rationale>
Open X displays allow an attacker to capture keystrokes and to execute commands
remotely.
</rationale>
            <oval id="dconf_gnome_remote_access_encryption"/>
            <ref nist="CM-2(1)(b)" disa="366"/>
          </Rule>
        </Group>
        <Group id="gnome_media_settings">
          <title>GNOME Media Settings</title>
          <description>
GNOME media settings that apply to the graphical interface.
</description>
          <Rule id="dconf_gnome_disable_automount">
            <title>Disable GNOME3 Automounting</title>
            <description>The system's default desktop environment, GNOME3, will mount
devices and removable media (such as DVDs, CDs and USB flash drives) whenever
they are inserted into the system. To disable automount and autorun within GNOME3, add or set
<tt>automount</tt> to <tt>false</tt>, <tt>automount-open</tt> to <tt>false</tt>, and
<tt>autorun-never</tt> to <tt>true</tt> in <tt>/etc/dconf/db/local.d/00-security-settings</tt>.
For example:
<pre>[org/gnome/desktop/media-handling]
automount=false
automount-open=false
autorun-never=true</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/local.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/desktop/media-handling/automount
/org/gnome/desktop/media-handling/auto-open
/org/gnome/desktop/media-handling/autorun-never</pre>
After the settings have been set, run <tt>dconf update</tt>.
</description>
            <ocil clause="GNOME automounting is not disabled">
These settings can be verified by running the following:
<pre>$ gsettings get org.gnome.desktop.media-handling automount
$ gsettings get org.gnome.desktop.media-handling automount-open
$ gsettings get org.gnome.desktop.media-handling autorun-never</pre>
If properly configured, the output for <tt>automount</tt> should be <tt>false</tt>.
If properly configured, the output for <tt>automount-open</tt>should be <tt>false</tt>.
If properly configured, the output for <tt>autorun-never</tt> should be <tt>true</tt>.
To ensure that users cannot enable automount and autorun in GNOME3, run the following:
<pre>$ grep 'automount\|autorun' /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output for <tt>automount</tt> should be <tt>/org/gnome/desktop/media-handling/automount</tt>
If properly configured, the output for <tt>automount-open</tt> should be <tt>/org/gnome/desktop/media-handling/auto-open</tt>
If properly configured, the output for <tt>autorun-never</tt> should be <tt>/org/gnome/desktop/media-handling/autorun-never</tt>
</ocil>
            <rationale>Disabling automatic mounting in GNOME3 can prevent
the introduction of malware via removable media.
It will, however, also prevent desktop users from legitimate use
of removable media.
</rationale>
            <oval id="dconf_gnome_disable_automount"/>
            <ref nist="AC-19(a),AC-19(d),AC-19(e)"/>
          </Rule>
          <Rule id="dconf_gnome_disable_thumbnailers">
            <title>Disable All GNOME3 Thumbnailers</title>
            <description>The system's default desktop environment, GNOME3, uses
a number of different thumbnailer programs to generate thumbnails
for any new or modified content in an opened folder. To disable the
execution of these thumbnail applications, add or set <tt>disable-all</tt>
to <tt>true</tt> in <tt>/etc/dconf/db/local.d/00-security-settings</tt>.
For example:
<pre>[org/gnome/desktop/thumbnailers]
disable-all=true</pre>
Once the settings have been added, add a lock to
<tt>/etc/dconf/db/local.d/locks/00-security-settings-lock</tt> to prevent user modification.
For example:
<pre>/org/gnome/desktop/thumbnailers/disable-all</pre>
After the settings have been set, run <tt>dconf update</tt>.
This effectively prevents an attacker from gaining access to a
system through a flaw in GNOME3's Nautilus thumbnail creators.
</description>
            <ocil clause="GNOME thumbnailers are not disabled">
These settings can be verified by running the following:
<pre>$ gsettings get org.gnome.desktop.thumbnailers disable-all</pre>
If properly configured, the output should be <tt>true</tt>.
To ensure that users cannot how long until the the screensaver locks, run the following:
<pre>$ grep disable-all /etc/dconf/db/local.d/locks/*</pre>
If properly configured, the output should be <tt>/org/gnome/desktop/thumbnailers/disable-all</tt>
</ocil>
            <rationale>An attacker with knowledge of a flaw in a GNOME3 thumbnailer application could craft a malicious
file to exploit this flaw. Assuming the attacker could place the malicious file on the local filesystem
(via a web upload for example) and assuming a user browses the same location using Nautilus, the
malicious file would exploit the thumbnailer with the potential for malicious code execution. It
is best to disable these thumbnailer applications unless they are explicitly required.</rationale>
            <oval id="dconf_gnome_disable_thumbnailers"/>
            <ref nist="CM-7"/>
          </Rule>
        </Group>
      </Group>
    </Group>
    <Group id="permissions" prodtype="all">
      <title>File Permissions and Masks</title>
      <description>Traditional Unix security relies heavily on file and
directory permissions to prevent unauthorized users from reading or
modifying files to which they should not have access. 
<br/><br/>
Several of the commands in this section search filesystems
for files or directories with certain characteristics, and are
intended to be run on every local partition on a given system.
When the variable <i>PART</i> appears in one of the commands below,
it means that the command is intended to be run repeatedly, with the
name of each local partition substituted for <i>PART</i> in turn.
<br/><br/>
The following command prints a list of all xfs partitions on the local
system, which is the default filesystem for Red Hat Enterprise Linux
7 installations:
<pre>$ mount -t xfs | awk '{print $3}'</pre>
For any systems that use a different
local filesystem type, modify this command as appropriate.
</description>
      <Group id="partitions">
        <title>Restrict Partition Mount Options</title>
        <description>System partitions can be mounted with certain options
that limit what files on those partitions can do. These options
are set in the <tt>/etc/fstab</tt> configuration file, and can be
used to make certain types of malicious behavior more difficult.</description>
        <Value id="var_removable_partition" type="string" operator="equals" interactive="0">
          <title>Removable Partition</title>
          <description>This value is used by the checks mount_option_nodev_removable_partitions, mount_option_nodev_removable_partitions,
and mount_option_nodev_removable_partitions to ensure that the correct mount options are set on partitions mounted from
removable media such as CD-ROMs, USB keys, and floppy drives. This value should be modified to reflect any removable
partitions that are required on the local system.</description>
          <value selector="dev_cdrom">/dev/cdrom</value>
        </Value>
        <Rule id="mount_option_nodev_nonroot_local_partitions">
          <title>Add nodev Option to Non-Root Local Partitions</title>
          <description>The <tt>nodev</tt> mount option prevents files from being
interpreted as character or block devices.
Legitimate character and block devices should exist only in
the <tt>/dev</tt> directory on the root partition or within chroot
jails built for system services.
<mount-desc-macro option="nodev" part="any non-root local partitions"/>
</description>
          <rationale>The <tt>nodev</tt> mount option prevents files from being
interpreted as character or block devices. The only legitimate location
for device files is the <tt>/dev</tt> directory located on the root partition.
The only exception to this is chroot jails, for which it is not advised
to set <tt>nodev</tt> on these filesystems.</rationale>
          <!-- <oval id="mount_option_nodev_nonroot_local_partitions" /> -->
          <ref nist="CM-7"/>
        </Rule>
        <Rule id="mount_option_nodev_removable_partitions">
          <title>Add nodev Option to Removable Media Partitions</title>
          <description>The <tt>nodev</tt> mount option prevents files from being
interpreted as character or block devices.
Legitimate character and block devices should exist only in
the <tt>/dev</tt> directory on the root partition or within chroot
jails built for system services.
<mount-desc-macro option="nodev" part="any removable media partitions"/>
</description>
          <rationale>The only legitimate location for device files is the <tt>/dev</tt> directory
located on the root partition. An exception to this is chroot jails, and it is
not advised to set <tt>nodev</tt> on partitions which contain their root
filesystems.</rationale>
          <!-- <oval id="mount_option_nodev_removable_partitions" value="var_removable_partition" /> -->
          <ref nist="AC-19(a),AC-19(d),AC-19(e),CM-7,MP-2"/>
        </Rule>
        <Rule id="mount_option_noexec_removable_partitions">
          <title>Add noexec Option to Removable Media Partitions</title>
          <description>The <tt>noexec</tt> mount option prevents the direct
execution of binaries on the mounted filesystem.
Preventing the direct execution of binaries from removable media (such as a USB
key) provides a defense against malicious software that may be present on such
untrusted media.
<mount-desc-macro option="noexec" part="any removable media partitions"/>
</description>
          <rationale>Allowing users to execute binaries from removable media such as USB keys exposes
the system to potential compromise.</rationale>
          <ocil clause="removable media partitions are present">
To verify that binaries cannot be directly executed from removable media, run the following command:
<pre>$ grep -v noexec /etc/fstab</pre>
The resulting output will show partitions which do not have the <tt>noexec</tt> flag. Verify all partitions
in the output are not removable media.
</ocil>
          <!-- <oval id="mount_option_noexec_removable_partitions" value="var_removable_partition" /> -->
          <ref nist="AC-19(a),AC-19(d),AC-19(e),CM-7,MP-2" disa="87"/>
        </Rule>
        <!-- investigate: this is like obsoleted by gvfs/DeviceKit-based mounting now -->
        <Rule id="mount_option_nosuid_removable_partitions">
          <title>Add nosuid Option to Removable Media Partitions</title>
          <description>The <tt>nosuid</tt> mount option prevents set-user-identifier (SUID)
and set-group-identifier (SGID) permissions from taking effect. These permissions
allow users to execute binaries with the same permissions as the owner and group
of the file respectively. Users should not be allowed to introduce SUID and SGID
files into the system via partitions mounted from removeable media.
<mount-desc-macro option="nosuid" part="any removable media partitions"/>
</description>
          <rationale>The presence of SUID and SGID executables should be tightly controlled. Allowing
users to introduce SUID or SGID binaries from partitions mounted off of
removable media would allow them to introduce their own highly-privileged programs.</rationale>
          <!-- <oval id="mount_option_nosuid_removable_partitions" value="var_removable_partition" /> -->
          <ref nist="AC-19(a),AC-19(d),AC-19(e),CM-7,MP-2"/>
        </Rule>
        <Rule id="mount_option_tmp_nodev">
          <title>Add nodev Option to /tmp</title>
          <description>
The <tt>nodev</tt> mount option can be used to prevent device files from
being created in <tt>/tmp</tt>.
Legitimate character and block devices should not exist
within temporary directories like <tt>/tmp</tt>.
<mount-desc-macro option="nodev" part="/tmp"/>
</description>
          <rationale>The only legitimate location for device files is the <tt>/dev</tt> directory
located on the root partition. The only exception to this is chroot jails.</rationale>
          <oval id="mount_option_tmp_nodev"/>
          <ref nist="CM-7, MP-2"/>
        </Rule>
        <Rule id="mount_option_tmp_noexec">
          <title>Add noexec Option to /tmp</title>
          <description>The <tt>noexec</tt> mount option can be used to prevent binaries
from being executed out of <tt>/tmp</tt>.
<mount-desc-macro option="noexec" part="/tmp"/>
</description>
          <rationale>Allowing users to execute binaries from world-writable directories
such as <tt>/tmp</tt> should never be necessary in normal operation and
can expose the system to potential compromise.</rationale>
          <!-- <oval id="mount_option_tmp_noexec" /> -->
          <ref nist="CM-7, MP-2"/>
        </Rule>
        <Rule id="mount_option_tmp_nosuid">
          <title>Add nosuid Option to /tmp</title>
          <description>The <tt>nosuid</tt> mount option can be used to prevent
execution of setuid programs in <tt>/tmp</tt>. The SUID and SGID permissions
should not be required in these world-writable directories.
<mount-desc-macro option="nosuid" part="/tmp"/>
</description>
          <rationale>The presence of SUID and SGID executables should be tightly controlled. Users
should not be able to execute SUID or SGID binaries from temporary storage partitions.</rationale>
          <oval id="mount_option_tmp_nosuid"/>
          <ref nist="CM-7, MP-2"/>
        </Rule>
        <Rule id="mount_option_dev_shm_nodev">
          <title>Add nodev Option to /dev/shm</title>
          <description>The <tt>nodev</tt> mount option can be used to prevent creation
of device files in <tt>/dev/shm</tt>.
Legitimate character and block devices should not exist
within temporary directories like <tt>/dev/shm</tt>.
<mount-desc-macro option="nodev" part="/dev/shm"/>
</description>
          <rationale>The only legitimate location for device files is the <tt>/dev</tt> directory
located on the root partition. The only exception to this is chroot jails.</rationale>
          <oval id="mount_option_dev_shm_nodev"/>
          <ref nist="CM-7, MP-2"/>
        </Rule>
        <Rule id="mount_option_dev_shm_noexec">
          <title>Add noexec Option to /dev/shm</title>
          <description>The <tt>noexec</tt> mount option can be used to prevent binaries
from being executed out of <tt>/dev/shm</tt>.
It can be dangerous to allow the execution of binaries
from world-writable temporary storage directories such as <tt>/dev/shm</tt>.
<mount-desc-macro option="noexec" part="/dev/shm"/>
</description>
          <rationale>Allowing users to execute binaries from world-writable directories
such as <tt>/dev/shm</tt> can expose the system to potential compromise.</rationale>
          <oval id="mount_option_dev_shm_noexec"/>
          <ref nist="CM-7, MP-2"/>
        </Rule>
        <Rule id="mount_option_dev_shm_nosuid">
          <title>Add nosuid Option to /dev/shm</title>
          <description>The <tt>nosuid</tt> mount option can be used to prevent execution
of setuid programs in <tt>/dev/shm</tt>.  The SUID and SGID permissions should not
be required in these world-writable directories.
<mount-desc-macro option="nosuid" part="/dev/shm"/>
</description>
          <rationale>The presence of SUID and SGID executables should be tightly controlled. Users
should not be able to execute SUID or SGID binaries from temporary storage partitions.</rationale>
          <oval id="mount_option_dev_shm_nosuid"/>
          <ref nist="CM-7, MP-2"/>
        </Rule>
        <Rule id="mount_option_var_tmp_bind">
          <title>Bind Mount /var/tmp To /tmp</title>
          <description>The <tt>/var/tmp</tt> directory is a world-writable directory.
Bind-mount it to <tt>/tmp</tt> in order to consolidate temporary storage into
one location protected by the same techniques as <tt>/tmp</tt>.  To do so, edit
<tt>/etc/fstab</tt> and add the following line:
<pre>/tmp     /var/tmp     none     rw,nodev,noexec,nosuid,bind     0 0</pre>
See the <tt>mount(8)</tt> man page for further explanation of bind mounting.
</description>
          <rationale>Having multiple locations for temporary storage is not required. Unless absolutely
necessary to meet requirements, the storage location <tt>/var/tmp</tt> should be bind mounted to
<tt>/tmp</tt> and thus share the same protections.</rationale>
          <oval id="mount_option_var_tmp_bind"/>
          <ref nist="CM-7"/>
        </Rule>
      </Group>
      <Group id="mounting">
        <title>Restrict Dynamic Mounting and Unmounting of
Filesystems</title>
        <description>Linux includes a number of facilities for the automated addition
and removal of filesystems on a running system.  These facilities may be
necessary in many environments, but this capability also carries some risk -- whether direct
risk from allowing users to introduce arbitrary filesystems,
or risk that software flaws in the automated mount facility itself could
allow an attacker to compromise the system.
<br/><br/>
This command can be used to list the types of filesystems that are
available to the currently executing kernel:
<pre>$ find /lib/modules/`uname -r`/kernel/fs -type f -name '*.ko'</pre>
If these filesystems are not required then they can be explicitly disabled
in a configuratio file in  <tt>/etc/modprobe.d</tt>.
</description>
        <Rule id="kernel_module_usb-storage_disabled">
          <title>Disable Modprobe Loading of USB Storage Driver</title>
          <description>
To prevent USB storage devices from being used, configure the kernel module loading system
to prevent automatic loading of the USB storage driver. 
<module-disable-macro module="usb-storage"/>
This will prevent the <tt>modprobe</tt> program from loading the <tt>usb-storage</tt>
module, but will not prevent an administrator (or another program) from using the
<tt>insmod</tt> program to load the module manually.</description>
          <ocil>
            <module-disable-check-macro module="usb-storage"/>
          </ocil>
          <rationale>USB storage devices such as thumb drives can be used to introduce
malicious software.</rationale>
          <oval id="kernel_module_usb-storage_disabled"/>
          <ref nist="AC-19(a),AC-19(d),AC-19(e)" disa="1250,85"/>
        </Rule>
        <Rule id="bootloader_nousb_argument">
          <title>Disable Kernel Support for USB via Bootloader Configuration</title>
          <description>
All USB support can be disabled by adding the <tt>nousb</tt>
argument to the kernel's boot loader configuration. To do so, 
append "nousb" to the kernel line in <tt>/etc/default/grub</tt> as shown:
<pre>kernel /vmlinuz-<i>VERSION</i> ro vga=ext root=/dev/VolGroup00/LogVol00 rhgb quiet nousb</pre>
<i><b>WARNING:</b> Disabling all kernel support for USB will cause problems for
systems with USB-based keyboards, mice, or printers. This configuration is
infeasible for systems which require USB devices, which is common.</i></description>
          <rationale>Disabling the USB subsystem within the Linux kernel at system boot will
protect against potentially malicious USB devices, although it is only practical
in specialized systems.
</rationale>
          <oval id="bootloader_nousb_argument"/>
          <ref nist="AC-19(a),AC-19(d),AC-19(e)" disa="1250"/>
        </Rule>
        <Rule id="bios_disable_usb_boot">
          <title>Disable Booting from USB Devices in Boot Firmware</title>
          <description>Configure the system boot firmware (historically called BIOS on PC
systems) to disallow booting from USB drives. 
</description>
          <rationale>Booting a system from a USB device would allow an attacker to
circumvent any security measures provided by the operating system. Attackers
could mount partitions and modify the configuration of the OS.</rationale>
          <ref nist="AC-19(a),AC-19(d),AC-19(e)" disa="1250"/>
        </Rule>
        <Rule id="bios_assign_password">
          <title>Assign Password to Prevent Changes to Boot Firmware Configuration</title>
          <description>Assign a password to the system boot firmware (historically called BIOS on PC 
systems) to require a password for any configuration changes.  
</description>
          <rationale>Assigning a password to the system boot firmware prevents anyone
with physical access from configuring the system to boot
from local media and circumvent the operating system's access controls.
For systems in physically secure locations, such as
a data center or Sensitive Compartmented Information Facility (SCIF), this risk must be weighed
against the risk of administrative personnel being unable to conduct recovery operations in
a timely fashion.
</rationale>
        </Rule>
        <Rule id="service_autofs_disabled">
          <title>Disable the Automounter</title>
          <description>The <tt>autofs</tt> daemon mounts and unmounts filesystems, such as user
home directories shared via NFS, on demand. In addition, autofs can be used to handle
removable media, and the default configuration provides the cdrom device as <tt>/misc/cd</tt>.
However, this method of providing access to removable media is not common, so autofs
can almost always be disabled if NFS is not in use. Even if NFS is required, it may be
possible to configure filesystem mounts statically by editing <tt>/etc/fstab</tt>
rather than relying on the automounter.
<br/><br/>
<systemd-service-macro enable="false" service="autofs"/>
</description>
          <ocil>
            <systemd-check-macro enable="false" service="autofs"/>
          </ocil>
          <rationale>Disabling the automounter permits the administrator to 
statically control filesystem mounting through <tt>/etc/fstab</tt>. 
</rationale>
          <!--oval id="service_autofs_disabled" /-->
          <ref nist="AC-19(a),AC-19(d),AC-19(e)" disa="1250,85"/>
        </Rule>
        <Rule id="kernel_module_cramfs_disabled">
          <title>Disable Mounting of <tt>cramfs</tt></title>
          <description><module-disable-macro module="cramfs"/>
This effectively prevents usage of this uncommon filesystem.
</description>
          <rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
          <!--oval id="kernel_module_cramfs_disabled" /-->
          <ref nist="CM-7"/>
        </Rule>
        <Rule id="kernel_module_freevxfs_disabled">
          <title>Disable Mounting of <tt>freevxfs</tt></title>
          <description><module-disable-macro module="freevxfs"/>
This effectively prevents usage of this uncommon filesystem.
</description>
          <rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
          <!--oval id="kernel_module_freevxfs_disabled" /-->
          <ref nist="CM-7"/>
        </Rule>
        <Rule id="kernel_module_jffs2_disabled">
          <title>Disable Mounting of <tt>jffs2</tt></title>
          <description><module-disable-macro module="jffs2"/>
This effectively prevents usage of this uncommon filesystem.
</description>
          <rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
          <!--oval id="kernel_module_jffs2_disabled" /-->
          <ref nist="CM-7"/>
        </Rule>
        <Rule id="kernel_module_hfs_disabled">
          <title>Disable Mounting of <tt>hfs</tt></title>
          <description><module-disable-macro module="hfs"/>
This effectively prevents usage of this uncommon filesystem.
</description>
          <rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
          <!--oval id="kernel_module_hfs_disabled" /-->
          <ref nist="CM-7"/>
        </Rule>
        <Rule id="kernel_module_hfsplus_disabled">
          <title>Disable Mounting of <tt>hfsplus</tt></title>
          <description><module-disable-macro module="hfsplus"/>
This effectively prevents usage of this uncommon filesystem.
</description>
          <rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
          <!--oval id="kernel_module_hfsplus_disabled" /-->
          <ref nist="CM-7"/>
        </Rule>
        <Rule id="kernel_module_squashfs_disabled">
          <title>Disable Mounting of <tt>squashfs</tt></title>
          <description><module-disable-macro module="squashfs"/>
This effectively prevents usage of this uncommon filesystem.
</description>
          <rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
          <!--oval id="kernel_module_squashfs_disabled" /-->
          <ref nist="CM-7"/>
        </Rule>
        <Rule id="kernel_module_udf_disabled">
          <title>Disable Mounting of <tt>udf</tt></title>
          <description><module-disable-macro module="udf"/>
This effectively prevents usage of this uncommon filesystem.
</description>
          <rationale>Linux kernel modules which implement filesystems that are not needed by the
local system should be disabled.</rationale>
          <!--oval id="kernel_module_udf_disabled" /-->
          <ref nist="CM-7"/>
        </Rule>
      </Group>
      <Group id="files">
        <title>Verify Permissions on Important Files and
Directories</title>
        <description>Permissions for many files on a system must be set
restrictively to ensure sensitive information is properly protected.
This section discusses important
permission restrictions which can be verified
to ensure that no harmful discrepancies have
arisen.</description>
        <Group id="permissions_important_account_files">
          <title>Verify Permissions on Files with Local Account Information and Credentials</title>
          <description>The default restrictive permissions for files which act as
important security databases such as <tt>passwd</tt>, <tt>shadow</tt>,
<tt>group</tt>, and <tt>gshadow</tt> files must be maintained.  Many utilities
need read access to the <tt>passwd</tt> file in order to function properly, but
read access to the <tt>shadow</tt> file allows malicious attacks against system
passwords, and should never be enabled.</description>
          <Rule id="userowner_shadow_file" severity="medium">
            <title>Verify User Who Owns <tt>shadow</tt> File</title>
            <description>
              <fileowner-desc-macro file="/etc/shadow" owner="root"/>
            </description>
            <ocil>
              <fileowner-check-macro file="/etc/shadow" owner="root"/>
            </ocil>
            <rationale>The <tt>/etc/shadow</tt> file contains the list of local
system accounts and stores password hashes. Protection of this file is
critical for system security. Failure to give ownership of this file
to root provides the designated owner with access to sensitive information
which could weaken the system security posture.</rationale>
            <!-- <oval id="userowner_shadow_file" /> -->
            <ref nist="AC-6" disa="" pcidss="Req-8.7.c"/>
          </Rule>
          <Rule id="groupowner_shadow_file" severity="medium">
            <title>Verify Group Who Owns <tt>shadow</tt> File</title>
            <description>
              <filegroupowner-desc-macro file="/etc/shadow" group="root"/>
            </description>
            <ocil>
              <filegroupowner-check-macro file="/etc/shadow" group="root"/>
            </ocil>
            <rationale>The <tt>/etc/shadow</tt> file stores password hashes. Protection of this file is
critical for system security.</rationale>
            <!-- <oval id="groupowner_shadow_file" /> -->
            <ref nist="AC-6" disa="" pcidss="Req-8.7.c"/>
          </Rule>
          <Rule id="file_permissions_etc_shadow" severity="medium">
            <title>Verify Permissions on <tt>shadow</tt> File</title>
            <description>
              <fileperms-desc-macro file="/etc/shadow" perms="0000"/>
            </description>
            <ocil>
              <fileperms-check-macro file="/etc/shadow" perms="----------"/>
            </ocil>
            <rationale>The <tt>/etc/shadow</tt> file contains the list of local
system accounts and stores password hashes. Protection of this file is
critical for system security. Failure to give ownership of this file
to root provides the designated owner with access to sensitive information
which could weaken the system security posture.</rationale>
            <!-- <oval id="file_permissions_etc_shadow" /> -->
            <ref nist="AC-6" disa="" pcidss="Req-8.7.c"/>
          </Rule>
          <Rule id="file_owner_etc_group" severity="medium">
            <title>Verify User Who Owns <tt>group</tt> File</title>
            <description>
              <fileowner-desc-macro file="/etc/group" owner="root"/>
            </description>
            <ocil>
              <fileowner-check-macro file="/etc/group" owner="root"/>
            </ocil>
            <rationale>The <tt>/etc/group</tt> file contains information regarding groups that are configured
on the system. Protection of this file is important for system security.</rationale>
            <!-- <oval id="file_owner_etc_group" /> -->
            <ref nist="AC-6" pcidss="Req-8.7.c"/>
          </Rule>
          <Rule id="file_groupowner_etc_group" severity="medium">
            <title>Verify Group Who Owns <tt>group</tt> File</title>
            <description>
              <filegroupowner-desc-macro file="/etc/group" group="root"/>
            </description>
            <ocil>
              <filegroupowner-check-macro file="/etc/group" group="root"/>
            </ocil>
            <rationale>The <tt>/etc/group</tt> file contains information regarding groups that are configured
on the system. Protection of this file is important for system security.</rationale>
            <!-- <oval id="file_groupowner_etc_group" /> -->
            <ref nist="AC-6" disa="" pcidss="Req-8.7.c"/>
          </Rule>
          <Rule id="file_permissions_etc_group" severity="medium">
            <title>Verify Permissions on <tt>group</tt> File</title>
            <description>
              <fileperms-desc-macro file="/etc/group" perms="644"/>
            </description>
            <ocil>
              <fileperms-check-macro file="/etc/group" perms="-rw-r--r--"/>
            </ocil>
            <rationale>The <tt>/etc/group</tt> file contains information regarding groups that are configured
on the system. Protection of this file is important for system security.</rationale>
            <!-- <oval id="file_permissions_etc_group" /> -->
            <ref nist="AC-6" disa="" pcidss="Req-8.7.c"/>
          </Rule>
          <Rule id="file_owner_etc_gshadow" severity="medium">
            <title>Verify User Who Owns <tt>gshadow</tt> File</title>
            <description>
              <fileowner-desc-macro file="/etc/gshadow" owner="root"/>
            </description>
            <ocil>
              <fileowner-check-macro file="/etc/gshadow" owner="root"/>
            </ocil>
            <rationale>The <tt>/etc/gshadow</tt> file contains group password hashes. Protection of this file
is critical for system security.</rationale>
            <!-- <oval id="file_owner_etc_gshadow" /> -->
            <ref nist="AC-6" disa=""/>
          </Rule>
          <Rule id="file_groupowner_etc_gshadow" severity="medium">
            <title>Verify Group Who Owns <tt>gshadow</tt> File</title>
            <description>
              <filegroupowner-desc-macro file="/etc/gshadow" group="root"/>
            </description>
            <ocil>
              <filegroupowner-check-macro file="/etc/gshadow" group="root"/>
            </ocil>
            <rationale>The <tt>/etc/gshadow</tt> file contains group password hashes. Protection of this file
is critical for system security.</rationale>
            <!-- <oval id="file_groupowner_etc_gshadow" /> -->
            <ref nist="AC-6" disa=""/>
          </Rule>
          <Rule id="file_permissions_etc_gshadow" severity="medium">
            <title>Verify Permissions on <tt>gshadow</tt> File</title>
            <description>
              <fileperms-desc-macro file="/etc/gshadow" perms="0000"/>
            </description>
            <ocil>
              <fileperms-check-macro file="/etc/gshadow" perms="----------"/>
            </ocil>
            <rationale>The <tt>/etc/gshadow</tt> file contains group password hashes. Protection of this file
is critical for system security.</rationale>
            <!-- <oval id="file_permissions_etc_gshadow" /> -->
            <ref nist="AC-6" disa=""/>
          </Rule>
          <Rule id="file_owner_etc_passwd" severity="medium">
            <title>Verify User Who Owns <tt>passwd</tt> File</title>
            <description>
              <fileowner-desc-macro file="/etc/passwd" owner="root"/>
            </description>
            <ocil>
              <fileowner-check-macro file="/etc/passwd" owner="root"/>
            </ocil>
            <rationale>The <tt>/etc/passwd</tt> file contains information about the users that are configured on
the system. Protection of this file is critical for system security.</rationale>
            <!-- <oval id="file_owner_etc_passwd" /> -->
            <ref nist="AC-6" disa="" pcidss="Req-8.7.c"/>
          </Rule>
          <Rule id="file_groupowner_etc_passwd" severity="medium">
            <title>Verify Group Who Owns <tt>passwd</tt> File</title>
            <description>
              <filegroupowner-desc-macro file="/etc/passwd" group="root"/>
            </description>
            <ocil>
              <filegroupowner-check-macro file="/etc/passwd" group="root"/>
            </ocil>
            <rationale>The <tt>/etc/passwd</tt> file contains information about the users that are configured on
the system. Protection of this file is critical for system security.</rationale>
            <!-- <oval id="file_groupowner_etc_passwd" /> -->
            <ref nist="AC-6" disa="" pcidss="Req-8.7.c"/>
          </Rule>
          <Rule id="file_permissions_etc_passwd" severity="medium">
            <title>Verify Permissions on <tt>passwd</tt> File</title>
            <description>
              <fileperms-desc-macro file="/etc/passwd" perms="0644"/>
            </description>
            <ocil>
              <fileperms-check-macro file="/etc/passwd" perms="-rw-r--r--"/>
            </ocil>
            <rationale>If the <tt>/etc/passwd</tt> file is writable by a group-owner or the
world the risk of its compromise is increased. The file contains the list of
accounts on the system and associated information, and protection of this file
is critical for system security.</rationale>
            <!-- <oval id="file_permissions_etc_passwd" /> -->
            <ref nist="AC-6" disa="" pcidss="Req-8.7.c"/>
          </Rule>
        </Group>
        <!-- pull /var/log permissions out of rsyslog discussion section? -->
        <Group id="permissions_within_important_dirs">
          <title>Verify File Permissions Within Some Important Directories</title>
          <description>Some directories contain files whose confidentiality or integrity
is notably important and may also be susceptible to misconfiguration over time, particularly if
unpackaged software is installed. As such,
an argument exists to verify that files' permissions within these directories remain
configured correctly and restrictively.
</description>
          <Rule id="file_permissions_library_dirs" severity="medium">
            <title>Verify that Shared Library Files Have Restrictive Permissions</title>
            <description>System-wide shared library files, which are linked to executables
during process load time or run time, are stored in the following directories
by default:
<pre>/lib
/lib64
/usr/lib
/usr/lib64
</pre>
Kernel modules, which can be added to the kernel during runtime, are
stored in <tt>/lib/modules</tt>. All files in these directories
should not be group-writable or world-writable. If any file in these
directories is found to be group-writable or world-writable, correct
its permission with the following command:
<pre>$ sudo chmod go-w <i>FILE</i></pre>
</description>
            <ocil clause="any of these files are group-writable or world-writable">
Shared libraries are stored in the following directories:
<pre>/lib
/lib64
/usr/lib
/usr/lib64
</pre>
To find shared libraries that are group-writable or world-writable,
run the following command for each directory <i>DIR</i> which contains shared libraries:
<pre>$ sudo find -L <i>DIR</i> -perm /022 -type f</pre>
</ocil>
            <rationale>Files from shared library directories are loaded into the address
space of processes (including privileged ones) or of the kernel itself at
runtime. Restrictive permissions are necessary to protect the integrity of the system.
</rationale>
            <ref nist="AC-6" disa=""/>
            <oval id="file_permissions_library_dirs"/>
          </Rule>
          <Rule id="file_ownership_library_dirs" severity="medium">
            <title>Verify that Shared Library Files Have Root Ownership</title>
            <description>System-wide shared library files, which are linked to executables
during process load time or run time, are stored in the following directories
by default:
<pre>/lib
/lib64
/usr/lib
/usr/lib64
</pre>
Kernel modules, which can be added to the kernel during runtime, are also
stored in <tt>/lib/modules</tt>. All files in these directories should be
owned by the <tt>root</tt> user. If the directory, or any file in these
directories, is found to be owned by a user other than root correct its
ownership with the following command:
<pre>$ sudo chown root <i>FILE</i></pre>
</description>
            <ocil clause="any of these files are not owned by root">
Shared libraries are stored in the following directories:
<pre>/lib
/lib64
/usr/lib
/usr/lib64
</pre>
For each of these directories, run the following command to find files not
owned by root:
<pre>$ sudo find -L <i>$DIR</i> \! -user root -exec chown root {} \;</pre>
</ocil>
            <rationale>Files from shared library directories are loaded into the address
space of processes (including privileged ones) or of the kernel itself at
runtime. Proper ownership is necessary to protect the integrity of the system.
</rationale>
            <ref nist="AC-6" disa=""/>
            <oval id="file_ownership_library_dirs"/>
          </Rule>
          <Rule id="file_permissions_binary_dirs" severity="medium">
            <title>Verify that System Executables Have Restrictive Permissions</title>
            <description>
System executables are stored in the following directories by default:
<pre>/bin
/sbin
/usr/bin
/usr/libexec
/usr/local/bin
/usr/local/sbin
/usr/sbin</pre>
All files in these directories should not be group-writable or world-writable.
If any file <i>FILE</i> in these directories is found
to be group-writable or world-writable, correct its permission with the
following command:
<pre>$ sudo chmod go-w <i>FILE</i></pre>
</description>
            <ocil clause="any system executables are found to be group or world writable">
System executables are stored in the following directories by default:
<pre>/bin
/sbin
/usr/bin
/usr/libexec
/usr/local/bin
/usr/local/sbin
/usr/sbin</pre>
To find system executables that are group-writable or world-writable,
run the following command for each directory <i>DIR</i> which contains system executables:
<pre>$ sudo find -L <i>DIR</i> -perm /022 -type f</pre>
</ocil>
            <rationale>System binaries are executed by privileged users, as well as system services,
and restrictive permissions are necessary to ensure execution of these programs
cannot be co-opted.
</rationale>
            <ref nist="AC-6" disa=""/>
            <oval id="file_permissions_binary_dirs"/>
          </Rule>
          <Rule id="file_ownership_binary_dirs" severity="medium">
            <title>Verify that System Executables Have Root Ownership</title>
            <description>
System executables are stored in the following directories by default:
<pre>/bin
/sbin
/usr/bin
/usr/libexec
/usr/local/bin
/usr/local/sbin
/usr/sbin</pre>
All files in these directories should be owned by the <tt>root</tt> user.
If any file <i>FILE</i> in these directories is found
to be owned by a user other than root, correct its ownership with the
following command:
<pre>$ sudo chown root <i>FILE</i></pre>
</description>
            <ocil clause="any system executables are found to not be owned by root">
System executables are stored in the following directories by default:
<pre>/bin
/sbin
/usr/bin
/usr/libexec
/usr/local/bin
/usr/local/sbin
/usr/sbin</pre>
To find system executables that are not owned by <tt>root</tt>,
run the following command for each directory <i>DIR</i> which contains system executables:
<pre>$ sudo find <i>DIR/</i> \! -user root</pre>
</ocil>
            <rationale>System binaries are executed by privileged users as well as system services,
and restrictive permissions are necessary to ensure that their
execution of these programs cannot be co-opted.
</rationale>
            <oval id="file_ownership_binary_dirs"/>
            <ref nist="AC-6" disa=""/>
          </Rule>
        </Group>
        <Rule id="dir_perms_world_writable_sticky_bits">
          <title>Verify that All World-Writable Directories Have Sticky Bits Set</title>
          <description>When the so-called 'sticky bit' is set on a directory,
only the owner of a given file may remove that file from the
directory. Without the sticky bit, any user with write access to a
directory may remove any file in the directory. Setting the sticky
bit prevents users from removing each other's files. In cases where
there is no reason for a directory to be world-writable, a better
solution is to remove that permission rather than to set the sticky
bit. However, if a directory is used by a particular application,
consult that application's documentation instead of blindly
changing modes.
<br/>
To set the sticky bit on a world-writable directory <i>DIR</i>, run the
following command:
<pre>$ sudo chmod +t <i>DIR</i></pre>
</description>
          <ocil clause="any world-writable directories are missing the sticky bit">
To find world-writable directories that lack the sticky bit, run the following command:
<pre>$ sudo find / -xdev -type d -perm 002 ! -perm 1000</pre>
</ocil>
          <rationale>
Failing to set the sticky bit on public directories allows unauthorized users to delete files in the directory structure.
<br/><br/>
The only authorized public directories are those temporary directories supplied with the system,
or those designed to be temporary file repositories.  The setting is normally reserved for directories
used by the system, by users for temporary file storage (such as <tt>/tmp</tt>), and for directories
requiring global read/write access.
</rationale>
          <!-- <oval id="dir_perms_world_writable_sticky_bits" /> -->
          <ref nist="AC-6" cis="1.1.17"/>
        </Rule>
        <Rule id="file_permissions_unauthorized_world_writable" severity="medium">
          <title>Ensure No World-Writable Files Exist</title>
          <description>It is generally a good idea to remove global (other) write
access to a file when it is discovered. However, check with
documentation for specific applications before making changes.
Also, monitor for recurring world-writable files, as these may be
symptoms of a misconfigured application or user
account.</description>
          <ocil clause="there is output">
To find world-writable files, run the following command:
<pre>$ sudo find / -xdev -type f -perm -002</pre>
</ocil>
          <rationale>
Data in world-writable files can be modified by any
user on the system. In almost all circumstances, files can be
configured using a combination of user and group permissions to
support whatever legitimate access is needed without the risk
caused by world-writable files.</rationale>
          <ref nist="AC-6"/>
          <!-- <oval id="file_permissions_unauthorized_world_writable" /> -->
        </Rule>
        <Rule id="file_permissions_unauthorized_sgid">
          <title>Ensure All SGID Executables Are Authorized</title>
          <description>The SGID (set group id) bit should be set only on files that were
installed via authorized means. A straightforward means of identifying
unauthorized SGID files is determine if any were not installed as part of an
RPM package, which is cryptographically verified. Investigate the origin
of any unpackaged SGID files.
</description>
          <ocil clause="there is output">
To find world-writable files, run the following command:
<pre>$ sudo find / -xdev -type f -perm -002</pre>
</ocil>
          <rationale>Executable files with the SGID permission run with the privileges of
the owner of the file. SGID files of uncertain provenance could allow for
unprivileged users to elevate privileges. The presence of these files should be
strictly controlled on the system.</rationale>
          <!-- <oval id="file_permissions_unauthorized_sgid" /> -->
          <ref nist="AC-6(1)"/>
        </Rule>
        <Rule id="file_permissions_unauthorized_suid">
          <title>Ensure All SUID Executables Are Authorized</title>
          <description>The SUID (set user id) bit should be set only on files that were
installed via authorized means. A straightforward means of identifying
unauthorized SGID files is determine if any were not installed as part of an
RPM package, which is cryptographically verified. Investigate the origin
of any unpackaged SUID files.
</description>
          <ocil>
To find world-writable files, run the following command:
<pre>$ sudo find / -xdev -type f -perm -002</pre>
</ocil>
          <rationale>Executable files with the SUID permission run with the privileges of
the owner of the file. SUID files of uncertain provenance could allow for
unprivileged users to elevate privileges. The presence of these files should be
strictly controlled on the system.</rationale>
          <!-- <oval id="file_permissions_unauthorized_suid" /> -->
          <ref nist="AC-6(1)"/>
        </Rule>
        <Rule id="no_files_unowned_by_user" severity="medium">
          <title>Ensure All Files Are Owned by a User</title>
          <description>If any files are not owned by a user, then the
cause of their lack of ownership should be investigated.
Following this, the files should be deleted or assigned to an
appropriate user.
</description>
          <ocil clause="files exist that are not owned by a valid user">
The following command will discover and print any
files on local partitions which do not belong to a valid user.
Run it once for each local partition <i>PART</i>:
<pre>$ sudo find <i>PART</i> -xdev -nouser -print</pre>
</ocil>
          <rationale>
Unowned files do not directly imply a security problem, but they are generally
a sign that something is amiss. They may
be caused by an intruder, by incorrect software installation or
draft software removal, or by failure to remove all files belonging
to a deleted account. The files should be repaired so they
will not cause problems when accounts are created in the future,
and the cause should be discovered and addressed.
</rationale>
          <!-- <oval id="no_files_unowned_by_user" /> -->
          <ref nist="AC-6,CM-6(b)" disa="366" ossrg="SRG-OS-000480-GPOS-00227" stigid="020360"/>
        </Rule>
        <Rule id="file_permissions_ungroupowned" severity="medium">
          <title>Ensure All Files Are Owned by a Group</title>
          <description>If any files are not owned by a group, then the
cause of their lack of group-ownership should be investigated.
Following this, the files should be deleted or assigned to an
appropriate group.
</description>
          <ocil clause="there is output">
The following command will discover and print any
files on local partitions which do not belong to a valid group.
Run it once for each local partition <i>PART</i>:
<pre>$ sudo find <i>PART</i> -xdev -nogroup -print</pre>
<br/>
Either remove all files and directories from the system that do not have a valid group,
or assign a valid group with the chgrp command:
<pre>$ sudo chgrp <i>group</i> <i>file</i></pre>
</ocil>
          <rationale>
Unowned files do not directly imply a security problem, but they are generally
a sign that something is amiss. They may
be caused by an intruder, by incorrect software installation or
draft software removal, or by failure to remove all files belonging
to a deleted account. The files should be repaired so they
will not cause problems when accounts are created in the future,
and the cause should be discovered and addressed.
</rationale>
          <oval id="file_permissions_ungroupowned"/>
          <ref nist="AC-6,IA-2" disa="366" ossrg="SRG-OS-000480-GPOS-00227" stigid="020370"/>
        </Rule>
        <Rule id="dir_perms_world_writable_system_owned">
          <title>Ensure All World-Writable Directories Are Owned by a System Account</title>
          <description>All directories in local partitions which are
world-writable should be owned by root or another
system account.  If any world-writable directories are not
owned by a system account, this should be investigated.
Following this, the files should be deleted or assigned to an
appropriate group.
</description>
          <ocil clause="there is output">
The following command will discover and print world-writable directories that
are not owned by a system account, given the assumption that only system
accounts have a uid lower than 500.  Run it once for each local partition <i>PART</i>:
<pre>$ sudo find <i>PART</i> -xdev -type d -perm -0002 -uid +499 -print</pre>
</ocil>
          <rationale>
Allowing a user account to own a world-writable directory is
undesirable because it allows the owner of that directory to remove
or replace any files that may be placed in the directory by other
users.
</rationale>
          <!-- <oval id="dir_perms_world_writable_system_owned" /> -->
          <ref nist="AC-6"/>
        </Rule>
      </Group>
      <Group id="restrictions">
        <title>Restrict Programs from Dangerous Execution Patterns</title>
        <description>The recommendations in this section are designed to
ensure that the system's features to protect against potentially
dangerous program execution are activated.
These protections are applied at the system initialization or
kernel level, and defend against certain types of badly-configured
or compromised programs.</description>
        <Group id="daemon_umask">
          <title>Daemon Umask</title>
          <description>The umask is a per-process setting which limits
the default permissions for creation of new files and directories.
The system includes initialization scripts which set the default umask
for system daemons.
</description>
          <Value id="var_umask_for_daemons" type="string" operator="equals" interactive="0">
            <title>daemon umask</title>
            <description>Enter umask for daemons</description>
            <value selector="">022</value>
            <value selector="022">022</value>
            <value selector="027">027</value>
          </Value>
          <Rule id="umask_for_daemons">
            <title>Set Daemon Umask</title>
            <description>The file <tt>/etc/init.d/functions</tt> includes initialization
parameters for most or all daemons started at boot time.  The default umask of
022 prevents creation of group- or world-writable files.  To set the default
umask for daemons, edit the following line, inserting 022 or 027 for
<i>UMASK</i> appropriately:
<pre>umask <i><sub idref="var_umask_for_daemons"/></i></pre>
Setting the umask to too restrictive a setting can cause serious errors at
runtime.  Many daemons on the system already individually restrict themselves to
a umask of 077 in their own init scripts.
</description>
            <ocil clause="it does not">
To check the value of the <tt>umask</tt>, run the following command:
<pre>$ grep umask /etc/init.d/functions</pre>
The output should show either <tt>022</tt> or <tt>027</tt>.
</ocil>
            <rationale>The umask influences the permissions assigned to files created by a
process at run time.  An unnecessarily permissive umask could result in files
being created with insecure permissions.</rationale>
            <!-- <oval id="umask_for_daemons" value="var_umask_for_daemons"/> -->
            <ref nist="AC-6"/>
          </Rule>
        </Group>
        <Group id="coredumps">
          <title>Disable Core Dumps</title>
          <description>A core dump file is the memory image of an executable
program when it was terminated by the operating system due to
errant behavior. In most cases, only software developers
legitimately need to access these files. The core dump files may
also contain sensitive information, or unnecessarily occupy large
amounts of disk space.
<br/><br/>
Once a hard limit is set in <tt>/etc/security/limits.conf</tt>, a
user cannot increase that limit within his or her own session. If access
to core dumps is required, consider restricting them to only
certain users or groups. See the <tt>limits.conf</tt> man page for more
information.
<br/><br/>
The core dumps of setuid programs are further protected. The
<tt>sysctl</tt> variable <tt>fs.suid_dumpable</tt> controls whether
the kernel allows core dumps from these programs at all. The default
value of 0 is recommended.</description>
          <Rule id="disable_users_coredumps">
            <title>Disable Core Dumps for All Users</title>
            <description>To disable core dumps for all users, add the following line to
<tt>/etc/security/limits.conf</tt>:
<pre>*     hard   core    0</pre>
</description>
            <ocil clause="it is not">
To verify that core dumps are disabled for all users, run the following command:
<pre>$ grep core /etc/security/limits.conf</pre>
The output should be:
<pre>*     hard   core    0</pre>
</ocil>
            <rationale>A core dump includes a memory image taken at the time the operating system
terminates an application. The memory image could contain sensitive data and is generally useful
only for developers trying to debug problems.</rationale>
            <oval id="disable_users_coredumps"/>
            <ref nist="SC-5"/>
          </Rule>
          <Rule id="sysctl_fs_suid_dumpable">
            <title>Disable Core Dumps for SUID programs</title>
            <description>
              <sysctl-desc-macro sysctl="fs.suid_dumpable" value="0"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="fs.suid_dumpable" value="0"/>
            </ocil>
            <rationale>The core dump of a setuid program is more likely to contain
sensitive data, as the program itself runs with greater privileges than the
user who initiated execution of the program.  Disabling the ability for any
setuid program to write a core file decreases the risk of unauthorized access
of such data.</rationale>
            <!-- <oval id="sysctl_fs_suid_dumpable" /> -->
            <ref nist="SI-11"/>
          </Rule>
        </Group>
        <Group id="enable_execshield_settings">
          <title>Enable ExecShield</title>
          <description>ExecShield describes kernel features that provide
protection against exploitation of memory corruption errors such as buffer
overflows. These features include random placement of the stack and other
memory regions, prevention of execution in memory that should only hold data,
and special handling of text buffers. These protections are enabled by default
on 32-bit systems and controlled through <tt>sysctl</tt> variables
<tt>kernel.exec-shield</tt> and <tt>kernel.randomize_va_space</tt>. On the latest
64-bit systems, <tt>kernel.exec-shield</tt> cannot be enabled or disabled with
<tt>sysctl</tt>.
</description>
          <Rule id="sysctl_kernel_exec_shield" severity="medium">
            <title>Enable ExecShield</title>
            <description>By default on Fedora 64-bit systems, ExecShield
is enabled and can only be disabled if the hardware does not support ExecShield
or is disabled in <tt>/etc/default/grub</tt>. For Fedora
32-bit systems, <tt>sysctl</tt> can be used to enable ExecShield.</description>
            <ocil clause="ExecShield is not supported by the hardware, is not enabled, or has been disabled by the kernel configuration.">
To verify ExecShield is enabled on 64-bit Fedora systems,
run the following command:
<pre>$ dmesg | grep '[NX|DX]*protection'</pre>
The output should not contain <tt>'disabled by kernel command line option'</tt>.
To verify that ExecShield has not been disabled in the kernel configuration,
run the following command:
<pre>$ sudo grep noexec /boot/grub2/grub.cfg</pre>
The output should not return <tt>noexec=off</tt>.
For 32-bit Fedora systems, run the following command:
<pre>$ sysctl kernel.exec-shield</pre>
The output should be:
<pre><sysctl-desc-macro sysctl="kernel.exec-shield" value="1"/></pre>
</ocil>
            <rationale>ExecShield uses the segmentation feature on all x86 systems
to prevent execution in memory higher than a certain address. It
writes an address as a limit in the code segment descriptor, to
control where code can be executed, on a per-process basis. When
the kernel places a process's memory regions such as the stack and
heap higher than this address, the hardware prevents execution in that
address range. This is enabled by default on the latest Red Hat and Fedora
systems if supported by the hardware.</rationale>
            <oval id="sysctl_kernel_exec_shield"/>
            <ref nist="SC-39" disa="2530"/>
          </Rule>
          <Rule id="sysctl_kernel_randomize_va_space" severity="medium">
            <title>Enable Randomized Layout of Virtual Address Space</title>
            <description>
              <sysctl-desc-macro sysctl="kernel.randomize_va_space" value="2"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="kernel.randomize_va_space" value="2"/>
            </ocil>
            <rationale> Address space layout randomization (ASLR) makes it more difficult
for an attacker to predict the location of attack code they have introduced
into a process's address space during an attempt at exploitation.  Additionally, ASLR
makes it more difficult for an attacker to know the location of existing code
in order to re-purpose it using return oriented programming (ROP) techniques.
</rationale>
            <!-- <oval id="sysctl_kernel_randomize_va_space" /> -->
            <ref nist="SC-30(2)"/>
          </Rule>
        </Group>
        <Group id="enable_nx">
          <title>Enable Execute Disable (XD) or No Execute (NX) Support on
x86 Systems</title>
          <description>Recent processors in the x86 family support the
ability to prevent code execution on a per memory page basis.
Generically and on AMD processors, this ability is called No
Execute (NX), while on Intel processors it is called Execute
Disable (XD). This ability can help prevent exploitation of buffer
overflow vulnerabilities and should be activated whenever possible.
Extra steps must be taken to ensure that this protection is
enabled, particularly on 32-bit x86 systems. Other processors, such
as Itanium and POWER, have included such support since inception
and the standard kernel for those platforms supports the
feature. This is enabled by default on the latest Red Hat and
Fedora systems if supported by the hardware.</description>
          <Rule id="install_PAE_kernel_on_x86-32">
            <title>Install PAE Kernel on Supported 32-bit x86 Systems</title>
            <description>Systems that are using the 64-bit x86 kernel package
do not need to install the kernel-PAE package because the 64-bit
x86 kernel already includes this support. However, if the system is
32-bit and also supports the PAE and NX features as
determined in the previous section, the kernel-PAE package should
be installed to enable XD or NX support:
<pre>$ sudo dnf install kernel-PAE</pre>
The installation process should also have configured the
bootloader to load the new kernel at boot. Verify this at reboot
and modify <tt>/etc/default/grub</tt> if necessary.</description>
            <warning category="hardware">The kernel-PAE package should not be
installed on older systems that do not support the XD or NX bit, as
this may prevent them from booting.</warning>
            <rationale>On 32-bit systems that support the XD or NX bit, the vendor-supplied
PAE kernel is required to enable either Execute Disable (XD) or No Execute (NX) support.</rationale>
            <ref nist="CM-6(b)"/>
            <!-- <oval id="install_PAE_kernel_on_x86-32" /> -->
          </Rule>
          <Rule id="bios_enable_execution_restrictions">
            <title>Enable NX or XD Support in the BIOS</title>
            <description>Reboot the system and enter the BIOS or Setup configuration menu.
Navigate the BIOS configuration menu and make sure that the option is enabled. The setting may be located
under a Security section. Look for Execute Disable (XD) on Intel-based systems and No Execute (NX)
on AMD-based systems.</description>
            <rationale>Computers with the ability to prevent this type of code execution frequently put an option in the BIOS that will
allow users to turn the feature on or off at will.</rationale>
            <ref nist="CM-6(b)"/>
          </Rule>
        </Group>
        <!--<Group id="enable_nx"> -->
        <Rule id="sysctl_kernel_dmesg_restrict">
          <title>Restrict Access to Kernel Message Buffer</title>
          <description>
            <sysctl-desc-macro sysctl="kernel.dmesg_restrict" value="1"/>
          </description>
          <ocil>
            <sysctl-check-macro sysctl="kernel.dmesg_restrict" value="1"/>
          </ocil>
          <rationale>Unprivileged access to the kernel syslog can expose sensitive kernel
address information.</rationale>
          <ref nist="SI-11" disa="1314"/>
          <!-- <oval id="sysctl_kernel_dmesg_restrict" /> -->
        </Rule>
      </Group>
      <!--<Group id="restrictions"> -->
    </Group>
    <Group id="selinux">
      <title>SELinux</title>
      <description>SELinux is a feature of the Linux kernel which can be
used to guard against misconfigured or compromised programs.
SELinux enforces the idea that programs should be limited in what
files they can access and what actions they can take.
<br/><br/>
The default SELinux policy, as configured on Red Hat Enterprise Linux 7, has been
sufficiently developed and debugged that it should be usable on
almost any Red Hat machine with minimal configuration and a small
amount of system administrator training. This policy prevents
system services - including most of the common network-visible
services such as mail servers, FTP servers, and DNS servers - from
accessing files which those services have no valid reason to
access. This action alone prevents a huge amount of possible damage
from network attacks against services, from trojaned software, and
so forth.
<br/><br/>
This guide recommends that SELinux be enabled using the
default (targeted) policy on every Red Hat system, unless that
system has unusual requirements which make a stronger policy
appropriate.
</description>
      <Value id="var_selinux_state" type="string" operator="equals" interactive="0">
        <title>SELinux state</title>
        <description>enforcing - SELinux security policy is enforced.
<br/>permissive - SELinux prints warnings instead of enforcing.
<br/>disabled - SELinux is fully disabled.</description>
        <value selector="">enforcing</value>
        <value selector="enforcing">enforcing</value>
        <value selector="permissive">permissive</value>
        <value selector="disabled">disabled</value>
      </Value>
      <Value id="var_selinux_policy_name" type="string" operator="equals" interactive="0">
        <title>SELinux policy</title>
        <description>Type of policy in use. Possible values are:
<br/>targeted - Only targeted network daemons are protected.
<br/>strict - Full SELinux protection.
<br/>mls - Multiple levels of security</description>
        <value selector="">targeted</value>
        <value selector="targeted">targeted</value>
        <value selector="mls">mls</value>
      </Value>
      <Rule id="enable_selinux_bootloader" severity="medium">
        <title>Ensure SELinux Not Disabled in /etc/default/grub</title>
        <description>SELinux can be disabled at boot time by an argument in
<tt>/etc/default/grub</tt>.
Remove any instances of <tt>selinux=0</tt> from the kernel arguments in that
file to prevent SELinux from being disabled at boot.
</description>
        <ocil clause="SELinux is disabled at boot time">
Inspect <tt>/etc/default/grub</tt> for any instances of <tt>selinux=0</tt>
in the kernel boot arguments.  Presence of <tt>selinux=0</tt> indicates
that SELinux is disabled at boot time.
</ocil>
        <rationale>
Disabling a major host protection feature, such as SELinux, at boot time prevents
it from confining system services at boot time.  Further, it increases
the chances that it will remain off during system operation.
</rationale>
        <!--oval id="enable_selinux_bootloader" /-->
        <ref nist="AC-3,AC-3(3),AC-6,AU-9" disa="22,32"/>
      </Rule>
      <Rule id="selinux_state" severity="medium">
        <title>Ensure SELinux State is Enforcing</title>
        <description>The SELinux state should be set to <tt><sub idref="var_selinux_state"/></tt> at
system boot time.  In the file <tt>/etc/selinux/config</tt>, add or correct the
following line to configure the system to boot into enforcing mode:
<pre>SELINUX=<sub idref="var_selinux_state"/></pre>
</description>
        <ocil clause="SELINUX is not set to enforcing">
Check the file <tt>/etc/selinux/config</tt> and ensure the following line appears:
<pre>SELINUX=<sub idref="var_selinux_state"/></pre>
</ocil>
        <rationale>
Setting the SELinux state to enforcing ensures SELinux is able to confine
potentially compromised processes to the security policy, which is designed to
prevent them from causing damage to the system or further elevating their
privileges.
</rationale>
        <!--oval id="selinux_state" value="var_selinux_state"/-->
        <ref nist="AC-3,AC-3(3),AC-4,AC-6,AU-9" disa=""/>
      </Rule>
      <Rule id="selinux_policytype">
        <title>Configure SELinux Policy</title>
        <description>The SELinux <tt>targeted</tt> policy is appropriate for
general-purpose desktops and servers, as well as systems in many other roles.
To configure the system to use this policy, add or correct the following line
in <tt>/etc/selinux/config</tt>:
<pre>SELINUXTYPE=<sub idref="var_selinux_policy_name"/></pre>
Other policies, such as <tt>mls</tt>, provide additional security labeling
and greater confinement but are not compatible with many general-purpose
use cases.
</description>
        <ocil clause="it does not">
Check the file <tt>/etc/selinux/config</tt> and ensure the following line appears:
<pre>SELINUXTYPE=<sub idref="var_selinux_policy_name"/></pre>
</ocil>
        <rationale>
Setting the SELinux policy to <tt>targeted</tt> or a more specialized policy
ensures the system will confine processes that are likely to be
targeted for exploitation, such as network or system services.

Note: During the development or debugging of SELinux modules, it is common to
temporarily place non-production systems in <tt>permissive</tt> mode. In such
temporary cases, SELinux policies should be developed, and once work
is completed, the system should be reconfigured to
<tt><sub idref="var_selinux_policy_name"/></tt>.
</rationale>
        <!--oval id="selinux_policytype" value="var_selinux_policy_name"/-->
        <ref nist="AC-3,AC-3(3),AC-4,AC-6,AU-9" disa=""/>
      </Rule>
      <Rule id="package_setroubleshoot_removed">
        <title>Uninstall setroubleshoot Package</title>
        <description>The SETroubleshoot service notifies desktop users of SELinux
denials. The service provides information around configuration errors,
unauthorized intrusions, and other potential errors.
<dnf-macro install="false" package="setroubleshoot"/>
</description>
        <rationale>The SETroubleshoot service is an unnecessary daemon to
have running on a server</rationale>
        <ident cce=""/>
        <!--oval id="package_setroubleshoot_removed" /-->
      </Rule>
      <Rule id="package_mcstrans_removed">
        <title>Uninstall mcstrans Package</title>
        <description>The <tt>mcstransd</tt> daemon provides category label information
to client processes requesting information. The label translations are defined
in <tt>/etc/selinux/targeted/setrans.conf</tt>.
<dnf-macro install="false" package="mcstrans"/>
</description>
        <rationale>Since this service is not used very often, disable it to reduce the
amount of potentially vulnerable code running on the system.

NOTE: This rule was added in support of the CIS RHEL6 v1.2.0 benchmark. Please
note that Red Hat does not feel this rule is security relevant.
</rationale>
        <ident cce=""/>
        <!--oval id="package_mcstrans_removed" /-->
      </Rule>
      <Rule id="selinux_confinement_of_daemons" severity="medium">
        <title>Ensure No Daemons are Unconfined by SELinux</title>
        <description>
Daemons for which the SELinux policy does not contain rules will inherit the
context of the parent process. Because daemons are launched during
startup and descend from the <tt>init</tt> process, they inherit the <tt>initrc_t</tt> context.
<br/>
<br/>
To check for unconfined daemons, run the following command:
<pre>$ sudo ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{ print $NF }'</pre>
It should produce no output in a well-configured system.
</description>
        <rationale>
Daemons which run with the <tt>initrc_t</tt> context may cause AVC denials,
or allow privileges that the daemon does not require.
</rationale>
        <ref nist="AC-6,AU-9,CM-7"/>
      </Rule>
      <Rule id="selinux_all_devicefiles_labeled">
        <title>Ensure No Device Files are Unknown to SELinux</title>
        <description>Device files, which are used for communication with important
system resources, should be labeled with proper SELinux types. If any device
files carry the SELinux type <tt>device_t</tt>, report the bug so that policy can be corrected. Supply information about what the device is and what programs use it.
</description>
        <ocil clause="there is output">To check for unknown device files, run the following command:
<pre>$sudo find /dev -context *:device_t:* \( -type c -o -type b \) -printf "%p %Z\n"</pre>
It should produce no output in a well-configured system.</ocil>
        <rationale>
If a device file carries the SELinux type <tt>device_t</tt>, then SELinux
cannot properly restrict access to the device file.
</rationale>
        <!--oval id="selinux_all_devicefiles_labeled" /-->
        <ref nist="AC-6,AU-9,CM-7" disa="22,32"/>
      </Rule>
    </Group>
    <Group id="accounts" prodtype="all">
      <title>Account and Access Control</title>
      <description>In traditional Unix security, if an attacker gains
shell access to a certain login account, they can perform any action
or access any file to which that account has access. Therefore,
making it more difficult for unauthorized people to gain shell
access to accounts, particularly to privileged accounts, is a
necessary part of securing a system. This section introduces
mechanisms for restricting access to accounts under
<product-name-macro/>.</description>
      <Group id="accounts-restrictions" prodtype="all">
        <title>Protect Accounts by Restricting Password-Based Login</title>
        <description>Conventionally, Unix shell accounts are accessed by
providing a username and password to a login program, which tests
these values for correctness using the <tt>/etc/passwd</tt> and
<tt>/etc/shadow</tt> files. Password-based login is vulnerable to
guessing of weak passwords, and to sniffing and man-in-the-middle
attacks against passwords entered over a network or at an insecure
console. Therefore, mechanisms for accessing accounts by entering
usernames and passwords should be restricted to those which are
operationally necessary.</description>
        <Group id="root_logins">
          <title>Restrict Root Logins</title>
          <description>
Direct root logins should be allowed only for emergency use.
In normal situations, the administrator should access the system
via a unique unprivileged account, and then use <tt>su</tt> or <tt>sudo</tt> to execute
privileged commands. Discouraging administrators from accessing the
root account directly ensures an audit trail in organizations with
multiple administrators. Locking down the channels through which
root can connect directly also reduces opportunities for
password-guessing against the root account. The <tt>login</tt> program
uses the file <tt>/etc/securetty</tt> to determine which interfaces
should allow root logins.

The virtual devices <tt>/dev/console</tt>
and <tt>/dev/tty*</tt> represent the system consoles (accessible via
the Ctrl-Alt-F1 through Ctrl-Alt-F6 keyboard sequences on a default
installation). The default securetty file also contains <tt>/dev/vc/*</tt>.
These are likely to be deprecated in most environments, but may be retained
for compatibility. Furthermore, <tt>/dev/hvc*</tt> represent virtio-serial
consoles, <tt>/dev/hvsi*</tt> IBM pSeries serial consoles, and finally
<tt>/dev/xvc0</tt> Xen virtual console. Root should also be prohibited
from connecting via network protocols. Other sections of this document
include guidance describing how to prevent root from logging in via SSH.
</description>
          <Rule id="no_direct_root_logins" severity="medium">
            <title>Direct root Logins Not Allowed</title>
            <description>To further limit access to the <tt>root</tt> account, administrators
can disable root logins at the console by editing the <tt>/etc/securetty</tt> file.
This file lists all devices the root user is allowed to login to. If the file does
not exist at all, the root user can login through any communication device on the
system, whether via the console or via a raw network interface. This is dangerous
as user can login to his machine as root via Telnet, which sends the password in
plain text over the network. By default, Fedora's <tt>/etc/securetty</tt> file
only allows the root user to login at the console physically attached to the
machine. To prevent root from logging in, remove the contents of this file.
To prevent direct root logins, remove the contents of this file by typing the
following command:
<pre>
echo &gt; /etc/securetty
</pre>
</description>
            <ocil clause="the /etc/securetty file is not empty">
To ensure root may not directly login to the system over physical consoles,
run the following command:
<pre>cat /etc/securetty</pre>
If any output is returned, this is a finding.
</ocil>
            <rationale>
Disabling direct root logins ensures proper accountability and multifactor
authentication to privileged accounts. Users will first login, then escalate
to privileged (root) access via su / sudo. This scenario is nowadays required
by security standards.
</rationale>
            <oval id="no_direct_root_logins"/>
            <ref nist="IA-2(1)"/>
          </Rule>
          <Rule id="securetty_root_login_console_only" severity="medium">
            <title>Virtual Console Root Logins Restricted</title>
            <description>
To restrict root logins through the (deprecated) virtual console devices,
ensure lines of this form do not appear in <tt>/etc/securetty</tt>:
<pre>vc/1
vc/2
vc/3
vc/4</pre>
</description>
            <ocil clause="root login over virtual console devices is permitted">
To check for virtual console entries which permit root login, run the
following command:
<pre># grep ^vc/[0-9] /etc/securetty</pre>
If any output is returned, then root logins over virtual console devices is permitted.
</ocil>
            <rationale>
Preventing direct root login to virtual console devices
helps ensure accountability for actions taken on the system
using the root account.
</rationale>
            <oval id="securetty_root_login_console_only"/>
            <ref nist="AC-6(2)" disa="770"/>
          </Rule>
          <Rule id="restrict_serial_port_logins">
            <title>Serial Port Root Logins Restricted</title>
            <description>To restrict root logins on serial ports,
ensure lines of this form do not appear in <tt>/etc/securetty</tt>:
<pre>ttyS0
ttyS1</pre>
<!-- TODO: discussion/description of serial port -->
</description>
            <ocil clause="root login over serial ports is permitted">
To check for serial port entries which permit root login,
run the following command:
<pre># grep ^ttyS/[0-9] /etc/securetty</pre>
If any output is returned, then root login over serial ports is permitted.
</ocil>
            <rationale>
Preventing direct root login to serial port interfaces
helps ensure accountability for actions taken on the systems
using the root account.
</rationale>
            <oval id="restrict_serial_port_logins"/>
            <ref nist="AC-6(2)" disa="770"/>
          </Rule>
          <Rule id="no_root_webbrowsing">
            <title>Web Browser Use for Administrative Accounts Restricted</title>
            <description>
Enforce policy requiring administrative accounts use web browsers only for
local service administration.
</description>
            <ocil clause="this is not the case">
Check the <tt>root</tt> home directory for a <tt>.mozilla</tt> directory. If
one exists, ensure browsing is limited to local service administration.
</ocil>
            <rationale>
If a browser vulnerability is exploited while running with administrative privileges,
the entire system could be compromised. Specific exceptions for local service
administration should be documented in site-defined policy.
</rationale>
          </Rule>
          <Rule id="no_shelllogin_for_systemaccounts" severity="medium">
            <title>System Accounts Do Not Run a Shell Upon Login</title>
            <description>
Some accounts are not associated with a human user of the system, and exist to
perform some administrative function. Should an attacker be able to log into
these accounts, they should not be granted access to a shell.
<br/><br/>
The login shell for each local account is stored in the last field of each line
in <tt>/etc/passwd</tt>. System accounts are those user accounts with a user ID
less than UID_MIN, where value of the UID_MIN directive is set in
/etc/login.defs configuration file. In the default configuration UID_MIN is set
to 1000, thus system accounts are those user accounts with a user ID less than
1000. The user ID is stored in the third field. If any system account
<i>SYSACCT</i> (other than root) has a login shell, disable it with the
command: <pre># usermod -s /sbin/nologin <i>SYSACCT</i></pre>
</description>
            <ocil clause="any system account (other than root) has a login shell">
To obtain a listing of all users, their UIDs, and their shells, run the
command: <pre>$ awk -F: '{print $1 ":" $3 ":" $7}' /etc/passwd</pre> Identify
the system accounts from this listing. These will primarily be the accounts
with UID numbers less than UID_MIN, other than root. Value of the UID_MIN
directive is set in /etc/login.defs configuration file. In the default
configuration UID_MIN is set to 1000.
</ocil>
            <rationale>
Ensuring shells are not given to system accounts upon login makes it more
difficult for attackers to make use of system accounts.
</rationale>
            <warning category="functionality">
Do not perform the steps in this section on the root account. Doing so might
cause the system to become inaccessible.
</warning>
            <oval id="no_shelllogin_for_systemaccounts"/>
            <ref nist="AC-2,CM-6(b)" disa="178"/>
          </Rule>
          <Rule id="accounts_no_uid_except_zero" severity="medium">
            <title>Only Root Has UID 0</title>
            <description>
If any account other than root has a UID of 0,
this misconfiguration should be investigated and the
accounts other than root should be removed or have their UID changed.
</description>
            <ocil clause="any account other than root has a UID of 0">
To list all password file entries for accounts with UID 0, run the following command:
<pre># awk -F: '($3 == "0") {print}' /etc/passwd</pre>
This should print only one line, for the user root.
</ocil>
            <rationale>
An account has root authority if it has a UID of 0. Multiple accounts
with a UID of 0 afford more opportunity for potential intruders to
guess a password for a privileged account. Proper configuration of
sudo is recommended to afford multiple system administrators
access to root privileges in an accountable manner.
</rationale>
            <oval id="accounts_no_uid_except_zero"/>
            <ref nist="AC-6,IA-2(1)" disa="366"/>
          </Rule>
          <Rule id="root_path_default">
            <title>Root Path Is Vendor Default</title>
            <description>
Assuming root shell is bash, edit the following files:
<pre>~/.profile</pre>
<pre>~/.bashrc</pre>
Change any <tt>PATH</tt> variables to the vendor default for root and remove any
empty <tt>PATH</tt> entries or references to relative paths.
</description>
            <ocil clause="any of these conditions are not met">
To view the root user's <tt>PATH</tt>, run the following command:
<pre># env | grep PATH</pre>
If correctly configured, the <tt>PATH</tt> must: use vendor default settings,
have no empty entries, and have no entries beginning with a character
other than a slash (/).
</ocil>
            <rationale>
The root account's executable search path must be the vendor default, and must
contain only absolute paths.
</rationale>
          </Rule>
          <!--
     This is redundant to the previous rule, which insists that the
     root path is the vendor default.

<Rule id="root_path_no_wwdir">
<title>Root Path Must Not Contain World-Writable Directories</title>
<description>
If a world-writable directory is found in the <tt>PATH</tt>, remove the
world-writable permission for that directory with the following command:
<pre># chmod o-w <i>/dir</i></pre>
Alternately, remove the world-writable directory from the <tt>PATH</tt>.
</description>
<ocil clause="any world-writable directories are found">
World-writable permissions on directories in root's path can be checked
with the following command:
<pre># ls -ld 'echo $PATH | sed "s/:/ /g"'</pre>
</ocil>
<rationale>
If the root search path contains a world-writable directory, malicious software
could be placed in the path.
</rationale>
<ref disa="366" />
</Rule> -->
        </Group>
        <Group id="password_storage">
          <title>Proper Storage and Existence of Password Hashes</title>
          <description>
By default, password hashes for local accounts are stored
in the second field (colon-separated) in
<tt>/etc/shadow</tt>. This file should be readable only by
processes running with root credentials, preventing users from
casually accessing others' password hashes and attempting
to crack them.
However, it remains possible to misconfigure the system
and store password hashes
in world-readable files such as <tt>/etc/passwd</tt>, or
to even store passwords themselves in plaintext on the system.
Using system-provided tools for password change/creation
should allow administrators to avoid such misconfiguration.
</description>
          <Rule id="no_empty_passwords" severity="high">
            <title>Log In to Accounts With Empty Password Impossible</title>
            <description>If an account is configured for password authentication
but does not have an assigned password, it may be possible to log
into the account without authentication. Remove any instances of the <tt>nullok</tt>
option in <tt>/etc/pam.d/system-auth</tt> to
prevent logins with empty passwords.
</description>
            <ocil clause="NULL passwords can be used">
To verify that null passwords cannot be used, run the following command:
<pre># grep nullok /etc/pam.d/system-auth</pre>
If this produces any output, it may be possible to log into accounts
with empty passwords.
</ocil>
            <rationale>
If an account has an empty password, anyone could log in and
run commands with the privileges of that account. Accounts with
empty passwords should never be used in operational
environments.
</rationale>
            <oval id="no_empty_passwords"/>
            <ref nist="IA-5(b),IA-5(c),IA-5(1)(a)"/>
          </Rule>
          <Rule id="accounts_password_all_shadowed" severity="medium">
            <title>Password Hashes For Each Account Shadowed</title>
            <description>
If any password hashes are stored in <tt>/etc/passwd</tt> (in the second field,
instead of an <tt>x</tt>), the cause of this misconfiguration should be
investigated.  The account should have its password reset and the hash should be
properly stored, or the account should be deleted entirely.
</description>
            <ocil clause="any stored hashes are found in /etc/passwd">
To check that no password hashes are stored in
<tt>/etc/passwd</tt>, run the following command:
<pre># awk -F: '($2 != "x") {print}' /etc/passwd</pre>
If it produces any output, then a password hash is
stored in <tt>/etc/passwd</tt>.
</ocil>
            <rationale>
The hashes for all user account passwords should be stored in
the file <tt>/etc/shadow</tt> and never in <tt>/etc/passwd</tt>,
which is readable by all users.
</rationale>
            <oval id="accounts_password_all_shadowed"/>
            <ref nist="IA-5(h)" disa="201"/>
          </Rule>
          <Rule id="gid_passwd_group_same">
            <title>All GIDs referenced in /etc/passwd Defined in /etc/group</title>
            <description>
Add a group to the system for each GID referenced without a corresponding group.
</description>
            <ocil clause="there is output">
To ensure all GIDs referenced in <tt>/etc/passwd</tt> are defined in <tt>/etc/group</tt>,
run the following command:
<pre># pwck -qr</pre>
There should be no output.
</ocil>
            <rationale>
Inconsistency in GIDs between <tt>/etc/passwd</tt> and <tt>/etc/group</tt> could lead to a user having unintended rights.
</rationale>
            <oval id="gid_passwd_group_same"/>
            <ref disa="366"/>
          </Rule>
          <Rule id="no_netrc_files" severity="medium">
            <title>netrc Files Do Not Exist</title>
            <description>The <tt>.netrc</tt> files contain login information
used to auto-login into FTP servers and reside in the user's home
directory. These files may contain unencrypted passwords to
remote FTP servers making them susceptible to access by unauthorized
users and should not be used.  Any <tt>.netrc</tt> files should be removed.
</description>
            <ocil clause="any .netrc files exist">
To check the system for the existence of any <tt>.netrc</tt> files,
run the following command:
<pre># find /home -xdev -name .netrc</pre>
<!-- needs fixup to limit search to home dirs -->
</ocil>
            <rationale>
Unencrypted passwords for remote FTP servers may be stored in <tt>.netrc</tt>
files. DoD policy requires passwords be encrypted in storage and not used
in access scripts.
</rationale>
            <oval id="no_netrc_files"/>
            <ref nist="IA-5(h)" disa="196"/>
          </Rule>
        </Group>
        <Group id="password_expiration">
          <title>Set Password Expiration Parameters</title>
          <description>The file <tt>/etc/login.defs</tt> controls several
password-related settings. Programs such as <tt>passwd</tt>,
<tt>su</tt>, and <tt>login</tt> consult <tt>/etc/login.defs</tt> to determine
behavior with regard to password aging, expiration warnings,
and length. See the man page <tt>login.defs(5)</tt> for more information.
<br/><br/>
Users should be forced to change their passwords, in order to
decrease the utility of compromised passwords. However, the need to
change passwords often should be balanced against the risk that
users will reuse or write down passwords if forced to change them
too often. Forcing password changes every 90-360 days, depending on
the environment, is recommended. Set the appropriate value as
<tt>PASS_MAX_DAYS</tt> and apply it to existing accounts with the
<tt>-M</tt> flag.
<br/><br/>
The <tt>PASS_MIN_DAYS</tt> (<tt>-m</tt>) setting prevents password
changes for 7 days after the first change, to discourage password
cycling. If you use this setting, train users to contact an administrator
for an emergency password change in case a new password becomes
compromised. The <tt>PASS_WARN_AGE</tt> (<tt>-W</tt>) setting gives
users 7 days of warnings at login time that their passwords are about to expire.
<br/><br/>
For example, for each existing human user <i>USER</i>, expiration parameters
could be adjusted to a 180 day maximum password age, 7 day minimum password
age, and 7 day warning period with the following command:
<pre># chage -M 180 -m 7 -W 7 USER</pre>
</description>
          <Value id="var_accounts_password_minlen_login_defs" type="number">
            <title>minimum password length</title>
            <description>Minimum number of characters in password</description>
            <warning category="general">This will only check new passwords</warning>
            <value selector="">12</value>
            <value selector="6">6</value>
            <!-- NIST 800-53 requires 1 in a million using brute force which translates to six numbers -->
            <value selector="8">8</value>
            <value selector="10">10</value>
            <value selector="12">12</value>
            <value selector="14">14</value>
          </Value>
          <Value id="var_accounts_maximum_age_login_defs" type="number">
            <title>maximum password age</title>
            <description>Maximum age of password in days</description>
            <warning category="general">This will only apply to newly created accounts</warning>
            <value selector="">60</value>
            <value selector="60">60</value>
            <value selector="90">90</value>
            <value selector="120">120</value>
            <value selector="180">180</value>
          </Value>
          <Value id="var_accounts_minimum_age_login_defs" type="number">
            <title>minimum password age</title>
            <description>Minimum age of password in days</description>
            <warning category="general">This will only apply to newly created accounts</warning>
            <value selector="">7</value>
            <value selector="7">7</value>
            <value selector="5">5</value>
            <value selector="1">1</value>
            <value selector="2">2</value>
            <value selector="0">0</value>
          </Value>
          <Value id="var_accounts_password_warn_age_login_defs" type="number">
            <title>warning days before password expires</title>
            <description>The number of days' warning given before a password expires.</description>
            <warning category="general">This will only apply to newly created accounts</warning>
            <value selector="">7</value>
            <value selector="0">0</value>
            <value selector="7">7</value>
            <value selector="14">14</value>
          </Value>
          <Rule id="accounts_password_minlen_login_defs" severity="medium">
            <title>Password Minimum Length</title>
            <description>To specify password length requirements for new accounts,
edit the file <tt>/etc/login.defs</tt>, locate the following line:
<pre>PASS_MIN_LEN <b>LENGTH</b></pre>
and correct it to have the form of:
<pre>PASS_MIN_LEN <b><sub idref="var_accounts_password_minlen_login_defs"/></b></pre>
<br/>
Nowadays recommended values, considered as secure by various organizations
focused on topic of computer security, range from <tt>12 (FISMA)</tt> up to
<tt>14 (DoD)</tt> characters for password length requirements.
If a program consults <tt>/etc/login.defs</tt> and also another PAM module
(such as <tt>pam_pwquality</tt>) during a password change operation,
then the most restrictive must be satisfied. See PAM section
for more information about enforcing password quality requirements.
</description>
            <ocil clause="it is not set to the required value">
To check the minimum password length, run the command:
<pre>$ grep PASS_MIN_LEN /etc/login.defs</pre>
Passwords of length <tt>12</tt> characters and more are nowadays
considered to be a standard requirement.
</ocil>
            <rationale>
Requiring a minimum password length makes password
cracking attacks more difficult by ensuring a larger
search space. However, any security benefit from an onerous requirement
must be carefully weighed against usability problems, support costs, or
counterproductive behavior that may result.
</rationale>
            <oval id="accounts_password_minlen_login_defs" value="var_accounts_password_minlen_login_defs"/>
            <ref nist="IA-5(f),IA-5(1)(a)" disa="205"/>
          </Rule>
          <Rule id="accounts_minimum_age_login_defs" severity="medium">
            <title>Password Minimum Age</title>
            <description>To specify password minimum age for new accounts,
edit the file <tt>/etc/login.defs</tt>, locate the following line:
<pre>PASS_MIN_DAYS <b>DAYS</b></pre>
and correct it to have the form of:
<pre>PASS_MIN_DAYS <b><sub idref="var_accounts_minimum_age_login_defs"/></b></pre>
<br/>
A value greater than 1 day is considered to be sufficient for many environments.
</description>
            <ocil clause="it is not set to the required value">
To check the minimum password age, run the command:
<pre>$ grep PASS_MIN_DAYS /etc/login.defs</pre>
A value greater than 1 day is considered to be sufficient for many environments.
</ocil>
            <rationale>
Setting the minimum password age protects against users cycling
back to a favorite password after satisfying the password reuse
requirement.
</rationale>
            <oval id="accounts_minimum_age_login_defs" value="var_accounts_minimum_age_login_defs"/>
            <ref nist="IA-5(f),IA-5(1)(d)" disa="198"/>
          </Rule>
          <Rule id="accounts_maximum_age_login_defs" severity="medium">
            <title>Password Maximum Age</title>
            <description>To specify password maximum age for new accounts,
edit the file <tt>/etc/login.defs</tt>, locate the following line:
<pre>PASS_MAX_DAYS <b>DAYS</b></pre>
and correct it to have the form of:
<pre>PASS_MAX_DAYS <b><sub idref="var_accounts_maximum_age_login_defs"/></b></pre>
<br/>
A value less than 180 days is sufficient for many environments.
</description>
            <ocil clause="it is not set to the required value">
To check the maximum password age, run the command:
<pre>$ grep PASS_MAX_DAYS /etc/login.defs</pre>
A value less than 180 days is sufficient for many environments.
</ocil>
            <rationale>
Setting the password maximum age ensures users are required to
periodically change their passwords. This could possibly decrease
the utility of a stolen password. Requiring shorter password lifetimes
increases the risk of users writing down the password in a convenient
location subject to physical compromise.</rationale>
            <oval id="accounts_maximum_age_login_defs" value="var_accounts_maximum_age_login_defs"/>
            <ref nist="IA-5(f),IA-5(g),IA-5(1)(d)" disa="180,199"/>
          </Rule>
          <Rule id="accounts_password_warn_age_login_defs">
            <title>Password Warning Age</title>
            <description>To specify how many days prior to password
expiration that a warning will be issued to users,
edit the file <tt>/etc/login.defs</tt>, locate the following line:
<pre>PASS_WARN_AGE <b>DAYS</b></pre>
and correct it to have the form of:
<pre>PASS_WARN_AGE <b><sub idref="var_accounts_password_warn_age_login_defs"/></b></pre>
<br/>
A value of 7 days would be nowadays considered to be a standard.
</description>
            <ocil clause="it is not set to the required value">
To check the password warning age, run the command:
<pre>$ grep PASS_WARN_AGE /etc/login.defs</pre>
A value of 7 days would be nowadays considered to be a standard.
</ocil>
            <rationale>
Setting the password warning age enables users to make the change
at a practical time.
</rationale>
            <oval id="accounts_password_warn_age_login_defs" value="var_accounts_password_warn_age_login_defs"/>
            <ref nist="IA-5(f)"/>
          </Rule>
        </Group>
        <Group id="account_expiration">
          <title>Set Account Expiration Parameters</title>
          <description>Accounts can be configured to be automatically disabled
after a certain time period,
meaning that they will require administrator interaction to become usable again.
Expiration of accounts after inactivity can be set for all accounts by default
and also on a per-account basis, such as for accounts that are known to be temporary.
To configure automatic expiration of an account following
the expiration of its password (that is, after the password has expired and not been changed),
run the following command, substituting <tt><i>NUM_DAYS</i></tt> and <tt><i>USER</i></tt> appropriately:
<pre>$ sudo chage -I <i>NUM_DAYS USER</i></pre>
Accounts, such as temporary accounts, can also be configured to expire on an explicitly-set date with the
<tt>-E</tt> option.
The file <tt>/etc/default/useradd</tt> controls
default settings for all newly-created accounts created with the system's
normal command line utilities.
</description>
          <Value id="var_account_disable_post_pw_expiration" type="number">
            <title>number of days after a password expires until the account is permanently disabled</title>
            <description>The number of days to wait after a password expires, until the account will be permanently disabled.</description>
            <warning category="general">This will only apply to newly created accounts</warning>
            <value selector="">35</value>
            <value selector="30">30</value>
            <value selector="35">35</value>
            <value selector="60">60</value>
            <value selector="90">90</value>
            <value selector="180">180</value>
          </Value>
          <Rule id="account_disable_post_pw_expiration">
            <title>Set Account Expiration Following Inactivity</title>
            <description>To specify the number of days after a password expires (which
signifies inactivity) until an account is permanently disabled, add or correct
the following lines in <tt>/etc/default/useradd</tt>, substituting
<tt><i>NUM_DAYS</i></tt> appropriately:
<pre>INACTIVE=<i><sub idref="account_disable_post_pw_expiration"/></i></pre>
A value of 35 is recommended.  
If a password is currently on the
verge of expiration, then 35 days remain until the account is automatically
disabled. However, if the password will not expire for another 60 days, then 95
days could elapse until the account would be automatically disabled. See the
<tt>useradd</tt> man page for more information.  Determining the inactivity
timeout must be done with careful consideration of the length of a "normal"
period of inactivity for users in the particular environment. Setting
the timeout too low incurs support costs and also has the potential to impact
availability of the system to legitimate users.
</description>
            <ocil clause="it does not">
To verify the <tt>INACTIVE</tt> setting, run the following command:
<pre>grep "INACTIVE" /etc/default/useradd</pre>
The output should indicate the <tt>INACTIVE</tt> configuration option is set
to an appropriate integer as shown in the example below:
<pre>$ sudo grep "INACTIVE" /etc/default/useradd
INACTIVE=<sub idref="account_disable_post_pw_expiration"/></pre></ocil>
            <rationale>
Disabling inactive accounts ensures that accounts which may not
have been responsibly removed are not available to attackers
who may have compromised their credentials.
</rationale>
            <ident cce="TBD"/>
            <!--oval id="account_disable_post_pw_expiration" value="var_account_disable_post_pw_expiration"/-->
            <ref nist="AC-2(2), AC-2(3)" disa="16,17,795"/>
          </Rule>
          <Rule id="account_unique_name">
            <title>Ensure All Accounts on the System Have Unique Names</title>
            <description>
Change usernames, or delete accounts, so each has a unique name.
</description>
            <ocil clause="a line is returned">
Run the following command to check for duplicate account names:
<pre>$ sudo pwck -qr</pre>
If there are no duplicate names, no line will be returned.
</ocil>
            <rationale>
Unique usernames allow for accountability on the system.
</rationale>
            <oval id="account_unique_name"/>
            <ref disa="770,804"/>
          </Rule>
          <Rule id="account_temp_expire_date">
            <title>Assign Expiration Date to Temporary Accounts</title>
            <description>
Temporary accounts are established as part of normal account activation procedures
when there is a need for short-term accounts. In the event temporary 
or emergency accounts are required, configure the system to terminate 
them after a documented time period. For every temporary and
emergency account, run the following command to set an expiration date on it,
substituting <tt><i>USER</i></tt> and <tt><i>YYYY-MM-DD</i></tt> appropriately:
<pre>$ sudo chage -E <i>YYYY-MM-DD USER</i></pre>
<tt><i>YYYY-MM-DD</i></tt> indicates the documented expiration date for the account.
For U.S. Government systems, the operating system must be configured to automatically terminate
these types of accounts after a period of 72 hours.
</description>
            <ocil clause="any temporary or emergency accounts have no expiration date set or do not expire within a documented time frame">
For every temporary and emergency account, run the following command
to obtain its account aging and expiration information:
<pre>$ sudo chage -l <i>USER</i></pre>
Verify each of these accounts has an expiration date set as documented.
</ocil>
            <rationale>
If temporary user accounts remain active when no longer needed or for
an excessive period, these accounts may be used to gain unauthorized access.
To mitigate this risk, automated termination of all temporary accounts
must be set upon account creation.
<br/>
</rationale>
            <ident cce="27498-5"/>
            <ref nist="AC-2(2),AC-2(3)" disa="16,1682" ossrg="2"/>
          </Rule>
        </Group>
      </Group>
      <Group id="accounts-pam">
        <title>Protect Accounts by Configuring PAM</title>
        <description>PAM, or Pluggable Authentication Modules, is a system
which implements modular authentication for Linux programs. PAM provides
a flexible and configurable architecture for authentication, and it should be configured
to minimize exposure to unnecessary risk. This section contains
guidance on how to accomplish that.
<br/><br/>
PAM is implemented as a set of shared objects which are
loaded and invoked whenever an application wishes to authenticate a
user. Typically, the application must be running as root in order
to take advantage of PAM, because PAM's modules often need to be able
to access sensitive stores of account information, such as /etc/shadow.
Traditional privileged network listeners
(e.g. sshd) or SUID programs (e.g. sudo) already meet this
requirement. An SUID root application, userhelper, is provided so
that programs which are not SUID or privileged themselves can still
take advantage of PAM.
<br/><br/>
PAM looks in the directory <tt>/etc/pam.d</tt> for
application-specific configuration information. For instance, if
the program login attempts to authenticate a user, then PAM's
libraries follow the instructions in the file <tt>/etc/pam.d/login</tt>
to determine what actions should be taken.
<br/><br/>
One very important file in <tt>/etc/pam.d</tt> is
<tt>/etc/pam.d/system-auth</tt>. This file, which is included by
many other PAM configuration files, defines 'default' system authentication
measures. Modifying this file is a good way to make far-reaching
authentication changes, for instance when implementing a
centralized authentication service.</description>
        <warning category="general">Be careful when making changes to PAM's
configuration files. The syntax for these files is complex, and
modifications can have unexpected consequences. The default
configurations shipped with applications should be sufficient for
most users.</warning>
        <warning category="general">Running <tt>authconfig</tt> or
<tt>system-config-authentication</tt> will re-write the PAM configuration
files, destroying any manually made changes and replacing them with
a series of system defaults. One reference to the configuration
file syntax can be found at
<weblink-macro link="http://www.kernel.org/pub/linux/libs/pam/Linux-PAM-html/sag-configuration-file.html"/>
.</warning>
        <Value id="var_password_pam_unix_remember" type="number" operator="equals" interactive="0">
          <title>remember</title>
          <description>The last n passwords for each user are saved in
<tt>/etc/security/opasswd</tt> in order to force password change history and
keep the user from alternating between the same password too
frequently.</description>
          <value selector="">24</value>
          <value selector="0">0</value>
          <value selector="4">4</value>
          <value selector="5">5</value>
          <value selector="10">10</value>
          <value selector="24">24</value>
        </Value>
        <Rule id="display_login_attempts">
          <title>Set Last Logon/Access Notification</title>
          <description>To configure the system to notify users of last logon/access
using <tt>pam_lastlog</tt>, add or correct the <tt>pam_lastlog</tt> settings in
<tt>/etc/pam.d/postlogin</tt> to read as follows:
<pre>session     [success=1 default=ignore] pam_succeed_if.so service !~ gdm* service !~ su* quiet
session     [default=1]   pam_lastlog.so nowtmp showfailed
session     optional      pam_lastlog.so silent noupdate showfailed</pre>
</description>
          <ocil clause="that is not the case">
To ensure that last logon/access notification is configured correctly, run
the following command:
<pre>$ grep pam_lastlog.so /etc/pam.d/postlogin</pre>
The output should show output <tt>showfailed</tt>.
</ocil>
          <rationale>
Users need to be aware of activity that occurs regarding
their account. Providing users with information regarding the number
of unsuccessful attempts that were made to login to their account
allows the user to determine if any unauthorized activity has occurred
and gives them an opportunity to notify administrators.
</rationale>
          <oval id="display_login_attempts"/>
          <ref disa="53"/>
        </Rule>
        <Group id="password_quality">
          <title>Set Password Quality Requirements</title>
          <description>The default <tt>pam_pwquality</tt> PAM module provides strength
checking for passwords. It performs a number of checks, such as
making sure passwords are not similar to dictionary words, are of
at least a certain length, are not the previous password reversed,
and are not simply a change of case from the previous password. It
can also require passwords to be in certain character classes. The
<tt>pam_pwquality</tt> module is the preferred way of configuring
password requirements.
<br/><br/>
The <tt>pam_cracklib</tt> PAM module can also provide strength
checking for passwords as the <tt>pam_pwquality</tt> module.
It performs a number of checks, such as making sure passwords are
not similar to dictionary words, are of at least a certain length,
are not the previous password reversed, and are not simply a change
of case from the previous password. It can also require passwords to
be in certain character classes.
<br/><br/>
The man pages <tt>pam_pwquality(8)</tt> and <tt>pam_cracklib(8)</tt>
provide information on the capabilities and
configuration of each.</description>
          <Group id="password_quality_pwquality">
            <title>Set Password Quality Requirements with pam_pwquality</title>
            <description>The <tt>pam_pwquality</tt> PAM module can be configured to meet
requirements for a variety of policies.
<br/><br/>
For example, to configure <tt>pam_pwquality</tt> to require at least one uppercase
character, lowercase character, digit, and other (special)
character, make sure that <tt>pam_pwquality</tt> exists in <tt>/etc/pam.d/system-auth</tt>:
<pre>password    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type=</pre>
If no such line exists, add one as the first line of the password section in <tt>/etc/pam.d/system-auth</tt>.
Next, modify the settings in <tt>/etc/security/pwquality.conf</tt> to match the following:
<pre>difok = 4
minlen = 14
dcredit = -1
ucredit = -1
lcredit = -1
ocredit = -1
maxrepeat = 3</pre>
The arguments can be modified to ensure compliance with
your organization's security policy. Discussion of each parameter follows.
</description>
            <warning category="general">Note that the password quality
requirements are not enforced for the root account for some
reason.</warning>
            <Value id="var_password_pam_retry" type="number" operator="equals" interactive="0">
              <title>retry</title>
              <description>Number of retry attempts before erroring out</description>
              <value selector="">3</value>
              <value selector="1">1</value>
              <value selector="2">2</value>
              <value selector="3">3</value>
            </Value>
            <Value id="var_password_pam_maxrepeat" type="number" operator="equals" interactive="0">
              <title>maxrepeat</title>
              <description>Maximum Number of Consecutive Repeating Characters in a Password</description>
              <value selector="">3</value>
              <value selector="1">1</value>
              <value selector="2">2</value>
              <value selector="3">3</value>
            </Value>
            <Value id="var_password_pam_maxclassrepeat" type="number" operator="equals" interactive="0">
              <title>maxclassrepeat</title>
              <description>Maximum Number of Consecutive Repeating Characters in a Password From the Same Character Class</description>
              <value selector="">2</value>
              <value selector="1">1</value>
              <value selector="2">2</value>
              <value selector="3">3</value>
            </Value>
            <Value id="var_password_pam_minlen" type="number" operator="equals" interactive="0">
              <title>minlen</title>
              <description>Minimum number of characters in password</description>
              <value selector="">15</value>
              <value selector="6">6</value>
              <!-- NIST 800-53 requires 1 in a million using brute force which translates to six numbers -->
              <value selector="7">7</value>
              <value selector="8">8</value>
              <value selector="10">10</value>
              <value selector="12">12</value>
              <value selector="14">14</value>
              <value selector="15">15</value>
            </Value>
            <Value id="var_password_pam_dcredit" type="number" operator="equals" interactive="0">
              <title>dcredit</title>
              <description>Minimum number of digits in password</description>
              <value selector="">-1</value>
              <value selector="2">-2</value>
              <value selector="1">-1</value>
              <value selector="0">0</value>
            </Value>
            <Value id="var_password_pam_ocredit" type="number" operator="equals" interactive="0">
              <title>ocredit</title>
              <description>Minimum number of other (special characters) in
password</description>
              <value selector="">-1</value>
              <value selector="2">-2</value>
              <value selector="1">-1</value>
              <value selector="0">0</value>
            </Value>
            <Value id="var_password_pam_lcredit" type="number" operator="equals" interactive="0">
              <title>lcredit</title>
              <description>Minimum number of lower case in password</description>
              <value selector="">-1</value>
              <value selector="2">-2</value>
              <value selector="1">-1</value>
              <value selector="0">0</value>
            </Value>
            <Value id="var_password_pam_ucredit" type="number" operator="equals" interactive="0">
              <title>ucredit</title>
              <description>Minimum number of upper case in password</description>
              <value selector="">-1</value>
              <value selector="2">-2</value>
              <value selector="1">-1</value>
              <value selector="0">0</value>
            </Value>
            <Value id="var_password_pam_difok" type="number" operator="equals" interactive="0">
              <title>difok</title>
              <description>Minimum number of characters not present in old
password</description>
              <warning category="general">Keep this high for short
passwords</warning>
              <value selector="">15</value>
              <value selector="2">2</value>
              <value selector="3">3</value>
              <value selector="4">4</value>
              <value selector="5">5</value>
              <value selector="15">15</value>
            </Value>
            <Value id="var_password_pam_minclass" type="number" operator="equals" interactive="0">
              <title>minclass</title>
              <description>Minimum number of categories of characters that must exist in a password</description>
              <value selector="">3</value>
              <value selector="1">1</value>
              <value selector="2">2</value>
              <value selector="3">3</value>
              <value selector="4">4</value>
            </Value>
            <Value id="var_accounts_passwords_pam_faillock_deny" type="number" operator="equals" interactive="0">
              <title>fail_deny</title>
              <description>Number of failed login attempts before account lockout</description>
              <value selector="">3</value>
              <value selector="3">3</value>
              <value selector="5">5</value>
              <value selector="6">6</value>
              <value selector="10">10</value>
            </Value>
            <Value id="var_accounts_passwords_pam_faillock_unlock_time" type="number" operator="equals" interactive="0">
              <title>fail_unlock_time</title>
              <description>Seconds before automatic unlocking after excessive failed logins</description>
              <value selector="">604800</value>
              <value selector="900">900</value>
              <!-- 15 minutes -->
              <value selector="1800">1800</value>
              <!-- 30 minutes -->
              <value selector="3600">3600</value>
              <!-- 1 hour -->
              <value selector="86400">86400</value>
              <!-- 1 day -->
              <value selector="604800">604800</value>
              <!-- 7 days -->
            </Value>
            <Value id="var_accounts_passwords_pam_faillock_fail_interval" type="number" operator="equals" interactive="0">
              <title>fail_interval</title>
              <description>Interval for counting failed login attempts before account lockout</description>
              <value selector="">900</value>
              <value selector="900">900</value>
              <!-- 15 minutes -->
              <value selector="1800">1800</value>
              <!-- 30 minutes -->
              <value selector="3600">3600</value>
              <!-- 1 hour -->
              <value selector="86400">86400</value>
              <!-- 1 day -->
              <value selector="100000000">100000000</value>
              <!-- 3.16 years -->
            </Value>
            <Rule id="accounts_password_pam_retry">
              <title>Set Password Retry Prompts Permitted Per-Session</title>
              <description>To configure the number of retry prompts that are permitted per-session:
<br/><br/>
Edit the <tt>pam_pwquality.so</tt> statement in <tt>/etc/pam.d/system-auth</tt> to 
show <tt>retry=<sub idref="var_password_pam_retry"/></tt>, or a lower value if site policy is more restrictive.
<br/><br/>
The DoD requirement is a maximum of 3 prompts per session.
</description>
              <ocil clause="it is not the required value">
To check how many retry attempts are permitted on a per-session basis, run the following command:
<pre>$ grep pam_pwquality /etc/pam.d/system-auth</pre>
The <tt>retry</tt> parameter will indicate how many attempts are permitted.
The DoD required value is less than or equal to 3.
This would appear as <tt>retry=3</tt>, or a lower value.
</ocil>
              <rationale>
Setting the password retry prompts that are permitted on a per-session basis to a low value
requires some software, such as SSH, to re-connect. This can slow down and
draw additional attention to some types of password-guessing attacks. Note that this
is different from account lockout, which is provided by the pam_faillock module.
</rationale>
              <oval id="accounts_password_pam_retry" value="var_password_pam_retry"/>
              <ref nist="IA-5(c)" disa=""/>
            </Rule>
            <Rule id="accounts_password_pam_maxrepeat">
              <title>Set Password to Maximum of Three Consecutive Repeating Characters</title>
              <description>The pam_pwquality module's <tt>maxrepeat</tt> parameter controls requirements for
consecutive repeating characters. When set to a positive number, it will reject passwords
which contain more than that number of consecutive characters. Modify the <tt>maxrepeat</tt> setting
in <tt>/etc/security/pwquality.conf</tt> to equal <sub idref="var_password_pam_maxrepeat"/> to prevent a run of (<sub idref="var_password_pam_maxrepeat"/> + 1) or more identical characters.
</description>
              <ocil clause="maxrepeat is not found or not set to the required value">
To check the maximum value for consecutive repeating characters, run the following command:
<pre>$ grep maxrepeat /etc/security/pwquality.conf</pre>
Look for the value of the <tt>maxrepeat</tt> parameter. The DoD requirement is 3 which would 
appear as <tt>maxrepeat = 3</tt>.
</ocil>
              <rationale>
Passwords with excessive repeating characters may be more vulnerable to password-guessing attacks.
</rationale>
              <oval id="accounts_password_pam_maxrepeat" value="var_password_pam_maxrepeat"/>
              <ref nist="IA-5(c)" disa="366"/>
            </Rule>
            <Rule id="accounts_password_pam_maxclassrepeat">
              <title>Set Password to Maximum of Consecutive Repeating Characters from Same Character Class</title>
              <description>The pam_pwquality module's <tt>maxclassrepeat</tt> parameter controls requirements for
consecutive repeating characters from the same character class. When set to a positive number, it will reject passwords
which contain more than that number of consecutive characters from the same character class. Modify the
<tt>maxclassrepeat</tt> setting in <tt>/etc/security/pwquality.conf</tt> to equal <sub idref="var_password_pam_maxclassrepeat"/>
to prevent a run of (<sub idref="var_password_pam_maxclassrepeat"/> + 1) or more identical characters.
</description>
              <ocil clause="that is not the case">
To check the value for maximum consecutive repeating characters, run the following command:
<pre>$ grep maxclassrepeat /etc/security/pwquality.conf</pre>
The output should show <tt>maxclassrepeat</tt>=600.
</ocil>
              <rationale>
Passwords with excessive repeating characters from the same character class may be more vulnerable to
password-guessing attacks.
</rationale>
              <ident cce=""/>
              <oval id="accounts_password_pam_maxclassrepeat" value="var_password_pam_maxclassrepeat"/>
              <ref nist="IA-5(c)" disa="366"/>
            </Rule>
            <Rule id="accounts_password_pam_dcredit">
              <title>Set Password Strength Minimum Digit Characters</title>
              <description>The pam_pwquality module's <tt>dcredit</tt> parameter controls requirements for
usage of digits in a password. When set to a negative number, any password will be required to
contain that many digits. When set to a positive number, pam_pwquality will grant +1 additional
length credit for each digit. Modify the <tt>dcredit</tt> setting in 
<tt>/etc/security/pwquality.conf</tt> to require the use of a digit in passwords.
</description>
              <ocil clause="dcredit is not found or not set to the required value">
To check how many digits are required in a password, run the following command:
<pre>$ grep dcredit /etc/security/pwquality.conf</pre>
The <tt>dcredit</tt> parameter (as a negative number) will indicate how many digits are required.
The DoD requires at least one digit in a password. This would appear as <tt>dcredit = -1</tt>.
</ocil>
              <rationale>
Requiring digits makes password guessing attacks more difficult by ensuring a larger
search space.
</rationale>
              <oval id="accounts_password_pam_dcredit" value="var_password_pam_dcredit"/>
              <ref nist="IA-5(b),IA-5(c),194" disa=""/>
            </Rule>
            <Rule id="accounts_password_pam_minlen">
              <title>Set Password Minimum Length</title>
              <description>The pam_pwquality module's <tt>minlen</tt> parameter controls requirements for
minimum characters required in a password. Add <tt>minlen=<sub idref="var_password_pam_minlen"/></tt>
after pam_pwquality to set minimum password length requirements.
</description>
              <ocil clause="minlen is not found or not set to the required value (or higher)">
To check how many characters are required in a password, run the following command:
<pre>$ grep minlen /etc/security/pwquality.conf</pre>
Your output should contain <tt>minlen = <sub idref="var_password_pam_minlen"/></tt>
</ocil>
              <rationale>
Password length is one factor of several that helps to determine
strength and how long it takes to crack a password. Use of more characters in
a password helps to exponentially increase the time and/or resources
required to compromise the password.
</rationale>
              <oval id="accounts_password_pam_minlen" value="var_password_pam_minlen"/>
              <ref nist="IA-5(1)(a)" disa="205" srg="78"/>
            </Rule>
            <Rule id="accounts_password_pam_ucredit">
              <title>Set Password Strength Minimum Uppercase Characters</title>
              <description>The pam_pwquality module's <tt>ucredit=</tt> parameter controls requirements for
usage of uppercase letters in a password. When set to a negative number, any password will be required to
contain that many uppercase characters. When set to a positive number, pam_pwquality will grant +1 additional
length credit for each uppercase character. Modify the <tt>ucredit</tt> setting in
<tt>/etc/security/pwquality.conf</tt> to require the use of an uppercase character in passwords.
</description>
              <ocil clause="ucredit is not found or not set to the required value">
To check how many uppercase characters are required in a password, run the following command:
<pre>$ grep ucredit /etc/security/pwquality.conf</pre>
The <tt>ucredit</tt> parameter (as a negative number) will indicate how many uppercase characters are required.
The DoD and FISMA require at least one uppercase character in a password.
This would appear as <tt>ucredit = -1</tt>.
</ocil>
              <rationale>
Requiring a minimum number of uppercase characters makes password guessing attacks
more difficult by ensuring a larger search space.
</rationale>
              <oval id="accounts_password_pam_ucredit" value="var_password_pam_ucredit"/>
              <ref nist="IA-5(b),IA-5(c),IA-5(1)(a)" disa=""/>
            </Rule>
            <Rule id="accounts_password_pam_ocredit">
              <title>Set Password Strength Minimum Special Characters</title>
              <description>The pam_pwquality module's <tt>ocredit=</tt> parameter controls requirements for
usage of special (or "other") characters in a password. When set to a negative number, any password will be
required to contain that many special characters. When set to a positive number, pam_pwquality will grant +1 
additional length credit for each special character. Modify the <tt>ocredit</tt> setting in 
<tt>/etc/security/pwquality.conf</tt> to equal <sub idref="var_password_pam_ocredit"/> to require use of a special character in passwords.
</description>
              <ocil clause="ocredit is not found or not set to the required value">
To check how many special characters are required in a password, run the following command:
<pre>$ grep ocredit /etc/security/pwquality.conf</pre>
The <tt>ocredit</tt> parameter (as a negative number) will indicate how many special characters are required.
The DoD and FISMA require at least one special character in a password.
This would appear as <tt>ocredit = -1</tt>.
</ocil>
              <rationale>
Requiring a minimum number of special characters makes password guessing attacks
more difficult by ensuring a larger search space.
</rationale>
              <oval id="accounts_password_pam_ocredit" value="var_password_pam_ocredit"/>
              <ref nist="IA-5(b),IA-5(c),IA-5(1)(a)" disa=""/>
            </Rule>
            <Rule id="accounts_password_pam_lcredit">
              <title>Set Password Strength Minimum Lowercase Characters</title>
              <description>The pam_pwquality module's <tt>lcredit</tt> parameter controls requirements for
usage of lowercase letters in a password. When set to a negative number, any password will be required to
contain that many lowercase characters. When set to a positive number, pam_pwquality will grant +1 additional
length credit for each lowercase character. Modify the <tt>lcredit</tt> setting in 
<tt>/etc/security/pwquality.conf</tt> to require the use of a lowercase character in passwords.
</description>
              <ocil clause="lcredit is not found or not set to the required value">
To check how many lowercase characters are required in a password, run the following command:
<pre>$ grep lcredit /etc/security/pwquality.conf</pre>
The <tt>lcredit</tt> parameter (as a negative number) will indicate how many special characters are required.
The DoD and FISMA require at least one lowercase character in a password.
This would appear as <tt>lcredit = -1</tt>.
</ocil>
              <rationale>
Requiring a minimum number of lowercase characters makes password guessing attacks
more difficult by ensuring a larger search space.
</rationale>
              <oval id="accounts_password_pam_lcredit" value="var_password_pam_lcredit"/>
              <ref nist="IA-5(b),IA-5(c),IA-5(1)(a)" disa=""/>
            </Rule>
            <Rule id="accounts_password_pam_difok">
              <title>Set Password Strength Minimum Different Characters</title>
              <description>The pam_pwquality module's <tt>difok</tt> parameter controls requirements for usage of different
characters during a password change. Modify the <tt>difok</tt> setting in <tt>/etc/security/pwquality.conf</tt>
to equal <sub idref="var_password_pam_difok"/> to require differing characters when changing passwords. The DoD requirement is <tt>4</tt>.
</description>
              <ocil clause="difok is not found or not set to the required value">
To check how many characters must differ during a password change, run the following command:
<pre>$ grep difok /etc/security/pwquality.conf</pre>
The <tt>difok</tt> parameter will indicate how many characters must differ. The DoD requires four characters
differ during a password change. This would appear as <tt>difok = 4</tt>.
</ocil>
              <rationale>
Requiring a minimum number of different characters during password changes ensures that
newly changed passwords should not resemble previously compromised ones.
Note that passwords which are changed on compromised systems will still be compromised, however.
</rationale>
              <oval id="accounts_password_pam_difok" value="var_password_pam_difok"/>
              <ref nist="IA-5(b),IA-5(c),IA-5(1)(b)" disa=""/>
            </Rule>
            <Rule id="accounts_password_pam_minclass">
              <title>Set Password Strength Minimum Different Categories</title>
              <description>The pam_pwquality module's <tt>minclass</tt> parameter controls
requirements for usage of different character classes, or types, of character
that must exist in a password before it is considered valid. For example,
setting this value to three (3) requires that any password must have characters
from at least three different categories in order to be approved. The default
value is zero (0), meaning there are no required classes. There are four
categories available:
<pre>
* Upper-case characters
* Lower-case characters
* Digits
* Special characters (for example, punctuation)
</pre>
Modify the <tt>minclass</tt> setting in <tt>/etc/security/pwquality.conf</tt> entry to require <sub idref="var_password_pam_minclass"/>
differing categories of characters when changing passwords. The minimum requirement is <tt>3</tt>.
</description>
              <ocil clause="minclass is not found or not set to the required value">
To check how many categories of characters must be used in password during a password change,
run the following command:
<pre>$ grep minclass /etc/security/pwquality.conf</pre>
The <tt>minclass</tt> parameter will indicate how many character classes must be used. If
the requirement was for the password to contain characters from three different categories,
then this would appear as <tt>minclass = 3</tt>.
</ocil>
              <rationale>
Requiring a minimum number of character categories makes password guessing attacks
more difficult by ensuring a larger search space.
</rationale>
              <oval id="accounts_password_pam_minclass" value="var_password_pam_minclass"/>
            </Rule>
          </Group>
        </Group>
        <Group id="locking_out_password_attempts">
          <title>Set Lockouts for Failed Password Attempts</title>
          <description>The <tt>pam_faillock</tt> PAM module provides the capability to
lock out user accounts after a number of failed login attempts. Its
documentation is available in
<tt>/usr/share/doc/pam-VERSION/txts/README.pam_faillock</tt>.
<br/><br/>
</description>
          <warning category="general">Locking out user accounts presents the
risk of a denial-of-service attack. The lockout policy
must weigh whether the risk of such a
denial-of-service attack outweighs the benefits of thwarting
password guessing attacks.</warning>
          <!-- This should probably be two rules:
one to use pam_faillock,
and a second to use unlock_time and set it to a Value
-->
          <Rule id="accounts_passwords_pam_faillock_deny" severity="medium">
            <title>Set Deny For Failed Password Attempts</title>
            <description>
To configure the system to lock out accounts after a number of incorrect login
attempts using <tt>pam_faillock.so</tt>, modify the content of both
<tt>/etc/pam.d/system-auth</tt> and <tt>/etc/pam.d/password-auth</tt> as follows:
<br/><br/>
<ul><li> add the following line immediately <tt>before</tt> the <tt>pam_unix.so</tt> statement in the <tt>AUTH</tt> section:
<pre>auth required pam_faillock.so preauth silent deny=<sub idref="var_accounts_passwords_pam_faillock_deny"/> unlock_time=<sub idref="var_accounts_passwords_pam_faillock_unlock_time"/> fail_interval=<sub idref="var_accounts_passwords_pam_faillock_fail_interval"/></pre></li><li> add the following line immediately <tt>after</tt> the <tt>pam_unix.so</tt> statement in the <tt>AUTH</tt> section:
<pre>auth [default=die] pam_faillock.so authfail deny=<sub idref="var_accounts_passwords_pam_faillock_deny"/> unlock_time=<sub idref="var_accounts_passwords_pam_faillock_unlock_time"/> fail_interval=<sub idref="var_accounts_passwords_pam_faillock_fail_interval"/></pre></li><li> add the following line immediately <tt>before</tt> the <tt>pam_unix.so</tt> statement in the <tt>ACCOUNT</tt> section:
<pre>account required pam_faillock.so</pre></li></ul>
</description>
            <ocil clause="that is not the case">
To ensure the failed password attempt policy is configured correctly, run the following command:
<pre>$ grep pam_faillock /etc/pam.d/system-auth</pre>
The output should show <tt>deny=<sub idref="var_accounts_passwords_pam_faillock_deny"/></tt>.
</ocil>
            <rationale>
Locking out user accounts after a number of incorrect attempts
prevents direct password guessing attacks.
</rationale>
            <oval id="accounts_passwords_pam_faillock_deny" value="var_accounts_passwords_pam_faillock_deny"/>
            <ref nist="AC-7(a)" disa=""/>
          </Rule>
          <Rule id="accounts_passwords_pam_faillock_unlock_time" severity="medium">
            <title>Set Lockout Time For Failed Password Attempts</title>
            <description>
To configure the system to lock out accounts after a number of incorrect login
attempts and require an administrator to unlock the account using <tt>pam_faillock.so</tt>,
modify the content of both <tt>/etc/pam.d/system-auth</tt> and <tt>/etc/pam.d/password-auth</tt> as follows:
<br/><br/>
<ul><li> add the following line immediately <tt>before</tt> the <tt>pam_unix.so</tt> statement in the <tt>AUTH</tt> section:
<pre>auth required pam_faillock.so preauth silent deny=<sub idref="var_accounts_passwords_pam_faillock_deny"/> unlock_time=<sub idref="var_accounts_passwords_pam_faillock_unlock_time"/> fail_interval=<sub idref="var_accounts_passwords_pam_faillock_fail_interval"/></pre></li><li> add the following line immediately <tt>after</tt> the <tt>pam_unix.so</tt> statement in the <tt>AUTH</tt> section:
<pre>auth [default=die] pam_faillock.so authfail deny=<sub idref="var_accounts_passwords_pam_faillock_deny"/> unlock_time=<sub idref="var_accounts_passwords_pam_faillock_unlock_time"/> fail_interval=<sub idref="var_accounts_passwords_pam_faillock_fail_interval"/></pre></li><li> add the following line immediately <tt>before</tt> the <tt>pam_unix.so</tt> statement in the <tt>ACCOUNT</tt> section:
<pre>account required pam_faillock.so</pre></li></ul>
</description>
            <ocil clause="that is not the case">
To ensure the failed password attempt policy is configured correctly, run the following command:
<pre>$ grep pam_faillock /etc/pam.d/system-auth</pre>
The output should show <tt>unlock_time=&lt;some-large-number&gt;</tt>.
</ocil>
            <rationale>
Locking out user accounts after a number of incorrect attempts
prevents direct password guessing attacks.  Ensuring that an administrator is
involved in unlocking locked accounts draws appropriate attention to such
situations.
</rationale>
            <oval id="accounts_passwords_pam_faillock_unlock_time" value="var_accounts_passwords_pam_faillock_unlock_time"/>
            <ref nist="AC-7(b)" disa="47"/>
          </Rule>
          <Rule id="accounts_passwords_pam_faillock_interval" severity="medium">
            <title>Set Interval For Counting Failed Password Attempts</title>
            <description>
Utilizing <tt>pam_faillock.so</tt>, the <tt>fail_interval</tt> directive configures the system to lock out accounts after a number of incorrect login
attempts. Modify the content of both <tt>/etc/pam.d/system-auth</tt> and <tt>/etc/pam.d/password-auth</tt> as follows:
<br/><br/>
<ul><li> add the following line immediately <tt>before</tt> the <tt>pam_unix.so</tt> statement in the <tt>AUTH</tt> section:
<pre>auth required pam_faillock.so preauth silent deny=<sub idref="var_accounts_passwords_pam_faillock_deny"/> unlock_time=<sub idref="var_accounts_passwords_pam_faillock_unlock_time"/> fail_interval=<sub idref="var_accounts_passwords_pam_faillock_fail_interval"/></pre></li><li> add the following line immediately <tt>after</tt> the <tt>pam_unix.so</tt> statement in the <tt>AUTH</tt> section:
<pre>auth [default=die] pam_faillock.so authfail deny=<sub idref="var_accounts_passwords_pam_faillock_deny"/> unlock_time=<sub idref="var_accounts_passwords_pam_faillock_unlock_time"/> fail_interval=<sub idref="var_accounts_passwords_pam_faillock_fail_interval"/></pre></li><li> add the following line immediately <tt>before</tt> the <tt>pam_unix.so</tt> statement in the <tt>ACCOUNT</tt> section:
<pre>account required pam_faillock.so</pre></li></ul>
</description>
            <ocil clause="that is not the case">
To ensure the failed password attempt policy is configured correctly, run the following command:
<pre>$ grep pam_faillock /etc/pam.d/system-auth /etc/pam.d/password-auth</pre>
For each file, the output should show <tt>fail_interval=&lt;interval-in-seconds&gt;</tt> where <tt>interval-in-seconds</tt> is 
<tt><sub idref="var_accounts_passwords_pam_faillock_fail_interval"/></tt>  or greater. 
If the <tt>fail_interval</tt> parameter is not set, the default setting of 900 seconds is acceptable.
</ocil>
            <rationale>
Locking out user accounts after a number of incorrect attempts within a
specific period of time prevents direct password guessing attacks.
</rationale>
            <!--oval id="accounts_passwords_pam_faillock_interval" value="var_accounts_passwords_pam_faillock_fail_interval"/-->
            <ref nist="AC-7(a)" disa="1452"/>
          </Rule>
          <Rule id="accounts_password_pam_unix_remember" severity="medium">
            <title>Limit Password Reuse</title>
            <description>Do not allow users to reuse recent passwords. This can be
accomplished by using the <tt>remember</tt> option for the <tt>pam_unix</tt>
or <tt>pam_pwhistory</tt> PAM modules. In the file
<tt>/etc/pam.d/system-auth</tt>, append <tt>remember=<sub idref="var_password_pam_unix_remember"/></tt>
to the line which refers to the <tt>pam_unix.so</tt> or
<tt>pam_pwhistory.so</tt>module, as shown below:
<ul><li>for the <tt>pam_unix.so</tt> case:
<pre>password sufficient pam_unix.so <i>existing_options</i> remember=<sub idref="var_password_pam_unix_remember"/></pre>
</li><li>for the <tt>pam_pwhistory.so</tt> case:
<pre>password requisite pam_pwhistory.so <i>existing_options</i> remember=<sub idref="var_password_pam_unix_remember"/></pre>
</li></ul>
</description>
            <ocil clause="it does not">
To verify the password reuse setting is compliant, run the following command:
<pre>$ grep remember /etc/pam.d/system-auth</pre>
The output should show the following at the end of the line:
<pre>remember=<sub idref="var_password_pam_unix_remember"/></pre>
</ocil>
            <rationale>
Preventing re-use of previous passwords helps ensure that a compromised password is not re-used by a user.
</rationale>
            <oval id="accounts_password_pam_unix_remember" value="var_password_pam_unix_remember"/>
            <ref nist="IA-5(f),IA-5(1)(e)" disa=""/>
          </Rule>
        </Group>
        <Group id="set_password_hashing_algorithm">
          <title>Set Password Hashing Algorithm</title>
          <description>The system's default algorithm for storing password hashes in
<tt>/etc/shadow</tt> is SHA-512. This can be configured in several
locations.</description>
          <Rule id="set_password_hashing_algorithm_systemauth" severity="medium">
            <title>Set Password Hashing Algorithm in /etc/pam.d/system-auth</title>
            <description>
In <tt>/etc/pam.d/system-auth</tt>, the <tt>password</tt> section of
the file controls which PAM modules execute during a password change.
Set the <tt>pam_unix.so</tt> module in the
<tt>password</tt> section to include the argument <tt>sha512</tt>, as shown below:
<pre>password    sufficient    pam_unix.so sha512 <i>other arguments...</i></pre>
This will help ensure when local users change their passwords, hashes for the new
passwords will be generated using the SHA-512 algorithm.
This is the default.
</description>
            <ocil clause="it does not">
Inspect the <tt>password</tt> section of <tt>/etc/pam.d/system-auth</tt>  and
ensure that the <tt>pam_unix.so</tt> module includes the argument
<tt>sha512</tt>:
<pre>$ grep sha512 /etc/pam.d/system-auth</pre>
</ocil>
            <rationale>
Using a stronger hashing algorithm makes password cracking attacks more difficult.
</rationale>
            <!-- <oval id="accounts_password_hashing_algorithm" /> -->
            <ref nist="IA-5(b),IA-5(c),IA-5(1)(c),IA-7" disa=""/>
            <!--oval id="set_password_hashing_algorithm_systemauth" /-->
          </Rule>
          <Rule id="set_password_hashing_algorithm_logindefs" severity="medium">
            <title>Set Password Hashing Algorithm in /etc/login.defs</title>
            <description>
In <tt>/etc/login.defs</tt>, add or correct the following line to ensure
the system will use SHA-512 as the hashing algorithm:
<pre>ENCRYPT_METHOD SHA512</pre>
</description>
            <ocil clause="it does not">
Inspect <tt>/etc/login.defs</tt> and ensure the following line appears:
<pre>ENCRYPT_METHOD SHA512</pre>
</ocil>
            <rationale>
Using a stronger hashing algorithm makes password cracking attacks more difficult.
</rationale>
            <ref nist="IA-5(b),IA-5(c),IA-5(1)(c),IA-7" disa=""/>
            <oval id="set_password_hashing_algorithm_logindefs"/>
          </Rule>
          <Rule id="set_password_hashing_algorithm_libuserconf" severity="medium">
            <title>Set Password Hashing Algorithm in /etc/libuser.conf</title>
            <description>
In <tt>/etc/libuser.conf</tt>, add or correct the following line in its
<tt>[defaults]</tt> section to ensure the system will use the SHA-512
algorithm for password hashing:
<pre>crypt_style = sha512</pre>
</description>
            <ocil clause="it does not">
Inspect <tt>/etc/libuser.conf</tt> and ensure the following line appears
in the <tt>[default]</tt> section:
<pre>crypt_style = sha512</pre>
</ocil>
            <rationale>
Using a stronger hashing algorithm makes password cracking attacks more difficult.
</rationale>
            <!-- <oval id="accounts_password_hashing_algorithm" /> -->
            <ref nist="IA-5(b),IA-5(c),IA-5(1)(c),IA-7" disa=""/>
            <!--oval id="set_password_hashing_algorithm_libuserconf" /-->
          </Rule>
        </Group>
      </Group>
      <Group id="accounts-session">
        <title>Secure Session Configuration Files for Login Accounts</title>
        <description>When a user logs into a Unix account, the system
configures the user's session by reading a number of files. Many of
these files are located in the user's home directory, and may have
weak permissions as a result of user error or misconfiguration. If
an attacker can modify or even read certain types of account
configuration information, they can often gain full access to the
affected user's account. Therefore, it is important to test and
correct configuration file permissions for interactive accounts,
particularly those of privileged users such as root or system
administrators.</description>
        <Value id="var_accounts_max_concurrent_login_sessions" type="number" operator="equals" interactive="0">
          <title>Maximum concurrent login sessions</title>
          <description>Maximum number of concurrent sessions by a user</description>
          <value selector="">1</value>
          <value selector="1">1</value>
          <value selector="3">3</value>
          <value selector="5">5</value>
          <value selector="10">10</value>
          <value selector="15">15</value>
          <value selector="20">20</value>
        </Value>
        <Rule id="accounts_max_concurrent_login_sessions">
          <title>Limit the Number of Concurrent Login Sessions Allowed Per User</title>
          <description>
Limiting the number of allowed users and sessions per user can limit risks related to Denial of
Service attacks. This addresses concurrent sessions for a single account and does not address
concurrent sessions by a single user via multiple accounts. The DoD requirement is 10. To set the number of concurrent
sessions per user add the following line in <tt>/etc/security/limits.conf</tt>:
<pre>* hard maxlogins <sub idref="var_accounts_max_concurrent_login_sessions"/></pre>
</description>
          <rationale>Limiting simultaneous user logins can insulate the system from denial of service
problems caused by excessive logins. Automated login processes operating improperly or
maliciously may result in an exceptional number of simultaneous login sessions.
</rationale>
          <ocil clause="it is not similar">
Run the following command to ensure the <tt>maxlogins</tt> value is configured for all users
on the system:
<pre>$ grep "maxlogins" /etc/security/limits.conf</pre>
You should receive output similar to the following:
<pre>*		hard	maxlogins	<sub idref="var_accounts_max_concurrent_login_sessions"/></pre>
</ocil>
          <!-- <oval id="accounts_max_concurrent_login_sessions" value="var_accounts_max_concurrent_login_sessions" /> -->
          <ref nist="AC-10" disa="54"/>
        </Rule>
        <Group id="root_paths">
          <title>Ensure that No Dangerous Directories Exist in Root's Path</title>
          <description>The active path of the root account can be obtained by
starting a new root shell and running:
<pre>$ sudo echo $PATH</pre>
This will produce a colon-separated list of
directories in the path.
<br/><br/>
Certain path elements could be considered dangerous, as they could lead
to root executing unknown or
untrusted programs, which could contain malicious
code.
Since root may sometimes work inside
untrusted directories, the <tt>.</tt> character, which represents the
current directory, should never be in the root path, nor should any
directory which can be written to by an unprivileged or
semi-privileged (system) user.
<br/><br/>
It is a good practice for administrators to always execute
privileged commands by typing the full path to the
command.</description>
          <Rule id="root_path_no_dot">
            <title>Ensure that Root's Path Does Not Include Relative Paths or Null Directories</title>
            <description>
Ensure that none of the directories in root's path is equal to a single
<tt>.</tt> character, or
that it contains any instances that lead to relative path traversal, such as
<tt>..</tt> or beginning a path without the slash (<tt>/</tt>) character.
Also ensure that there are no "empty" elements in the path, such as in these examples:
<pre>PATH=:/bin
PATH=/bin:
PATH=/bin::/sbin</pre>
These empty elements have the same effect as a single <tt>.</tt> character.
</description>
            <rationale>
Including these entries increases the risk that root could
execute code from an untrusted location.
</rationale>
            <!-- <oval id="root_path_no_dot" /> -->
            <ref nist="CM-6(b)" disa="366"/>
          </Rule>
          <Rule id="accounts_root_path_dirs_no_write">
            <title>Ensure that Root's Path Does Not Include World or Group-Writable Directories</title>
            <description>
For each element in root's path, run:
<pre>$ sudo ls -ld <i>DIR</i></pre>
and ensure that write permissions are disabled for group and
other.
</description>
            <ocil clause="group or other write permissions exist">
To ensure write permissions are disabled for group and other
 for each element in root's path, run the following command:
<pre>$ sudo ls -ld <i>DIR</i></pre>
</ocil>
            <rationale>
Such entries increase the risk that root could
execute code provided by unprivileged users,
and potentially malicious code.
</rationale>
            <oval id="accounts_root_path_dirs_no_write"/>
            <ref nist="CM-6(b)" disa="366"/>
          </Rule>
        </Group>
        <Rule id="file_permissions_home_dirs">
          <title>Ensure that User Home Directories are not Group-Writable or World-Readable</title>
          <description>For each human user of the system, view the
permissions of the user's home directory:
<pre>$ sudo ls -ld /home/<i>USER</i></pre>
Ensure that the directory is not group-writable and that it
is not world-readable. If necessary, repair the permissions:
<pre>$ sudo chmod g-w /home/<i>USER</i>
$ sudo chmod o-rwx /home/<i>USER</i></pre>
</description>
          <ocil clause="the user home directory is group-writable or world-readable">
To ensure the user home directory is not group-writable or world-readable, run the following:
<pre>$ sudo ls -ld /home/<i>USER</i></pre>
</ocil>
          <warning category="general">This action may involve
modifying user home directories. Notify your user community, and
solicit input if appropriate, before making this type of
change.</warning>
          <rationale>
User home directories contain many configuration files which
affect the behavior of a user's account. No user should ever have
write permission to another user's home directory. Group shared
directories can be configured in sub-directories or elsewhere in the
filesystem if they are needed. Typically, user home directories
should not be world-readable, as it would disclose file names
to other users. If a subset of users need read access
to one another's home directories, this can be provided using
groups or ACLs.
</rationale>
          <oval id="file_permissions_home_dirs"/>
          <ref nist="AC-6(7)" disa="225"/>
        </Rule>
        <Group id="user_umask">
          <title>Ensure that Users Have Sensible Umask Values</title>
          <description>
The umask setting controls the default permissions
for the creation of new files.
With a default <tt>umask</tt> setting of 077, files and directories
created by users will not be readable by any other user on the
system. Users who wish to make specific files group- or
world-readable can accomplish this by using the chmod command.
Additionally, users can make all their files readable to their
group by default by setting a <tt>umask</tt> of 027 in their shell
configuration files. If default per-user groups exist (that is, if
every user has a default group whose name is the same as that
user's username and whose only member is the user), then it may
even be safe for users to select a <tt>umask</tt> of 007, making it very
easy to intentionally share files with groups of which the user is
a member.
<br/><br/>
<!--In addition, it may be necessary to change root's <tt>umask</tt>
temporarily in order to install software or files which must be
readable by other users, or to change the default umasks of certain
service accounts such as the FTP user. However, setting a
restrictive default protects the files of users who have not taken
steps to make their files more available, and preventing files from
being inadvertently shared.-->
</description>
          <!-- Define a new catch-all Rule?
<li>View the additional configuration files <tt>/etc/csh.login</tt> and
<tt>/etc/profile.d/*</tt>, and ensure that none of these files redefine the
umask to a more permissive value unless there is a good reason for
it.
</li>
<li>-->
          <!-- Define a new Rule to check root's umask?
It seems unlikely to ever be misconfigured.
Edit the root shell configuration files <tt>/root/.bashrc</tt>,
<tt>/root/.bash profile</tt>, <tt>/root/.cshrc</tt>, and <tt>/root/.tcshrc</tt>. Add or
correct the line:
<pre>umask 077</pre>
</li>
-->
          <Value id="var_accounts_user_umask" type="string" operator="equals" interactive="0">
            <title>Sensible umask</title>
            <description>Enter default user umask</description>
            <value selector="">027</value>
            <value selector="007">007</value>
            <value selector="022">022</value>
            <value selector="027">027</value>
            <value selector="077">077</value>
          </Value>
          <Rule id="accounts_umask_bashrc">
            <title>Ensure the Default Bash Umask is Set Correctly</title>
            <description>
To ensure the default umask for users of the Bash shell is set properly,
add or correct the <tt>umask</tt> setting in <tt>/etc/bashrc</tt> to read
as follows:
<pre>umask <sub idref="var_accounts_user_umask"/></pre>
</description>
            <rationale>The umask value influences the permissions assigned to files when they are created.
A misconfigured umask value could result in files with excessive permissions that can be read or
written to by unauthorized users.</rationale>
            <ocil clause="the above command returns no output, or if the umask is configured incorrectly">
Verify the <tt>umask</tt> setting is configured correctly in the <tt>/etc/bashrc</tt> file by
running the following command:
<pre>$ grep "umask" /etc/bashrc</pre>
All output must show the value of <tt>umask</tt> set as shown below:
<pre>$ grep "umask" /etc/bashrc
umask <sub idref="var_accounts_user_umask"/>
umask <sub idref="var_accounts_user_umask"/></pre>
</ocil>
            <!-- <oval id="accounts_umask_etc_bashrc" value="var_accounts_user_umask"/> -->
            <ref nist="SA-8" disa="366"/>
          </Rule>
          <Rule id="accounts_umask_cshrc">
            <title>Ensure the Default C Shell Umask is Set Correctly</title>
            <description>
To ensure the default umask for users of the C shell is set properly,
add or correct the <tt>umask</tt> setting in <tt>/etc/csh.cshrc</tt> to read as follows:
<pre>umask <sub idref="var_accounts_user_umask"/></pre>
</description>
            <rationale>The umask value influences the permissions assigned to files when they are created.
A misconfigured umask value could result in files with excessive permissions that can be read or
written to by unauthorized users.</rationale>
            <ocil clause="the above command returns no output, or if the umask is configured incorrectly">
Verify the <tt>umask</tt> setting is configured correctly in the <tt>/etc/csh.cshrc</tt> file by
running the following command:
<pre>$ grep "umask" /etc/csh.cshrc</pre>
All output must show the value of <tt>umask</tt> set as shown in the below:
<pre>$ grep "umask" /etc/csh.cshrc
umask <sub idref="var_accounts_user_umask"/></pre>
</ocil>
            <!-- <oval id="accounts_umask_etc_csh_cshrc" value="var_accounts_user_umask"/> -->
            <ref nist="SA-8" disa="366"/>
          </Rule>
          <Rule id="accounts_umask_etc_profile">
            <title>Ensure the Default Umask is Set Correctly in /etc/profile</title>
            <description>
To ensure the default umask controlled by <tt>/etc/profile</tt> is set properly,
add or correct the <tt>umask</tt> setting in <tt>/etc/profile</tt> to read as follows:
<pre>umask <sub idref="var_accounts_user_umask"/></pre>
</description>
            <rationale>The umask value influences the permissions assigned to files when they are created.
A misconfigured umask value could result in files with excessive permissions that can be read or
written to by unauthorized users.</rationale>
            <ocil clause="the above command returns no output, or if the umask is configured incorrectly">
Verify the <tt>umask</tt> setting is configured correctly in the <tt>/etc/profile</tt> file by
running the following command:
<pre>$ grep "umask" /etc/profile</pre>
All output must show the value of <tt>umask</tt> set as shown in the below:
<pre>$ grep "umask" /etc/profile
umask <sub idref="var_accounts_user_umask"/></pre>
</ocil>
            <!-- <oval id="accounts_umask_etc_profile" value="var_accounts_user_umask" /> -->
            <ref nist="SA-8" disa="366"/>
          </Rule>
          <Rule id="accounts_umask_login_defs">
            <title>Ensure the Default Umask is Set Correctly in login.defs</title>
            <description>
To ensure the default umask controlled by <tt>/etc/login.defs</tt> is set properly,
add or correct the <tt>UMASK</tt> setting in <tt>/etc/login.defs</tt> to read as follows:
<pre>UMASK <sub idref="var_accounts_user_umask"/></pre>
</description>
            <rationale>The umask value influences the permissions assigned to files when they are created.
A misconfigured umask value could result in files with excessive permissions that can be read and
written to by unauthorized users.</rationale>
            <ocil clause="the above command returns no output, or if the umask is configured incorrectly">
Verify the <tt>UMASK</tt> setting is configured correctly in the <tt>/etc/login.defs</tt> file by
running the following command:
<pre>$ grep -i "UMASK" /etc/login.defs</pre>
All output must show the value of <tt>umask</tt> set as shown in the below:
<pre>$ grep -i "UMASK" /etc/login.defs
umask <sub idref="var_accounts_user_umask"/></pre>
</ocil>
            <!-- <oval id="accounts_umask_etc_login_defs" value="var_accounts_user_umask" /> -->
            <ref nist="SA-8" disa="366"/>
          </Rule>
        </Group>
      </Group>
      <Group id="accounts-physical">
        <title>Protect Physical Console Access</title>
        <description>It is impossible to fully protect a system from an
attacker with physical access, so securing the space in which the
system is located should be considered a necessary step. However,
there are some steps which, if taken, make it more difficult for an
attacker to quickly or undetectably modify a system from its
console.</description>
        <Group id="bootloader">
          <title>Set Boot Loader Password</title>
          <description>During the boot process, the boot loader is
responsible for starting the execution of the kernel and passing
options to it. The boot loader allows for the selection of
different kernels - possibly on different partitions or media.
The default Fedora boot loader for x86 systems is called GRUB2.
Options it can pass to the kernel include <i>single-user mode</i>, which
provides root access without any authentication, and the ability to
disable SELinux. To prevent local users from modifying the boot
parameters and endangering security, protect the boot loader configuration
with a password and ensure its configuration file's permissions
are set properly.
</description>
          <Rule id="file_user_owner_grub2_cfg" severity="medium">
            <title>Verify /boot/grub2/grub.cfg User Ownership</title>
            <description>The file <tt>/boot/grub2/grub.cfg</tt> should 
be owned by the <tt>root</tt> user to prevent destruction 
or modification of the file.
<fileowner-desc-macro file="/boot/grub2/grub.cfg" owner="root"/>
</description>
            <ocil>
              <fileowner-check-macro file="/boot/grub2/grub.cfg" owner="root"/>
            </ocil>
            <rationale>
Only root should be able to modify important boot parameters.
</rationale>
            <oval id="file_user_owner_grub2_cfg"/>
            <ref nist="AC-6(7)" disa="225" pcidss="Req-7.1" cis="1.5.1"/>
          </Rule>
          <Rule id="file_group_owner_grub2_cfg" severity="medium">
            <title>Verify /boot/grub2/grub.cfg Group Ownership</title>
            <description>The file <tt>/boot/grub2/grub.cfg</tt> should 
be group-owned by the <tt>root</tt> group to prevent 
destruction or modification of the file.
<filegroupowner-desc-macro file="/boot/grub2/grub.cfg" group="root"/>
</description>
            <ocil>
              <filegroupowner-check-macro file="/boot/grub2/grub.cfg" group="root"/>
            </ocil>
            <rationale>
The <tt>root</tt> group is a highly-privileged group. Furthermore, the group-owner of this
file should not have any access privileges anyway.
</rationale>
            <oval id="file_group_owner_grub2_cfg"/>
            <ref nist="AC-6(7)" disa="225" pcidss="Req-7.1" cis="1.5.1"/>
          </Rule>
          <Rule id="file_permissions_grub2_cfg" severity="medium">
            <title>Verify /boot/grub2/grub.cfg Permissions</title>
            <description>File permissions for <tt>/boot/grub2/grub.cfg</tt> should be set to 600, which
is the default.
<fileperms-desc-macro file="/boot/grub2/grub.cfg" perms="600"/>
</description>
            <ocil clause="it does not">
To check the permissions of /boot/grub2/grub.cfg, run the command:
<pre>$ sudo ls -lL /boot/grub2/grub.cfg</pre>
If properly configured, the output should indicate the following 
permissions: <tt>-rw-------</tt>
</ocil>
            <rationale>
Proper permissions ensure that only the root user can modify important boot
parameters.
</rationale>
            <oval id="file_permissions_grub2_cfg"/>
            <ref nist="AC-6(7)" disa="225" cis="1.5.2"/>
          </Rule>
          <Rule id="bootloader_password" severity="medium">
            <title>Set Boot Loader Password</title>
            <description>The grub2 boot loader should have a superuser account and password
protection enabled to protect boot-time settings.
<br/><br/>
To do so, select a superuser account and password and add them into the
<tt>/etc/grub.d/01_users</tt> configuration file.
<br/><br/>
Since plaintext passwords are a security risk, generate a hash for the pasword
by running the following command:
<pre>$ grub2-mkpasswd-pbkdf2</pre>
When prompted, enter the password that was selected and insert the returned 
password hash into the <tt>/etc/grub.d/01_users</tt> configuration file
immediately after the superuser account.
(Use the output from <tt>grub2-mkpasswd-pbkdf2</tt> as the value of 
<b>password-hash</b>):
<pre>password_pbkdf2 <b>superusers-account</b> <b>password-hash</b></pre>
NOTE: It is recommended not to use common administrator account names like root,
admin, or administrator for the grub2 superuser account. 
<br/><br/>
To meet FISMA Moderate, the bootloader superuser account and password MUST 
differ from the root account and password.
Once the superuser account and password have been added, update the 
<tt>grub.cfg</tt> file by running:
<pre>grub2-mkconfig -o /boot/grub2/grub.cfg</pre>
NOTE: Do NOT manually add the superuser account and password to the 
<tt>grub.cfg</tt> file as the grub2-mkconfig command overwrites this file.
</description>
            <ocil clause="it does not">
To verify the boot loader superuser account and superuser account password have
been set, and the password encrypted, run the following command:
<pre>sudo grep -A1 "superusers\|password" /etc/grub2.cfg</pre>
The output should show the following:
<pre>set superusers="<b>superusers-account</b>"
password_pbkdf2 <b>superusers-account</b> <b>password-hash</b></pre>
</ocil>
            <rationale>
Password protection on the boot loader configuration ensures
users with physical access cannot trivially alter
important bootloader settings. These include which kernel to use,
and whether to enter single-user mode. For more information on how to configure 
the grub2 superuser account and password, please refer to 
<ul><li><weblink-macro link="https://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/sec-GRUB_2_Password_Protection.html"/></li>.
</ul>
</rationale>
            <oval id="bootloader_password"/>
            <ref nist="IA-2(1),IA-5(e),AC-3" disa="213" cis="1.5.3"/>
          </Rule>
          <Rule id="bootloader_uefi_password" severity="medium">
            <title>Set the UEFI Boot Loader Password</title>
            <description>The UEFI grub2 boot loader should have a superuser account and password
protection enabled to protect boot-time settings.
<br/><br/>
To do so, select a superuser account and password and add them into the
<tt>/etc/grub.d/01_users</tt> configuration file.
<br/><br/>
Since plaintext passwords are a security risk, generate a hash for the pasword
by running the following command:
<pre>$ grub2-mkpasswd-pbkdf2</pre>
When prompted, enter the password that was selected and insert the returned
password hash into the <tt>/etc/grub.d/01_users</tt> configuration file immediately
after the superuser account.
(Use the output from <tt>grub2-mkpasswd-pbkdf2</tt> as the value of
<b>password-hash</b>):
<pre>password_pbkdf2 <b>superusers-account</b> <b>password-hash</b></pre>
NOTE: It is recommended not to use common administrator account names like root,
admin, or administrator for the grub2 superuser account.
<br/><br/>
To meet FISMA Moderate, the bootloader superuser account and password MUST
differ from the root account and password.
Once the superuser account and password have been added, update the
<tt>grub.cfg</tt> file by running:
<pre>grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg</pre>
NOTE: Do NOT manually add the superuser account and password to the
<tt>grub.cfg</tt> file as the grub2-mkconfig command overwrites this file.
</description>
            <ocil clause="it does not">
To verify the boot loader superuser account and superuser account password have
been set, and the password encrypted, run the following command:
<pre>sudo grep -A1 "superusers\|password" /etc/grub2-efi.cfg</pre>
The output should show the following:
<pre>set superusers="<b>superusers-account</b>"
password_pbkdf2 <b>superusers-account</b> <b>password-hash</b></pre>
</ocil>
            <rationale>
Password protection on the boot loader configuration ensures
users with physical access cannot trivially alter
important bootloader settings. These include which kernel to use,
and whether to enter single-user mode.
</rationale>
            <oval id="bootloader_uefi_password"/>
            <ref nist="AC-3" disa="213"/>
          </Rule>
        </Group>
        <Rule id="require_singleuser_auth" severity="medium">
          <title>Require Authentication for Single User Mode</title>
          <description>Single-user mode is intended as a system recovery
method, providing a single user root access to the system by
providing a boot option at startup. By default, no authentication
is performed if single-user mode is selected.
<br/><br/>
By default, single-user mode is protected by requiring a password and is set
in <tt>/usr/lib/systemd/system/rescue.service</tt>.
</description>
          <ocil clause="the output is different">
To check if authentication is required for single-user mode, run the following command:
<pre>$ grep sulogin /usr/lib/systemd/system/rescue.service</pre>
The output should be similar to the following, and the line must begin with
ExecStart and /sbin/sulogin:
<pre>ExecStart=-/sbin/sulogin</pre>
</ocil>
          <rationale>
This prevents attackers with physical access from trivially bypassing security
on the machine and gaining root access. Such accesses are further prevented
by configuring the bootloader password.
</rationale>
          <oval id="require_singleuser_auth"/>
          <ref nist="IA-2(1),AC-3" disa="213"/>
        </Rule>
        <Rule id="service_debug-shell_disabled" severity="medium">
          <title>Disable debug-shell SystemD Service</title>
          <description>SystemD's <tt>debug-shell</tt> service is intended to
diagnose SystemD related boot issues with various <tt>systemctl</tt>
commands. Once enabled and following a system reboot, the root shell
will be available on <tt>tty9</tt> which is access by pressing
<tt>CTRL-ALT-F9</tt>. The <tt>debug-shell</tt> service should only be used
for SystemD related issues and should otherwise be disabled.
<br/><br/>
By default, the <tt>debug-shell</tt> SystemD service is disabled.
<systemd-service-macro enable="false" service="debug-shell"/>
</description>
          <ocil>
            <systemd-check-macro enable="false" service="debug-shell"/>
          </ocil>
          <rationale>
This prevents attackers with physical access from trivially bypassing security
on the machine through valid troubleshooting configurations and gaining root
access when the system is rebooted.
</rationale>
          <oval id="service_debug-shell_disabled"/>
          <!--ref nist="IA-2(1),AC-3" disa="213" /-->
        </Rule>
        <Rule id="disable_ctrlaltdel_reboot" severity="high">
          <title>Disable Ctrl-Alt-Del Reboot Activation</title>
          <description>
By default, <tt>SystemD</tt> will reboot the system if the <tt>Ctrl-Alt-Del</tt>
key sequence is pressed.
<br/>
To configure the system to ignore the <tt>Ctrl-Alt-Del</tt> key sequence from the
command line instead of rebooting the system, do either of the following:
<pre>ln -sf /dev/null /etc/systemd/system/ctrl-alt-del.target</pre>
or
<pre>systemctl mask ctrl-alt-del.target</pre>
<br/>
Do not simply delete the <tt>/usr/lib/systemd/system/ctrl-alt-del.service</tt> file,
as this file may be restored during future system updates.
</description>
          <ocil clause="the system is configured to reboot when Ctrl-Alt-Del is pressed">
To ensure the system is configured to mask the Ctrl-Alt-Del sequence,
enter the following command:
<pre>sudo ln -sf /dev/null /etc/systemd/system/ctrl-alt-del.target</pre>
or
<pre>sudo systemctl mask ctrl-alt-del.target</pre>
</ocil>
          <rationale>
A locally logged-in user who presses Ctrl-Alt-Del, when at the console,
can reboot the system. If accidentally pressed, as could happen in
the case of mixed OS environment, this can create the risk of short-term
loss of availability of systems due to unintentional reboot.
</rationale>
          <oval id="disable_ctrlaltdel_reboot"/>
          <ref nist="AC-6" disa="366"/>
        </Rule>
        <Rule id="disable_interactive_boot" severity="medium">
          <title>Verify that Interactive Boot is Disabled</title>
          <description>
Fedora systems support an "interactive boot" option that can be used to prevent
services from being started. On a Fedora system, interactive boot can be
enabled by providing a <tt>1</tt>, <tt>yes</tt>, <tt>true</tt>, or
<tt>on</tt> value to the <tt>systemd.confirm_spawn</tt> kernel argument in
<tt>/etc/default/grub</tt>. Remove any instance of
<pre>systemd.confirm_spawn=(1|yes|true|on)</pre> from the kernel arguments in
that file to disable interactive boot.
</description>
          <ocil clause="Interactive boot is enabled at boot time">
Inspect <tt>/etc/default/grub</tt> for any instances of
<tt>systemd.confirm_spawn=(1|yes|true|on)</tt> in the kernel boot arguments.
Presence of a <tt>systemd.confirm_spawn=(1|yes|true|on)</tt> indicates
that interactive boot is enabled at boot time.
</ocil>
          <rationale>
Using interactive boot, the console user could disable auditing, firewalls,
or other services, weakening system security.
</rationale>
          <warning category="general">The GRUB 2 configuration file, <tt>grub.cfg</tt>,
is automatically updated each time a new kernel is installed. Note that any
changes to <tt>/etc/default/grub</tt> require rebuilding the <tt>grub.cfg</tt>
file. To update the GRUB 2 configuration file manually, use the
<pre>grub2-mkconfig -o</pre> command as follows:
<ul><li>On BIOS-based machines, issue the following command as <tt>root</tt>:
<pre>~]# grub2-mkconfig -o /boot/grub2/grub.cfg</pre></li><li>On UEFI-based machines, issue the following command as <tt>root</tt>:
<pre>~]# grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg</pre></li></ul>
</warning>
          <oval id="disable_interactive_boot"/>
          <ref nist="SC-2,AC-3" disa="213"/>
        </Rule>
        <Group id="screen_locking">
          <title>Configure Screen Locking</title>
          <description>When a user must temporarily leave an account
logged-in, screen locking should be employed to prevent passersby
from abusing the account. User education and training is
particularly important for screen locking to be effective, and policies
can be implemented to reinforce this.
<br/><br/>
Automatic screen locking is only meant as a safeguard for
those cases where a user forgot to lock the screen.</description>
          <Group id="console_screen_locking">
            <title>Configure Console Screen Locking</title>
            <description>
A console screen locking mechanism is provided in the
<tt>screen</tt> package, which is not installed by default.
</description>
            <Rule id="package_screen_installed" severity="medium">
              <title>Install the screen Package</title>
              <description>
To enable console screen locking, install the <tt>screen</tt> package:
<pre><dnf-macro install="true" package="screen"/></pre>
Instruct users to begin new terminal sessions with the following command:
<pre>$ screen</pre>
The console can now be locked with the following key combination:
<pre>ctrl+a x</pre>
</description>
              <ocil clause="the package is not installed">
                <package-check-macro package="screen"/>
              </ocil>
              <rationale>
A session time-out lock is a temporary action taken when a user stops work and moves away from the immediate
physical vicinity of the information system but des not logout because of the temporary nature of the absence.
Rather than relying on the user to manually lock their operation system session prior to vacating the vicinity,
operating systems need to be able to identify when a user's session has idled and take action to initiate the
session lock. 

The <tt>screen</tt> package allows for a session lock to be implemented and configured.
</rationale>
              <oval id="package_screen_installed"/>
              <ref nist="AC-11(a)" disa="57"/>
            </Rule>
          </Group>
          <Group id="smart_card_login">
            <title>Hardware Tokens for Authentication</title>
            <description>
The use of hardware tokens such as smart cards for system login
provides stronger, two-factor authentication than using a username and password.
In Fedora servers and workstations, hardware token login
is not enabled by default and must be enabled in the system settings.
</description>
            <Rule id="smartcard_auth" severity="medium">
              <title>Enable Smart Card Login</title>
              <description>
To enable smart card authentication, consult the documentation at:
<ul><li><weblink-macro link="https://docs.fedoraproject.org/docs/en-US/Fedora/18/html/Security_Guide/sect-Security_Guide-Single_Sign_on_SSO-Getting_Started_with_your_new_Smart_Card.html"/></li></ul>
</description>
              <ocil clause="non-exempt accounts are not using CAC authentication">
Interview the SA to determine if all accounts not exempted by policy are
using CAC authentication. 
</ocil>
              <rationale>Smart card login provides two-factor authentication stronger than
that provided by a username and password combination. Smart cards leverage PKI
(public key infrastructure) in order to provide and verify credentials.
</rationale>
              <oval id="smartcard_auth"/>
              <ref disa="765,766,767,768,771,772,884" pcidss="Req-8.3"/>
            </Rule>
          </Group>
        </Group>
      </Group>
      <Group id="accounts-banners">
        <title>Warning Banners for System Accesses</title>
        <description>Each system should expose as little information about
itself as possible.
<br/><br/>
System banners, which are typically displayed just before a
login prompt, give out information about the service or the host's
operating system. This might include the distribution name and the
system kernel version, and the particular version of a network
service. This information can assist intruders in gaining access to
the system as it can reveal whether the system is running
vulnerable software. Most network services can be configured to
limit what information is displayed.
<br/><br/>
Many organizations implement security policies that require a
system banner provide notice of the system's ownership, provide
warning to unauthorized users, and remind authorized users of their
consent to monitoring.</description>
        <Value id="login_banner_text" type="string" operator="equals" interactive="0">
          <title>Login Banner Verbiage</title>
          <description>Enter an appropriate login banner for your organization. Please note that new lines must
be expressed by the '\n' character and special characters like parentheses and quotation marks must be escaped with '\'.</description>
          <!-- <value selector="any_text">.+</value> -->
          <value selector="usgcb_default">--[\s\n]+WARNING[\s\n]+--[\s\n]*This[\s\n]+system[\s\n]+is[\s\n]+for[\s\n]+the[\s\n]+use[\s\n]+of[\s\n]+authorized[\s\n]+users[\s\n]+only.[\s\n]+Individuals[\s\n]*using[\s\n]+this[\s\n]+computer[\s\n]+system[\s\n]+without[\s\n]+authority[\s\n]+or[\s\n]+in[\s\n]+excess[\s\n]+of[\s\n]+their[\s\n]*authority[\s\n]+are[\s\n]+subject[\s\n]+to[\s\n]+having[\s\n]+all[\s\n]+their[\s\n]+activities[\s\n]+on[\s\n]+this[\s\n]+system[\s\n]*monitored[\s\n]+and[\s\n]+recorded[\s\n]+by[\s\n]+system[\s\n]+personnel.[\s\n]+Anyone[\s\n]+using[\s\n]+this[\s\n]*system[\s\n]+expressly[\s\n]+consents[\s\n]+to[\s\n]+such[\s\n]+monitoring[\s\n]+and[\s\n]+is[\s\n]+advised[\s\n]+that[\s\n]*if[\s\n]+such[\s\n]+monitoring[\s\n]+reveals[\s\n]+possible[\s\n]+evidence[\s\n]+of[\s\n]+criminal[\s\n]+activity[\s\n]*system[\s\n]+personal[\s\n]+may[\s\n]+provide[\s\n]+the[\s\n]+evidence[\s\n]+of[\s\n]+such[\s\n]+monitoring[\s\n]+to[\s\n]+law[\s\n]*enforcement[\s\n]+officials.</value>
          <value selector="dod_default">You[\s\n]+are[\s\n]+accessing[\s\n]+a[\s\n]+U.S.[\s\n]+Government[\s\n]+\(USG\)[\s\n]+Information[\s\n]+System[\s\n]+\(IS\)[\s\n]+that[\s\n]+is[\s\n]+provided[\s\n]+for[\s\n]+USG-authorized[\s\n]+use[\s\n]+only.[\s\n]*By[\s\n]+using[\s\n]+this[\s\n]+IS[\s\n]+\(which[\s\n]+includes[\s\n]+any[\s\n]+device[\s\n]+attached[\s\n]+to[\s\n]+this[\s\n]+IS\),[\s\n]+you[\s\n]+consent[\s\n]+to[\s\n]+the[\s\n]+following[\s\n]+conditions\:[\s\n]*-[\s\n]*The[\s\n]+USG[\s\n]+routinely[\s\n]+intercepts[\s\n]+and[\s\n]+monitors[\s\n]+communications[\s\n]+on[\s\n]+this[\s\n]+IS[\s\n]+for[\s\n]+purposes[\s\n]+including,[\s\n]+but[\s\n]+not[\s\n]+limited[\s\n]+to,[\s\n]+penetration[\s\n]+testing,[\s\n]+COMSEC[\s\n]+monitoring,[\s\n]+network[\s\n]+operations[\s\n]+and[\s\n]+defense,[\s\n]+personnel[\s\n]+misconduct[\s\n]+\(PM\),[\s\n]+law[\s\n]+enforcement[\s\n]+\(LE\),[\s\n]+and[\s\n]+counterintelligence[\s\n]+\(CI\)[\s\n]+investigations.[\s\n]*-[\s\n]*At[\s\n]+any[\s\n]+time,[\s\n]+the[\s\n]+USG[\s\n]+may[\s\n]+inspect[\s\n]+and[\s\n]+seize[\s\n]+data[\s\n]+stored[\s\n]+on[\s\n]+this[\s\n]+IS.[\s\n]*-[\s\n]*Communications[\s\n]+using,[\s\n]+or[\s\n]+data[\s\n]+stored[\s\n]+on,[\s\n]+this[\s\n]+IS[\s\n]+are[\s\n]+not[\s\n]+private,[\s\n]+are[\s\n]+subject[\s\n]+to[\s\n]+routine[\s\n]+monitoring,[\s\n]+interception,[\s\n]+and[\s\n]+search,[\s\n]+and[\s\n]+may[\s\n]+be[\s\n]+disclosed[\s\n]+or[\s\n]+used[\s\n]+for[\s\n]+any[\s\n]+USG-authorized[\s\n]+purpose.[\s\n]*-[\s\n]*This[\s\n]+IS[\s\n]+includes[\s\n]+security[\s\n]+measures[\s\n]+\(e.g.,[\s\n]+authentication[\s\n]+and[\s\n]+access[\s\n]+controls\)[\s\n]+to[\s\n]+protect[\s\n]+USG[\s\n]+interests[\s\n]+--[\s\n]+not[\s\n]+for[\s\n]+your[\s\n]+personal[\s\n]+benefit[\s\n]+or[\s\n]+privacy.[\s\n]*-[\s\n]*Notwithstanding[\s\n]+the[\s\n]+above,[\s\n]+using[\s\n]+this[\s\n]+IS[\s\n]+does[\s\n]+not[\s\n]+constitute[\s\n]+consent[\s\n]+to[\s\n]+PM,[\s\n]+LE[\s\n]+or[\s\n]+CI[\s\n]+investigative[\s\n]+searching[\s\n]+or[\s\n]+monitoring[\s\n]+of[\s\n]+the[\s\n]+content[\s\n]+of[\s\n]+privileged[\s\n]+communications,[\s\n]+or[\s\n]+work[\s\n]+product,[\s\n]+related[\s\n]+to[\s\n]+personal[\s\n]+representation[\s\n]+or[\s\n]+services[\s\n]+by[\s\n]+attorneys,[\s\n]+psychotherapists,[\s\n]+or[\s\n]+clergy,[\s\n]+and[\s\n]+their[\s\n]+assistants.[\s\n]+Such[\s\n]+communications[\s\n]+and[\s\n]+work[\s\n]+product[\s\n]+are[\s\n]+private[\s\n]+and[\s\n]+confidential.[\s\n]+See[\s\n]+User[\s\n]+Agreement[\s\n]+for[\s\n]+details.</value>
          <value selector="dod_short">I\'ve[\s\n]+read[\s\n]+\&amp;[\s\n]+consent[\s\n]+to[\s\n]+terms[\s\n]+in[\s\n]+IS[\s\n]+user[\s\n]+agreem\'t.</value>
        </Value>
        <Rule id="banner_etc_issue" severity="medium">
          <title>Modify the System Login Banner</title>
          <description>
To configure the system login banner:
<br/><br/>
Edit <tt>/etc/issue</tt>. Replace the default text with a message
compliant with the local site policy or a legal disclaimer.

The DoD required text is either:
<br/><br/>
<tt>You are accessing a U.S. Government (USG) Information System (IS) that is
provided for USG-authorized use only. By using this IS (which includes any
device attached to this IS), you consent to the following conditions: 
<br/>-The USG routinely intercepts and monitors communications on this IS for purposes
including, but not limited to, penetration testing, COMSEC monitoring, network
operations and defense, personnel misconduct (PM), law enforcement (LE), and
counterintelligence (CI) investigations. 
<br/>-At any time, the USG may inspect and seize data stored on this IS. 
<br/>-Communications using, or data stored on, this IS are not private, are subject 
to routine monitoring, interception, and search, and may be disclosed or used 
for any USG-authorized purpose. 
<br/>-This IS includes security measures (e.g., authentication and access controls) 
to protect USG interests -- not for your personal benefit or privacy. 
<br/>-Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative
searching or monitoring of the content of privileged communications, or work
product, related to personal representation or services by attorneys,
psychotherapists, or clergy, and their assistants. Such communications and work
product are private and confidential. See User Agreement for details.</tt>
<br/><br/>
OR:
<br/><br/>
<tt>I've read &amp; consent to terms in IS user agreem't.</tt>
</description>
          <ocil clause="it does not display the required banner">
To check if the system login banner is compliant,
run the following command:
<pre>$ cat /etc/issue</pre>
</ocil>
          <rationale>
An appropriate warning message reinforces policy awareness during the logon
process and facilitates possible legal action against attackers.
</rationale>
          <oval id="banner_etc_issue" value="login_banner_text"/>
          <ref nist="AC-8(a),AC-8(b),AC-8(c)" disa="48,1384,1385,1386,1387,1388"/>
        </Rule>
        <Group id="gui_login_banner">
          <title>Implement a GUI Warning Banner</title>
          <description>In the default graphical environment, users logging
directly into the system are greeted with a login screen provided
by the GNOME3 Display Manager (GDM). The warning banner should be
displayed in this graphical environment for these users.
The following sections describe how to configure the GDM login
banner.
</description>
          <Rule id="dconf_gnome_banner_enabled" severity="medium">
            <title>Enable GNOME3 Login Warning Banner</title>
            <description>
To enable displaying a login warning banner in the GNOME
Display Manager's login screen, the <tt>banner-message-enable</tt> setting must be 
set under an appropriate configuration file(s) in the <tt>/etc/dconf/db/gdm.d</tt> directory 
and locked in <tt>/etc/dconf/db/gdm.d/locks</tt> directory to prevent user modification. 
After the settings have been set, run <tt>dconf update</tt>.
To display a banner, this setting must be enabled, and the user must be prevented
from making changes. The banner text must also be set.
</description>
            <ocil clause="it is not">
To ensure a login warning banner is enabled, run the following:
<pre>$ grep banner-message-enable /etc/dconf/db/gdm.d/*</pre>
If properly configured, the output should be <tt>true</tt>.
To ensure a login warning banner is locked and cannot be changed by a user, run the following:
<pre>$ grep banner-message-enable /etc/dconf/db/gdm.d/locks/*</pre>
If properly configured, the output should be <tt>/org/gnome/login-screen/banner-message-enable</tt>.
</ocil>
            <rationale>
An appropriate warning message reinforces policy awareness during the logon
process and facilitates possible legal action against attackers.
</rationale>
            <oval id="dconf_gnome_banner_enabled"/>
            <ref nist="AC-8(a),AC-8(b),AC-8(c)" disa="48,50"/>
          </Rule>
          <Rule id="dconf_gnome_login_banner_text" severity="medium">
            <title>Set the GNOME3 Login Warning Banner Text</title>
            <description>
To set the text shown by the GNOME3 Display Manager
in the login screen, the <tt>banner-message-text</tt> setting must be set under an
appropriate configuration file(s) in the <tt>/etc/dconf/db/gdm.d</tt> directory and locked 
in <tt>/etc/dconf/db/gdm.d/locks</tt> directory to prevent user modification. 
After the settings have been set, run <tt>dconf update</tt>.
When entering a warning banner that spans several lines, remember
to begin and end the string with <tt>'</tt> and use <tt>\n</tt> for new lines.
</description>
            <ocil clause="it does not">
To ensure the login warning banner text is properly set, run the following:
<pre>$ grep banner-message-text /etc/dconf/db/gdm.d/*</pre>
If properly configured, the proper banner text will appear.
To ensure the login warning banner text is locked and cannot be changed by a user, run the following:
<pre>$ grep banner-message-enable /etc/dconf/db/gdm.d/locks/*</pre>
If properly configured, the output should be <tt>/org/gnome/login-screen/banner-message-text</tt>.
</ocil>
            <rationale>
An appropriate warning message reinforces policy awareness during the logon
process and facilitates possible legal action against attackers.
</rationale>
            <oval id="dconf_gnome_login_banner_text" value="login_banner_text"/>
            <ref nist="AC-8(a),AC-8(b),AC-8(c)" disa="48,1384,1385,1386,1387,1388"/>
          </Rule>
        </Group>
      </Group>
    </Group>
    <Group id="network">
      <title>Network Configuration and Firewalls</title>
      <description>Most machines must be connected to a network of some
sort, and this brings with it the substantial risk of network
attack. This section discusses the security impact of decisions
about networking which must be made when configuring a system.
<br/><br/>
This section also discusses firewalls, network access
controls, and other network security frameworks, which allow
system-level rules to be written that can limit an attackers' ability
to connect to your system. These rules can specify that network
traffic should be allowed or denied from certain IP addresses,
hosts, and networks. The rules can also specify which of the
system's network services are available to particular hosts or
networks.</description>
      <Group id="network_disable_unused_interfaces">
        <title>Disable Unused Interfaces</title>
        <description>Network interfaces expand the attack surface of the 
system.  Unused interfaces are not monitored or controlled, and 
should be disabled.
<br/><br/>
If the system does not require network communications but still
needs to use the loopback interface, remove all files of the form
<tt>ifcfg-<i>interface</i></tt> except for <tt>ifcfg-lo</tt> from
<tt>/etc/sysconfig/network-scripts</tt>:
<pre>$ sudo rm /etc/sysconfig/network-scripts/ifcfg-<i>interface</i></pre>
If the system is a standalone machine with no need for network access or even
communication over the loopback device, then disable this service.
<systemd-service-macro enable="false" service="network"/>
</description>
      </Group>
      <Rule id="network_disable_zeroconf">
        <title>Disable Zeroconf Networking</title>
        <description>Zeroconf networking allows the system to assign itself an IP
address and engage in IP communication without a statically-assigned address or
even a DHCP server. Automatic address assignment via Zeroconf (or DHCP) is not
recommended. To disable Zeroconf automatic route assignment in the 169.254.0.0
subnet, add or correct the following line in <tt>/etc/sysconfig/network</tt>:
<pre>NOZEROCONF=yes</pre>
</description>
        <rationale>Zeroconf addresses are in the network 169.254.0.0. The networking
scripts add entries to the system's routing table for these addresses. Zeroconf
address assignment commonly occurs when the system is configured to use DHCP
but fails to receive an address assignment from the DHCP server.
</rationale>
        <!--oval id="network_disable_zeroconf" /-->
        <ref nist="CM-7"/>
      </Rule>
      <Rule id="network_sniffer_disabled">
        <title>Ensure System is Not Acting as a Network Sniffer</title>
        <description>The system should not be acting as a network sniffer, which can
capture all traffic on the network to which it is connected. Run the following
to determine if any interface is running in promiscuous mode:
<pre>$ ip link | grep PROMISC</pre>
</description>
        <rationale>If any results are returned, then a sniffing process (such as tcpdump
or Wireshark) is likely to be using the interface and this should be
investigated.
</rationale>
        <!--oval id="network_sniffer_disabled" /-->
        <ref nist="CM-7,MA-3"/>
      </Rule>
      <Group id="network-kernel">
        <title>Kernel Parameters Which Affect Networking</title>
        <description>The <tt>sysctl</tt> utility is used to set
parameters which affect the operation of the Linux kernel. Kernel parameters
which affect networking and have security implications are described here.
</description>
        <Group id="network_host_parameters">
          <title>Network Parameters for Hosts Only</title>
          <description>If the system is not going to be used as a router, then setting certain
kernel parameters ensure that the host will not perform routing
of network traffic.</description>
          <Rule id="sysctl_net_ipv4_conf_default_send_redirects" severity="medium">
            <title>Disable Kernel Parameter for Sending ICMP Redirects by Default</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.default.send_redirects" value="0"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.default.send_redirects" value="0"/>
            </ocil>
            <rationale>ICMP redirect messages are used by routers to inform hosts that a more
direct route exists for a particular destination. These messages contain information
from the system's route table possibly revealing portions of the network topology.
<br/>
The ability to send ICMP redirects is only appropriate for systems acting as routers.
</rationale>
            <oval id="sysctl_net_ipv4_conf_default_send_redirects"/>
            <ref nist="AC-4,CM-7,SC-5,SC-7" disa="1551" cis="4.1.2"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_conf_all_send_redirects" severity="medium">
            <title>Disable Kernel Parameter for Sending ICMP Redirects for All Interfaces</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.all.send_redirects" value="0"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.all.send_redirects" value="0"/>
            </ocil>
            <rationale>ICMP redirect messages are used by routers to inform hosts that a more
direct route exists for a particular destination. These messages contain information
from the system's route table possibly revealing portions of the network topology.
<br/>
The ability to send ICMP redirects is only appropriate for systems acting as routers.
</rationale>
            <oval id="sysctl_net_ipv4_conf_all_send_redirects"/>
            <ref nist="CM-7,SC-5(1)" disa="1551" cis="4.1.2"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_ip_forward" severity="medium">
            <title>Disable Kernel Parameter for IP Forwarding</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.ip_forward" value="0"/>
            </description>
            <ocil><sysctl-check-macro sysctl="net.ipv4.ip_forward" value="0"/>
The ability to forward packets is only appropriate for routers.
</ocil>
            <rationale>IP forwarding permits the kernel to forward packets from one network
interface to another. The ability to forward packets between two networks is
only appropriate for systems acting as routers.</rationale>
            <oval id="sysctl_net_ipv4_ip_forward"/>
            <ref nist="CM-7, SC-5" disa="366" cis="4.1.1"/>
          </Rule>
        </Group>
        <Group id="network_host_and_router_parameters">
          <title>Network Related Kernel Runtime Parameters for Hosts and Routers</title>
          <description>Certain kernel parameters should be set for systems which are
acting as either hosts or routers to improve the system's ability defend
against certain types of IPv4 protocol attacks.</description>
          <Value id="sysctl_net_ipv4_conf_all_accept_source_route_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.conf.all.accept_source_route</title>
            <description>Trackers could be using source-routed packets to
generate traffic that seems to be intra-net, but actually was
created outside and has been redirected.</description>
            <value selector="">0</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_conf_all_accept_redirects_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.conf.all.accept_redirects</title>
            <description>Disable ICMP Redirect Acceptance</description>
            <value selector="">0</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_conf_all_secure_redirects_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.conf.all.secure_redirects</title>
            <description>Enable to prevent hijacking of routing path by only
allowing redirects from gateways known in routing
table.</description>
            <value selector="">1</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_conf_default_log_martians_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.conf.default.log_martians</title>
            <description>Disable so you don't Log Spoofed Packets, Source
Routed Packets, Redirect Packets</description>
            <value selector="">1</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_conf_all_log_martians_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.conf.all.log_martians</title>
            <description>Disable so you don't Log Spoofed Packets, Source
Routed Packets, Redirect Packets</description>
            <value selector="">1</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_conf_default_accept_source_route_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.conf.default.accept_source_route</title>
            <description>Disable IP source routing?</description>
            <value selector="">0</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_conf_default_accept_redirects_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.conf.default.accept_redirects</title>
            <description>Disable ICMP Redirect Acceptance?</description>
            <value selector="">0</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_conf_default_secure_redirects_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.conf.default.secure_redirects</title>
            <description>Log packets with impossible addresses to kernel
log?</description>
            <value selector="">1</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.icmp_echo_ignore_broadcasts</title>
            <description>Ignore all ICMP ECHO and TIMESTAMP requests sent to it
via broadcast/multicast</description>
            <value selector="">1</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.icmp_ignore_bogus_error_responses</title>
            <description>Enable to prevent unnecessary logging</description>
            <value selector="">1</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_tcp_syncookies_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.tcp_syncookies</title>
            <description>Enable to turn on TCP SYN Cookie
Protection</description>
            <value selector="">1</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_conf_all_rp_filter_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.conf.all.rp_filter</title>
            <description>Enable to enforce sanity checking, also called ingress
filtering or egress filtering. The point is to drop a packet if the
source and destination IP addresses in the IP header do not make
sense when considered in light of the physical interface on which
it arrived.</description>
            <value selector="">1</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Value id="sysctl_net_ipv4_conf_default_rp_filter_value" type="number" operator="equals" interactive="0">
            <title>net.ipv4.conf.default.rp_filter</title>
            <description>Enables source route verification</description>
            <value selector="">1</value>
            <value selector="enabled">1</value>
            <value selector="disabled">0</value>
          </Value>
          <Rule id="sysctl_net_ipv4_conf_all_accept_source_route" severity="medium">
            <title>Configure Kernel Parameter for Accepting Source-Routed Packets for All Interfaces</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.all.accept_source_route" value="0"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.all.accept_source_route" value="0"/>
            </ocil>
            <rationale>Source-routed packets allow the source of the packet to suggest routers
forward the packet along a different path than configured on the router, which can
be used to bypass network security measures. This requirement applies only to the
forwarding of source-routerd traffic, such as when IPv4 forwarding is enabled and 
the system is functioning as a router.

Accepting source-routed packets in the IPv4 protocol has few legitimate
uses. It should be disabled unless it is absolutely required.</rationale>
            <oval id="sysctl_net_ipv4_conf_all_accept_source_route" value="sysctl_net_ipv4_conf_all_accept_source_route_value"/>
            <ref nist="AC-4,CM-7,SC-5" disa="366" ossrg="SRG-OS-000480-GPOS-00227" stigid="040350" cis="4.2.1"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_conf_all_accept_redirects" severity="medium">
            <title>Configure Kernel Parameter for Accepting ICMP Redirects for All Interfaces</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.all.accept_redirects" value="0"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.all.accept_redirects" value="0"/>
            </ocil>
            <rationale>ICMP redirect messages are used by routers to inform hosts that a more direct
route exists for a particular destination. These messages modify the host's route table 
and are unauthenticated. An illicit ICMP redirect message could result in a man-in-the-middle
attack.
<br/>
This feature of the IPv4 protocol has few legitimate uses. It should be disabled unless 
absolutely required.</rationale>
            <oval id="sysctl_net_ipv4_conf_all_accept_redirects" value="sysctl_net_ipv4_conf_all_accept_redirects_value"/>
            <ref nist="CM-7,SC-5" disa="1503,1551" cis="4.2.2"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_conf_all_secure_redirects" severity="medium">
            <title>Configure Kernel Parameter for Accepting Secure Redirects for All Interfaces</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.all.secure_redirects" value="0"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.all.secure_redirects" value="0"/>
            </ocil>
            <rationale>Accepting "secure" ICMP redirects (from those gateways listed as
default gateways) has few legitimate uses. It should be disabled unless it is
absolutely required.</rationale>
            <oval id="sysctl_net_ipv4_conf_all_secure_redirects" value="sysctl_net_ipv4_conf_all_secure_redirects_value"/>
            <ref nist="AC-4,CM-7,SC-5" disa="1503,1551" cis="4.2.3"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_conf_all_log_martians">
            <title>Configure Kernel Parameter to Log Martian Packets</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.all.log_martians" value="1"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.all.log_martians" value="1"/>
            </ocil>
            <rationale>The presence of "martian" packets (which have impossible addresses)
as well as spoofed packets, source-routed packets, and redirects could be a
sign of nefarious network activity. Logging these packets enables this activity
to be detected.</rationale>
            <oval id="sysctl_net_ipv4_conf_all_log_martians" value="sysctl_net_ipv4_conf_all_log_martians_value"/>
            <ref nist="AC-17(7),CM-7,SC-5(3)" disa="126" cis="4.2.4"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_conf_default_log_martians">
            <title>Configure Kernel Parameter to Log Martian Packets By Default</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.default.log_martians" value="1"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.default.log_martians" value="1"/>
            </ocil>
            <rationale>The presence of "martian" packets (which have impossible addresses)
as well as spoofed packets, source-routed packets, and redirects could be a
sign of nefarious network activity. Logging these packets enables this activity
to be detected.</rationale>
            <oval id="sysctl_net_ipv4_conf_default_log_martians" value="sysctl_net_ipv4_conf_default_log_martians_value"/>
            <ref nist="AC-17(7),CM-7,SC-5(3)" disa="126" cis="4.2.4"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_conf_default_accept_source_route" severity="medium">
            <title>Configure Kernel Parameter for Accepting Source-Routed Packets By Default</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.default.accept_source_route" value="0"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.default.accept_source_route" value="0"/>
            </ocil>
            <rationale>Source-routed packates allow the source of the packet to suggest routers
forward the packet along a different path than configured on the router, which can 
be used to bypass network security measures.
<br/>
Accepting source-routed packets in the IPv4 protocol has few legitimate
uses. It should be disabled unless it is absolutely required, such as when
IPv4 forwarding is enabled and the system is legitimately functioning as
a router.</rationale>
            <oval id="sysctl_net_ipv4_conf_default_accept_source_route" value="sysctl_net_ipv4_conf_default_accept_source_route_value"/>
            <ref nist="AC-4,CM-7,SC-5,SC-7" disa="1551" ossrg="SRG-OS-000480-GPOS-00227" stigid="040350" cis="4.2.1"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_conf_default_accept_redirects" severity="medium">
            <title>Configure Kernel Parameter for Accepting ICMP Redirects By Default</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.default.accept_redirects" value="0"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.default.accept_redirects" value="0"/>
            </ocil>
            <rationale>ICMP redirect messages are used by routers to inform hosts that a more direct
route exists for a particular destination. These messages modify the host's route table
and are unauthenticated. An illicit ICMP redirect message could result in a man-in-the-middle
attack.
<br/>
This feature of the IPv4 protocol has few legitimate uses. It should be disabled unless 
absolutely required.</rationale>
            <oval id="sysctl_net_ipv4_conf_default_accept_redirects" value="sysctl_net_ipv4_conf_default_accept_redirects_value"/>
            <ref nist="AC-4,CM-7,SC-5,SC-7" disa="1551" cis="4.2.2"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_conf_default_secure_redirects" severity="medium">
            <title>Configure Kernel Parameter for Accepting Secure Redirects By Default</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.default.secure_redirects" value="0"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.default.secure_redirects" value="0"/>
            </ocil>
            <rationale>Accepting "secure" ICMP redirects (from those gateways listed as
default gateways) has few legitimate uses. It should be disabled unless it is
absolutely required.</rationale>
            <oval id="sysctl_net_ipv4_conf_default_secure_redirects" value="sysctl_net_ipv4_conf_default_secure_redirects_value"/>
            <ref nist="AC-4,CM-7,SC-5,SC-7" disa="1551" cis="4.2.3"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_icmp_echo_ignore_broadcasts" severity="medium">
            <title>Configure Kernel Parameter to Ignore ICMP Broadcast Echo Requests</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.icmp_echo_ignore_broadcasts" value="1"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.icmp_echo_ignore_broadcasts" value="1"/>
            </ocil>
            <rationale>Responding to broadcast (ICMP) echoes facilitates network mapping
and provides a vector for amplification attacks.
<br/>
Ignoring ICMP echo requests (pings) sent to broadcast or multicast
addresses makes the system slightly more difficult to enumerate on the network.
</rationale>
            <oval id="sysctl_net_ipv4_icmp_echo_ignore_broadcasts" value="sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value"/>
            <ref nist="AC-4,CM-7,SC-5" disa="366" ossrg="SRG-OS-000480-GPOS-00227" stigid="040380" cis="4.2.5"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_icmp_ignore_bogus_error_responses">
            <title>Configure Kernel Parameter to Ignore Bogus ICMP Error Responses</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.icmp_ignore_bogus_error_responses" value="1"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.icmp_ignore_bogus_error_responses" value="1"/>
            </ocil>
            <rationale>Ignoring bogus ICMP error responses reduces
log size, although some activity would not be logged.</rationale>
            <oval id="sysctl_net_ipv4_icmp_ignore_bogus_error_responses" value="sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value"/>
            <ref nist="CM-7,SC-5" cis="4.2.6"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_tcp_syncookies" severity="medium">
            <title>Configure Kernel Parameter to Use TCP Syncookies</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.tcp_syncookies" value="1"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.tcp_syncookies" value="1"/>
            </ocil>
            <rationale> A TCP SYN flood attack can cause a denial of service by filling a
system's TCP connection table with connections in the SYN_RCVD state.
Syncookies can be used to track a connection when a subsequent ACK is received,
verifying the initiator is attempting a valid connection and is not a flood
source. This feature is activated when a flood condition is detected, and
enables the system to continue servicing valid connection requests.
</rationale>
            <oval id="sysctl_net_ipv4_tcp_syncookies" value="sysctl_net_ipv4_tcp_syncookies_value"/>
            <ref nist="AC-4,SC-5(1)(2),SC-5(2),SC-5(3)" disa="366" ossrg="SRG-OS-000480-GPOS-00227" stigid="040430" cis="4.2.8"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_conf_all_rp_filter" severity="medium">
            <title>Configure Kernel Parameter to Use Reverse Path Filtering for All Interfaces</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.all.rp_filter" value="1"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.all.rp_filter" value="1"/>
            </ocil>
            <rationale>Enabling reverse path filtering drops packets with source addresses
that should not have been able to be received on the interface they were
received on. It should not be used on systems which are routers for
complicated networks, but is helpful for end hosts and routers serving small
networks.</rationale>
            <oval id="sysctl_net_ipv4_conf_all_rp_filter" value="sysctl_net_ipv4_conf_all_rp_filter_value"/>
            <ref nist="AC-4,SC-5,SC-7" disa="1551" cis="4.2.7"/>
          </Rule>
          <Rule id="sysctl_net_ipv4_conf_default_rp_filter" severity="medium">
            <title>Configure Kernel Parameter to Use Reverse Path Filtering by Default</title>
            <description>
              <sysctl-desc-macro sysctl="net.ipv4.conf.default.rp_filter" value="1"/>
            </description>
            <ocil>
              <sysctl-check-macro sysctl="net.ipv4.conf.default.rp_filter" value="1"/>
            </ocil>
            <rationale>Enabling reverse path filtering drops packets with source addresses
that should not have been able to be received on the interface they were
received on. It should not be used on systems which are routers for
complicated networks, but is helpful for end hosts and routers serving small
networks.</rationale>
            <oval id="sysctl_net_ipv4_conf_default_rp_filter" value="sysctl_net_ipv4_conf_default_rp_filter_value"/>
            <ref nist="AC-4,SC-5,SC-7" cis="4.2.7"/>
          </Rule>
        </Group>
      </Group>
      <Group id="network-wireless">
        <title>Wireless Networking</title>
        <description>Wireless networking, such as 802.11
(WiFi) and Bluetooth, can present a security risk to sensitive or
classified systems and networks. Wireless networking hardware is
much more likely to be included in laptop or portable systems than
in desktops or servers. 
<br/><br/>
Removal of hardware provides the greatest assurance that the wireless
capability remains disabled. Acquisition policies often include provisions to
prevent the purchase of equipment that will be used in sensitive spaces and
includes wireless capabilities. If it is impractical to remove the wireless
hardware, and policy permits the device to enter sensitive spaces as long
as wireless is disabled, efforts should instead focus on disabling wireless capability
via software.</description>
        <Group id="wireless_software">
          <title>Disable Wireless Through Software Configuration</title>
          <description>If it is impossible to remove the wireless hardware
from the device in question, disable as much of it as possible
through software. The following methods can disable software
support for wireless networking, but note that these methods do not
prevent malicious software or careless users from re-activating the
devices.</description>
          <Rule id="wireless_disable_in_bios">
            <title>Disable WiFi or Bluetooth in BIOS</title>
            <description>Some systems that include built-in wireless support offer the
ability to disable the device through the BIOS. This is system-specific;
consult your hardware manual or explore the BIOS setup during
boot.</description>
            <rationale>Disabling wireless support in the BIOS prevents easy
activation of the wireless interface, generally requiring administrators
to reboot the system first.
</rationale>
            <!--TODO:OCIL <oval id="wireless_disable_in_bios" />-->
            <ref nist="AC-17(8),AC-18(a),AC-18(d),AC-18(3),CM-7" disa="85"/>
          </Rule>
          <Rule id="wireless_disable_interfaces">
            <title>Deactivate Wireless Network Interfaces</title>
            <description>Deactivating wireless network interfaces should prevent
normal usage of the wireless capability.
<br/><br/>
First, identify the interfaces available with the command:
<pre>$ ifconfig -a</pre>
Additionally, the following command may be used to
determine whether wireless support is included for a
particular interface, though this may not always be a clear
indicator:
<pre>$ iwconfig</pre>
After identifying any wireless interfaces (which may have
names like <tt>wlan0</tt>, <tt>ath0</tt>, <tt>wifi0</tt>, <tt>em1</tt> or
<tt>eth0</tt>), deactivate the interface with the command:
<pre>$ sudo ifdown <i>interface</i></pre>
These changes will only last until the next reboot. To
disable the interface for future boots, remove the appropriate
interface file from <tt>/etc/sysconfig/network-scripts</tt>:
<pre>$ sudo rm /etc/sysconfig/network-scripts/ifcfg-<i>interface</i></pre>
</description>
            <rationale>Wireless networking allows attackers within physical proximity to
launch network-based attacks against systems, including those against local LAN
protocols which were not designed with security in mind.
</rationale>
            <oval id="wireless_disable_interfaces"/>
            <ref nist="AC-17(8),AC-18(a),AC-18(d),AC-18(3),CM-7" disa="85" cis="4.3.1"/>
          </Rule>
          <Rule id="service_bluetooth_disabled" severity="medium">
            <title>Disable Bluetooth Service</title>
            <description>
              <systemd-service-macro enable="false" service="bluetooth"/>
              <pre>$ sudo service bluetooth stop</pre>
            </description>
            <ocil>
              <systemd-check-macro enable="false" service="bluetooth"/>
            </ocil>
            <rationale>Disabling the <tt>bluetooth</tt> service prevents the system from attempting
connections to Bluetooth devices, which entails some security risk.
Nevertheless, variation in this risk decision may be expected due to the
utility of Bluetooth connectivity and its limited range.</rationale>
            <oval id="service_bluetooth_disabled"/>
            <ref nist="AC-17(8),AC-18(a),AC-18(d),AC-18(3),CM-7" disa="85,1551"/>
          </Rule>
          <Rule id="kernel_module_bluetooth_disabled" severity="medium">
            <title>Disable Bluetooth Kernel Modules</title>
            <description>The kernel's module loading system can be configured to prevent
loading of the Bluetooth module. Add the following to
the appropriate <tt>/etc/modprobe.d</tt> configuration file
to prevent the loading of the Bluetooth module:
<pre>install bluetooth /bin/true</pre>
</description>
            <ocil>
              <module-disable-check-macro module="bluetooth"/>
            </ocil>
            <rationale>If Bluetooth functionality must be disabled, preventing the kernel
from loading the kernel module provides an additional safeguard against its
activation.</rationale>
            <oval id="kernel_module_bluetooth_disabled"/>
            <ref nist="AC-17(8),AC-18(a),AC-18(d),AC-18(3),CM-7" disa="85,1551"/>
          </Rule>
        </Group>
        <!--<Group id="wireless_software">-->
      </Group>
      <!--<Group id="network-wireless">-->
      <Group id="network-ipv6">
        <title>IPv6</title>
        <description>The system includes support for Internet Protocol
version 6. A major and often-mentioned improvement over IPv4 is its
enormous increase in the number of available addresses. Another
important feature is its support for automatic configuration of
many network settings.</description>
        <Group id="disabling_ipv6">
          <title>Disable Support for IPv6 Unless Needed</title>
          <description>
Despite configuration that suggests support for IPv6 has
been disabled, link-local IPv6 address auto-configuration occurs
even when only an IPv4 address is assigned. The only way to
effectively prevent execution of the IPv6 networking stack is to
instruct the system not to activate the IPv6 kernel module.
</description>
          <Rule id="sysctl_kernel_ipv6_disable" severity="medium">
            <title>Disable IPv6 Networking Support Automatic Loading</title>
            <description>To disable support for (<tt>ipv6</tt>) add the following line to
<tt>/etc/sysctl.d/ipv6.conf</tt> (or another file in
<tt>/etc/sysctl.d</tt>):
<pre>net.ipv6.conf.all.disable_ipv6 = 1</pre>
This disables IPv6 on all network interfaces as other services and system
functionality require the IPv6 stack loaded to work.
</description>
            <ocil clause="the ipv6 support is disabled on network interfaces">
If the system uses IPv6, this is not applicable.
<br/><br/>
If the system is configured to prevent the usage of the
<tt>ipv6</tt> on network interfaces, it will contain a line
of the form:
<pre>net.ipv6.conf.all.disable_ipv6 = 1</pre>
Such lines may be inside any file in the <tt>/etc/sysctl.d</tt> directory. 
This permits insertion of the IPv6 kernel module (which other parts of 
the system expect to be present), but otherwise keeps all network interfaces
from using IPv6.
Run the following command to search for such
lines in all files in <tt>/etc/sysctl.d</tt>:
<pre xml:space="preserve">$ grep -r ipv6 /etc/sysctl.d</pre>
</ocil>
            <rationale>
Any unnecessary network stacks - including IPv6 - should be disabled, to reduce
the vulnerability to exploitation.
</rationale>
            <oval id="sysctl_kernel_ipv6_disable"/>
            <ref nist="CM-7" disa="1551"/>
          </Rule>
          <Rule id="network_ipv6_disable_interfaces">
            <title>Disable Interface Usage of IPv6</title>
            <description>To disable interface usage of IPv6, add or correct the following lines in <tt>/etc/sysconfig/network</tt>:
<pre>NETWORKING_IPV6=no
IPV6INIT=no</pre>
</description>
          </Rule>
          <Rule id="network_ipv6_disable_rpc">
            <title>Disable Support for RPC IPv6</title>
            <description>RPC services for NFSv4 try to load transport modules for
<tt>udp6</tt> and <tt>tcp6</tt> by default, even if IPv6 has been disabled in
<tt>/etc/modprobe.d</tt>. To prevent RPC services such as <tt>rpc.mountd</tt>
from attempting to start IPv6 network listeners, remove or comment out the
following two lines in <tt>/etc/netconfig</tt>:
<pre>udp6       tpi_clts      v     inet6    udp     -       -
tcp6       tpi_cots_ord  v     inet6    tcp     -       -</pre>
</description>
            <!--oval id="network_ipv6_disable_rpc" /-->
            <ref nist="CM-7"/>
          </Rule>
        </Group>
        <!--<Group id="disabling_ipv6">-->
        <Group id="configuring_ipv6">
          <title>Configure IPv6 Settings if Necessary</title>
          <description>A major feature of IPv6 is the extent to which systems
implementing it can automatically configure their networking
devices using information from the network. From a security
perspective, manually configuring important configuration
information is preferable to accepting it from the network
in an unauthenticated fashion.</description>
          <Group id="disabling_ipv6_autoconfig">
            <title>Disable Automatic Configuration</title>
            <description>Disable the system's acceptance of router
advertisements and redirects by adding or correcting the following
line in <tt>/etc/sysconfig/network</tt> (note that this does not disable
sending router solicitations):
<pre>IPV6_AUTOCONF=no</pre>
</description>
            <Value id="sysconfig_network_IPV6_AUTOCONF_value" type="string" operator="equals" interactive="0">
              <title>IPV6_AUTOCONF</title>
              <description>Toggle global IPv6 auto-configuration (only, if global
forwarding is disabled)</description>
              <value>no</value>
              <value selector="enabled">yes</value>
              <value selector="disabled">no</value>
            </Value>
            <Value id="sysctl_net_ipv6_conf_default_accept_ra_value" type="string" operator="equals" interactive="0">
              <title>net.ipv6.conf.default.accept_ra</title>
              <description>Accept default router advertisements?</description>
              <value>0</value>
              <value selector="enabled">1</value>
              <value selector="disabled">0</value>
            </Value>
            <Value id="sysctl_net_ipv6_conf_default_accept_redirects_value" type="string" operator="equals" interactive="0">
              <title>net.ipv6.conf.default.accept_redirects</title>
              <description>Toggle ICMP Redirect Acceptance</description>
              <value>0</value>
              <value selector="enabled">1</value>
              <value selector="disabled">0</value>
            </Value>
            <Rule id="sysctl_net_ipv6_conf_default_accept_ra">
              <title>Disable Accepting IPv6 Router Advertisements</title>
              <description>
                <sysctl-desc-macro sysctl="net.ipv6.conf.default.accept_ra" value="0"/>
              </description>
              <ocil>
                <sysctl-check-macro sysctl="net.ipv6.conf.default.accept_ra" value="0"/>
              </ocil>
              <rationale>
An illicit router advertisement message could result in a man-in-the-middle attack.
</rationale>
              <!--oval id="sysctl_net_ipv6_conf_default_accept_ra" value="sysctl_net_ipv6_conf_default_accept_ra_value" /-->
              <ref nist="CM-7"/>
            </Rule>
            <Rule id="sysctl_net_ipv6_conf_default_accept_redirects" severity="medium">
              <title>Disable Accepting IPv6 Redirects</title>
              <description>
                <sysctl-desc-macro sysctl="net.ipv6.conf.default.accept_redirects" value="0"/>
              </description>
              <ocil>
                <sysctl-check-macro sysctl="net.ipv6.conf.default.accept_redirects" value="0"/>
              </ocil>
              <rationale>
An illicit ICMP redirect message could result in a man-in-the-middle attack.
</rationale>
              <!--oval id="sysctl_net_ipv6_conf_default_accept_redirects" value="sysctl_net_ipv6_conf_default_accept_redirects_value" /-->
              <ref nist="CM-7" disa="1551"/>
            </Rule>
          </Group>
          <!--<Group id="disabling_ipv6_autoconfig">-->
          <Rule id="network_ipv6_static_address">
            <title>Manually Assign Global IPv6 Address</title>
            <description>To manually assign an IP address for an interface, edit the
file <tt>/etc/sysconfig/network-scripts/ifcfg-<i>interface</i></tt>. Add or correct the
following line (substituting the correct IPv6 address):
<pre>IPV6ADDR=2001:0DB8::ABCD/64</pre>
Manually assigning an IP address is preferable to accepting one from routers or
from the network otherwise. The example address here is an IPv6 address
reserved for documentation purposes, as defined by RFC3849.
</description>
            <!--oval id="network_ipv6_static_address" /-->
            <ref disa="366"/>
          </Rule>
          <Rule id="network_ipv6_privacy_extensions">
            <title>Use Privacy Extensions for Address</title>
            <description>To introduce randomness into the automatic generation of IPv6
addresses, add or correct the following line in
<tt>/etc/sysconfig/network-scripts/ifcfg-<i>interface</i></tt>:
<pre>IPV6_PRIVACY=rfc3041</pre>
Automatically-generated IPv6 addresses are based on the underlying hardware
(e.g. Ethernet) address, and so it becomes possible to track a piece of
hardware over its lifetime using its traffic. If it is important for a system's
IP address to not trivially reveal its hardware address, this setting should be
applied.
</description>
            <!--oval id="network_ipv6_privacy_extensions" /-->
            <ref disa="366"/>
          </Rule>
          <Rule id="network_ipv6_default_gateway">
            <title>Manually Assign IPv6 Router Address</title>
            <description>Edit the file
<tt>/etc/sysconfig/network-scripts/ifcfg-<i>interface</i></tt>, and add or correct
the following line (substituting your gateway IP as appropriate):
<pre>IPV6_DEFAULTGW=2001:0DB8::0001</pre>
Router addresses should be manually set and not accepted via any
auto-configuration or router advertisement.
</description>
            <!--oval id="network_ipv6_default_gateway" /-->
            <ref disa="366"/>
          </Rule>
          <Group id="network_ipv6_limit_requests">
            <title>Limit Network-Transmitted Configuration if Using Static IPv6 Addresses</title>
            <description>To limit the configuration information requested from other
systems and accepted from the network on a system that uses
statically-configured IPv6 addresses, add the following lines to
<tt>/etc/sysctl.conf</tt>:
<pre>net.ipv6.conf.default.router_solicitations = 0
net.ipv6.conf.default.accept_ra_rtr_pref = 0
net.ipv6.conf.default.accept_ra_pinfo = 0
net.ipv6.conf.default.accept_ra_defrtr = 0
net.ipv6.conf.default.autoconf = 0
net.ipv6.conf.default.dad_transmits = 0
net.ipv6.conf.default.max_addresses = 1</pre>
The <tt>router_solicitations</tt> setting determines how many router
solicitations are sent when bringing up the interface. If addresses are
statically assigned, there is no need to send any solicitations.
<br/><br/>
The <tt>accept_ra_pinfo</tt> setting controls whether the system will accept
prefix info from the router.
<br/><br/>
The <tt>accept_ra_defrtr</tt> setting controls whether the system will accept
Hop Limit settings from a router advertisement. Setting it to 0 prevents a
router from changing your default IPv6 Hop Limit for outgoing packets.
<br/><br/>
The <tt>autoconf</tt> setting controls whether router advertisements can cause
the system to assign a global unicast address to an interface.
<br/><br/>
The <tt>dad_transmits</tt> setting determines how many neighbor solicitations
to send out per address (global and link-local) when bringing up an interface
to ensure the desired address is unique on the network.
<br/><br/>
The <tt>max_addresses</tt> setting determines how many global unicast IPv6
addresses can be assigned to each interface.  The default is 16, but it should
be set to exactly the number of statically configured global addresses
required.
</description>
          </Group>
        </Group>
        <!--<Group id="configuring_ipv6">-->
      </Group>
      <!--<Group id="network-ipv6">-->
      <Group id="network-firewalld">
        <title>firewalld</title>
        <description>The dynamic firewall daemon <tt>firewalld</tt> provides a
dynamically managed firewall with support for network &#x201C;zones&#x201D; to assign
a level of trust to a network and its associated connections and interfaces.
It has support for IPv4 and IPv6 firewall settings. It supports Ethernet
bridges and has a separation of runtime and permanent configuration options.
It also has an interface for services or applications to add firewall rules
directly.
<br/>
A graphical configuration tool, <tt>firewall-config</tt>, is used to configure
<tt>firewalld</tt>, which in turn uses <tt>iptables</tt> tool to communicate
with <tt>Netfilter</tt> in the kernel which implements packet filtering.
<br/>
The firewall service provided by <tt>firewalld</tt> is dynamic rather than
static because changes to the configuration can be made at anytime and are
immediately implemented. There is no need to save or apply the changes. No
unintended disruption of existing network connections occurs as no part of
the firewall has to be reloaded.
</description>
        <Group id="firewalld_activation">
          <title>Inspect and Activate Default firewalld Rules</title>
          <description>Firewalls can be used to separate networks into different zones
based on the level of trust the user has decided to place on the devices and
traffic within that network. <tt>NetworkManager</tt> informs firewalld to which
zone an interface belongs. An interface's assigned zone can be changed by
<tt>NetworkManager</tt> or via the <tt>firewall-config</tt> tool.
<br/>
The zone settings in <tt>/etc/firewalld/</tt> are a range of preset settings
which can be quickly applied to a network interface. These are the zones
provided by firewalld sorted according to the default trust level of the
zones from untrusted to trusted:
<ul><li><tt>drop</tt><br/><p>Any incoming network packets are dropped, there is no
reply. Only outgoing network connections are possible.</p></li><li><tt>block</tt><br/><p>Any incoming network connections are rejected with an
<tt>icmp-host-prohibited</tt> message for IPv4 and <tt>icmp6-adm-prohibited</tt>
for IPv6. Only network connections initiated from within the system are
possible.</p></li><li><tt>public</tt><br/><p>For use in public areas. You do not trust the other
computers on the network to not harm your computer. Only selected incoming
connections are accepted.</p></li><li><tt>external</tt><br/><p>For use on external networks with masquerading enabled
especially for routers. You do not trust the other computers on the network to
not harm your computer. Only selected incoming connections are accepted.</p></li><li><tt>dmz</tt><br/><p>For computers in your demilitarized zone that are
publicly-accessible with limited access to your internal network. Only selected
incoming connections are accepted.</p></li><li><tt>work</tt><br/><p>For use in work areas. You mostly trust the other computers
on networks to not harm your computer. Only selected incoming connections are
accepted.</p></li><li><tt>home</tt><br/><p>For use in home areas. You mostly trust the other computers
on networks to not harm your computer. Only selected incoming connections are
accepted.</p></li><li><tt>internal</tt><br/><p>For use on internal networks. You mostly trust the
other computers on the networks to not harm your computer. Only selected
incoming connections are accepted.</p></li><li><tt>trusted</tt><br/><p>All network connections are accepted.</p></li></ul>
<br/>
It is possible to designate one of these zones to be the default zone. When
interface connections are added to <tt>NetworkManager</tt>, they are assigned
to the default zone. On installation, the default zone in firewalld is set to
be the public zone.
<br/>
To find out all the settings of a zone, for example the <tt>public zone,</tt>
enter the following command as root:
<pre># firewall-cmd --zone=public --list-all</pre>
Example output of this command might look like the following:
<pre>
# firewall-cmd --zone=public --list-all
public
  interfaces:
  services: mdns dhcpv6-client ssh
  ports:
  forward-ports:
  icmp-blocks: source-quench
</pre>
To view the network zones currently active, enter the following command as root:
<pre># firewall-cmd --get-service</pre>
The following listing displays the result of this command on common Fedora
Server system:
<pre>
# firewall-cmd --get-service
amanda-client amanda-k5-client bacula bacula-client cockpit dhcp dhcpv6
dhcpv6-client dns dropbox-lansync freeipa-ldap freeipa-ldaps
freeipa-replication ftp high-availability http https imaps ipp ipp-client ipsec
iscsi-target kadmin kerberos kpasswd ldap ldaps libvirt libvirt-tls mdns mosh
mountd ms-wbt mysql nfs ntp openvpn pmcd pmproxy pmwebapi pmwebapis pop3s
postgresql privoxy proxy-dhcp ptp puppetmaster radius rpc-bind rsyncd samba
samba-client sane smtp squid ssh synergy telnet tftp tftp-client tinc tor-socks
transmission-client vdsm vnc-server wbem-https xmpp-bosh xmpp-client xmpp-local
xmpp-server
</pre>
Finally to view the network zones that will be active after the next firewalld
service reload, enter the following command as root:
<pre># firewall-cmd --get-service --permanent</pre>
</description>
          <Rule id="service_firewalld_enabled" severity="medium">
            <title>Verify firewalld Enabled</title>
            <description>
              <systemd-service-macro enable="true" service="firewalld"/>
            </description>
            <ocil>
              <systemd-check-macro enable="true" service="firewalld"/>
            </ocil>
            <rationale>
The dynamic firewall daemon <tt>firewalld</tt> provides a dynamically managed
firewall with support for network &#x201C;zones&#x201D;, Ethernet bridges, and has a
separation of runtime and permanent configuration options. It has support for
both IPv4 and IPv6 firewall settings.
</rationale>
            <oval id="service_firewalld_enabled"/>
          </Rule>
        </Group>
        <!--<Group id="firewalld_activation">-->
        <Group id="ruleset_modifications">
          <title>Strengthen the Default Ruleset</title>
          <description>The default rules can be strengthened. The system
scripts that activate the firewall rules expect them to be defined
in configuration files under the <tt>/etc/firewalld/services</tt>
and <tt>/etc/firewalld/zones</tt> directories.
<br/><br/>
The following recommendations describe how to strengthen the
default ruleset configuration file. An alternative to editing this
configuration file is to create a shell script that makes calls to
the <tt>firewall-cmd</tt> program to load in rules under the <tt>/etc/firewalld/services</tt>
and <tt>/etc/firewalld/zones</tt> directories.
<br/><br/>
Instructions apply to both unless otherwise noted. Language and address
conventions for regular firewalld rules are used throughout this section.
</description>
          <warning category="general">The program <tt>firewall-config</tt>
allows additional services to penetrate the default firewall rules
and automatically adjusts the <tt>firewalld</tt> ruleset(s).</warning>
          <Rule id="set_firewalld_default_zone" severity="medium">
            <title>Set Default firewalld Zone for Incoming Packets</title>
            <description>To set the default zone to <tt>drop</tt> for
the built-in default zone which processes incoming IPv4 and IPv6 packets,
modify the following line in
<tt>/etc/firewalld/firewalld.conf</tt> to be:
<pre>DefaultZone=drop</pre>
</description>
            <ocil clause="the default zone is not set to DROP">
Inspect the file <tt>/etc/firewalld/firewalld.conf</tt> to determine
the default zone for the <tt>firewalld</tt>. It should be set to <tt>DefaultZone=drop</tt>:
<pre>$ sudo grep DefaultZone /etc/firewalld/firewalld.conf</pre>
</ocil>
            <rationale>In <tt>firewalld</tt> the default zone is applied only after all
the applicable rules in the table are examined for a match. Setting the
default zone to <tt>drop</tt> implements proper design for a firewall, i.e.
any packets which are not explicitly permitted should not be
accepted.</rationale>
            <oval id="set_firewalld_default_zone"/>
            <ref nist="CM-7" disa="66,1109,1154,1414"/>
          </Rule>
          <!--
<Rule id="set_firewalld_default_rule_forward" severity="medium">
<title>Set Default firewalld Policy for Forwarded Packets</title>
<description>To set the default policy to DROP (instead of ACCEPT) for
the built-in FORWARD chain which processes packets that will be forwarded from
one interface to another,
add or correct the following line in
<tt>/etc/sysconfig/iptables</tt>:
<pre>:FORWARD DROP [0:0]</pre>
</description>
<rationale>In <tt>firewalld</tt>, the default policy is applied only after all
the applicable rules in the table are examined for a match. Setting the
default policy to <tt>DROP</tt> implements proper design for a firewall, i.e.
any packets which are not explicitly permitted should not be
accepted.</rationale>
<ocil clause="the default policy for the FORWARD chain is not set to DROP">
Run the following command to ensure the default <tt>FORWARD</tt> policy is <tt>DROP</tt>:
<pre>grep ":FORWARD" /etc/sysconfig/iptables</pre>
The output should be similar to the following:
<pre>$ sudo grep ":FORWARD" /etc/sysconfig/iptables
:FORWARD DROP [0:0</pre></ocil>
<ref nist="CM-7" disa="1109" />
</Rule>

<Group id="firewalld_icmp_disabled">
<title>Restrict ICMP Message Types</title>
<description>In <tt>/etc/sysconfig/iptables</tt>, the accepted ICMP messages
types can be restricted. To accept only ICMP echo reply, destination
unreachable, and time exceeded messages, remove the line:<br />
<pre>-A INPUT -p icmp -icmp-type any -j ACCEPT</pre>
and insert the lines:
<pre>-A INPUT -p icmp -icmp-type echo-reply -j ACCEPT
-A INPUT -p icmp -icmp-type destination-unreachable -j ACCEPT
-A INPUT -p icmp -icmp-type time-exceeded -j ACCEPT</pre>
To allow the system to respond to pings, also insert the following line:
<pre>-A INPUT -p icmp -icmp-type echo-request -j ACCEPT</pre>
Ping responses can also be limited to certain networks or hosts by using the -s
option in the previous rule.  Because IPv6 depends so heavily on ICMPv6, it is
preferable to deny the ICMPv6 packets you know you don't need (e.g. ping
requests) in <tt>/etc/sysconfig/ip6tables</tt>, while letting everything else
through:
<pre>-A INPUT -p icmpv6 -icmpv6-type echo-request -j DROP</pre>
If you are going to statically configure the machine's address, it should
ignore Router Advertisements which could add another IPv6 address to the
interface or alter important network settings:
<pre>-A INPUT -p icmpv6 -icmpv6-type router-advertisement -j DROP</pre>
Restricting ICMPv6 message types in <tt>/etc/sysconfig/ip6tables</tt> is not
recommended because the operation of IPv6 depends heavily on ICMPv6. Thus, great
care must be taken if any other ICMPv6 types are blocked.
</description>
<rationale>Restricting ICMP messages may make a system slightly less
discoverable to an unsophisticated attacker but is not appropriate for many
general-purpose use cases and can also make troubleshooting more difficult.
</rationale>
</Group>

<Group id="firewalld_log_and_drop_suspicious">
<title>Log and Drop Packets with Suspicious Source Addresses</title>
<description>Packets with non-routable source addresses should be rejected, as they may indicate spoofing. Because the
modified policy will reject non-matching packets, you only need to add these rules if you are interested in also
logging these spoofing or suspicious attempts before they are dropped. If you do choose to log various suspicious
traffic, add identical rules with a target of <tt>DROP</tt> after each <i>LOG</i>.
To log and then drop these IPv4 packets, insert the following rules in <tt>/etc/sysconfig/iptables</tt> (excepting
any that are intentionally used):
<pre>-A INPUT -s 10.0.0.0/8 -j LOG -log-prefix "IP DROP SPOOF A: "
-A INPUT -s 172.16.0.0/12 -j LOG -log-prefix "IP DROP SPOOF B: "
-A INPUT -s 192.168.0.0/16 -j LOG -log-prefix "IP DROP SPOOF C: "
-A INPUT -s 224.0.0.0/4 -j LOG -log-prefix "IP DROP MULTICAST D: "
-A INPUT -s 240.0.0.0/5 -j LOG -log-prefix "IP DROP SPOOF E: "
-A INPUT -d 127.0.0.0/8 -j LOG -log-prefix "IP DROP LOOPBACK: "</pre>
Similarly, you might wish to log packets containing some IPv6 reserved addresses if they are not expected
on your network:
<pre>-A INPUT -i eth0 -s ::1 -j LOG -log-prefix "IPv6 DROP LOOPBACK: "
-A INPUT -s 2002:E000::/20 -j LOG -log-prefix "IPv6 6to4 TRAFFIC: "
-A INPUT -s 2002:7F00::/24 -j LOG -log-prefix "IPv6 6to4 TRAFFIC: "
-A INPUT -s 2002:0000::/24 -j LOG -log-prefix "IPv6 6to4 TRAFFIC: "
-A INPUT -s 2002:FF00::/24 -j LOG -log-prefix "IPv6 6to4 TRAFFIC: "
-A INPUT -s 2002:0A00::/24 -j LOG -log-prefix "IPv6 6to4 TRAFFIC: "
-A INPUT -s 2002:AC10::/28 -j LOG -log-prefix "IPv6 6to4 TRAFFIC: "
-A INPUT -s 2002:C0A8::/32 -j LOG -log-prefix "IPv6 6to4 TRAFFIC: "</pre>
If you are not expecting to see site-local multicast or auto-tunneled traffic, you can log those:
<pre>-A INPUT -s FF05::/16 -j LOG -log-prefix "IPv6 SITE-LOCAL MULTICAST: "
-A INPUT -s ::0.0.0.0/96 -j LOG -log-prefix "IPv4 COMPATIBLE IPv6 ADDR: "</pre>
If you wish to block multicasts to all link-local nodes (e.g. if you are not using router auto-configuration and
do not plan to have any services that multicast to the entire local network), you can block the link-local
all-nodes multicast address (before accepting incoming ICMPv6):
<pre>-A INPUT -d FF02::1 -j LOG -log-prefix "Link-local All-Nodes Multicast: "</pre>
However, if you're going to allow IPv4 compatible IPv6 addresses (of the form ::0.0.0.0/96), you should
then consider logging the non-routable IPv4-compatible addresses:
<pre>-A INPUT -s ::0.0.0.0/104 -j LOG -log-prefix "IP NON-ROUTABLE ADDR: "
-A INPUT -s ::127.0.0.0/104 -j LOG -log-prefix "IP DROP LOOPBACK: "
-A INPUT -s ::224.0.0.0.0/100 -j LOG -log-prefix "IP DROP MULTICAST D: "
-A INPUT -s ::255.0.0.0/104 -j LOG -log-prefix "IP BROADCAST: "</pre>
If you are not expecting to see any IPv4 (or IPv4-compatible) traffic on your network, consider logging it before it gets dropped:
<pre>-A INPUT -s ::FFFF:0.0.0.0/96 -j LOG -log-prefix "IPv4 MAPPED IPv6 ADDR: "
-A INPUT -s 2002::/16 -j LOG -log-prefix "IPv6 6to4 ADDR: "</pre>
The following rule will log all traffic originating from a site-local address, which is deprecated address space:
<pre>-A INPUT -s FEC0::/10 -j LOG -log-prefix "SITE-LOCAL ADDRESS TRAFFIC: "</pre>
</description>
</Group> -->
        </Group>
        <!--Group id="ruleset_modifications"-->
      </Group>
      <Group id="network_ssl">
        <title>Transport Layer Security Support</title>
        <description>
Support for Transport Layer Security (TLS), and its predecessor, the Secure
Sockets Layer (SSL), is included in Fedora in the OpenSSL software (RPM package
<tt>openssl</tt>).  TLS provides encrypted and authenticated network
communications, and many network services include support for it.  TLS or SSL
can be leveraged to avoid any plaintext transmission of sensitive data.
<br/>
For information on how to use OpenSSL, see
<b><weblink-macro link="http://www.openssl.org/docs/HOWTO/"/></b>.
</description>
      </Group>
      <Group id="network-uncommon">
        <title>Uncommon Network Protocols</title>
        <description>The system includes support for several network
protocols which are not commonly used. Although security vulnerabilities 
in kernel networking code are not frequently
discovered, the consequences can be dramatic. Ensuring uncommon
network protocols are disabled reduces the system's risk to attacks
targeted at its implementation of those protocols.</description>
        <warning>
Although these protocols are not commonly used, avoid disruption
in your network environment by ensuring they are not needed
prior to disabling them.
</warning>
        <Rule id="kernel_module_dccp_disabled" severity="medium">
          <title>Disable DCCP Support</title>
          <description>
The Datagram Congestion Control Protocol (DCCP) is a
relatively new transport layer protocol, designed to support
streaming media and telephony.
<module-disable-macro module="dccp"/>
</description>
          <ocil>
            <module-disable-check-macro module="dccp"/>
          </ocil>
          <rationale>
Disabling DCCP protects
the system against exploitation of any flaws in its implementation.
</rationale>
          <ident cce="26828-4"/>
          <oval id="kernel_module_dccp_disabled"/>
          <!--ref nist="CM-7" disa=""/-->
        </Rule>
        <!--Rule id="kernel_module_sctp_disabled" severity="medium">
<title>Disable SCTP Support</title>
<description>
The Stream Control Transmission Protocol (SCTP) is a
transport layer protocol, designed to support the idea of
message-oriented communication, with several streams of messages
within one connection.
<module-disable-macro module="sctp" />
</description>
<ocil>
<module-disable-check-macro module="sctp" />
</ocil>
<rationale>
Disabling SCTP protects
the system against exploitation of any flaws in its implementation.
</rationale>
<ident cce="27106-4" />
<oval id="kernel_module_sctp_disabled" />
<ref nist="CM-7" disa=""/>
</Rule>

<Rule id="kernel_module_rds_disabled">
<title>Disable RDS Support</title>
<description>
The Reliable Datagram Sockets (RDS) protocol is a transport
layer protocol designed to provide reliable high- bandwidth,
low-latency communications between nodes in a cluster.
<module-disable-macro module="rds" />
</description>
<ocil>
<module-disable-check-macro module="rds" />
</ocil>
<rationale>
Disabling RDS protects
the system against exploitation of any flaws in its implementation.
</rationale>
<ident cce="RHEL7-CCE-TBD" />
<oval id="kernel_module_rds_disabled" />
<ref nist="CM-7" disa="382"/>
</Rule>

<Rule id="kernel_module_tipc_disabled" severity="medium">
<title>Disable TIPC Support</title>
<description>
The Transparent Inter-Process Communication (TIPC) protocol
is designed to provide communications between nodes in a
cluster.
<module-disable-macro module="tipc" />
</description>
<ocil>
<module-disable-check-macro module="tipc" />
</ocil>
<rationale>
Disabling TIPC protects
the system against exploitation of any flaws in its implementation.
</rationale>
<ident cce="RHEL7-CCE-TBD" />
<oval id="kernel_module_tipc_disabled" />
<ref nist="CM-7" disa="382"/>
</Rule-->
      </Group>
      <Group id="network-ipsec">
        <title>IPSec Support</title>
        <description>Support for Internet Protocol Security (IPsec)
is provided in Fedora with Libreswan.
</description>
        <Rule id="package_libreswan_installed" severity="medium">
          <title>Install libreswan Package</title>
          <description>The Libreswan package provides an implementation of IPsec
and IKE, which permits the creation of secure tunnels over
untrusted networks. <dnf-macro install="true" package="libreswan"/> 
</description>
          <ocil clause="the package is not installed">
            <package-check-macro package="libreswan"/>
          </ocil>
          <rationale>Providing the ability for remote users or systems
to initiate a secure VPN connection protects information when it is
transmitted over a wide area network.
</rationale>
          <oval id="package_libreswan_installed"/>
          <ref nist="AC-17, MA-4, SC-9" disa="1130,1131" pcidss="Req-4.1"/>
        </Rule>
        <Rule id="libreswan_approved_tunnels" severity="medium">
          <title>Verify Any Configured IPSec Tunnel Connections</title>
          <description>Libreswan provides an implementation of IPsec
and IKE, which permits the creation of secure tunnels over
untrusted networks. As such, IPsec can be used to circumvent certain
network requirements such as filtering. Verify that if any IPsec connection
(<tt>conn</tt>) configured in <tt>/etc/ipsec.conf</tt> and <tt>/etc/ipsec.d</tt>
exists is an approved organizational connection.
</description>
          <ocil clause="the IPSec tunnels are not approved">
To check for configured IPsec connections (<tt>conn</tt>), perform the following:
<pre>grep -rni conn /etc/ipsec.conf /etc/ipsec.d/</pre>
Verify any returned results for organizational approval.
</ocil>
          <rationale>
IP tunneling mechanisms can be used to bypass network filtering.
</rationale>
          <!--oval id="libreswan_approved_tunnels" /-->
          <ref nist="AC-4" disa="336" ossrg="SRG-OS-000480-GPOS-00227" stigid="040830"/>
        </Rule>
      </Group>
    </Group>
    <Group id="logging">
      <title>Configure Syslog</title>
      <description>The syslog service has been the default Unix logging mechanism for
many years. It has a number of downsides, including inconsistent log format,
lack of authentication for received messages, and lack of authentication,
encryption, or reliable transport for messages sent over a network. However,
due to its long history, syslog is a de facto standard which is supported by
almost all Unix applications.
<br/>
<br/>
In Fedora, rsyslog has replaced ksyslogd as the
syslog daemon of choice, and it includes some additional security features
such as reliable, connection-oriented (i.e. TCP) transmission of logs, the
option to log to database formats, and the encryption of log data en route to
a central logging server.
This section discusses how to configure rsyslog for
best effect, and how to use tools provided with the system to maintain and
monitor logs.</description>
      <Rule id="package_rsyslog_installed" severity="medium">
        <title>Ensure rsyslog is Installed</title>
        <description>
Rsyslog is installed by default. 
<dnf-macro install="true" package="rsyslog"/>
</description>
        <ocil clause="the package is not installed">
          <package-check-macro package="rsyslog"/>
        </ocil>
        <rationale>
The rsyslog package provides the rsyslog daemon, which provides
system logging services.
</rationale>
        <!-- <oval id="package_rsyslog_installed" /> -->
        <ref nist="AU-9(2)" disa="1311,1312"/>
      </Rule>
      <Rule id="service_rsyslog_enabled" severity="medium">
        <title>Enable rsyslog Service</title>
        <description>The <tt>rsyslog</tt> service provides syslog-style logging by default on Fedora.
<systemd-service-macro enable="true" service="rsyslog"/>
</description>
        <ocil>
          <systemd-check-macro enable="true" service="rsyslog"/>
        </ocil>
        <rationale>The <tt>rsyslog</tt> service must be running in order to provide
logging services, which are essential to system administration.
</rationale>
        <!-- <oval id="service_rsyslog_enabled" /> -->
        <ref nist="AU-12" disa="1557,1312,1311"/>
      </Rule>
      <Group id="ensure_rsyslog_log_file_configuration">
        <title>Ensure Proper Configuration of Log Files</title>
        <description>
The file <tt>/etc/rsyslog.conf</tt> controls where log message are written.
These are controlled by lines called <i>rules</i>, which consist of a
<i>selector</i> and an <i>action</i>.
These rules are often customized depending on the role of the system, the
requirements of the environment, and whatever may enable
the administrator to most effectively make use of log data.
The default rules in Fedora are:
<pre>*.info;mail.none;authpriv.none;cron.none                /var/log/messages
authpriv.*                                              /var/log/secure
mail.*                                                  -/var/log/maillog
cron.*                                                  /var/log/cron
*.emerg                                                 *
uucp,news.crit                                          /var/log/spooler
local7.*                                                /var/log/boot.log</pre>
See the man page <tt>rsyslog.conf(5)</tt> for more information.
<i>Note that the <tt>rsyslog</tt> daemon can be configured to use a timestamp format that
some log processing programs may not understand. If this occurs, 
edit the file <tt>/etc/rsyslog.conf</tt> and add or edit the following line:</i>
<pre>$ ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat</pre>
</description>
        <!-- These values are not currently used. -->
        <Value id="file_owner_logfiles_value" type="string" operator="equals" interactive="0">
          <title>User who owns log files</title>
          <description>Specify user owner of all logfiles specified in
<tt>/etc/rsyslog.conf</tt>.</description>
          <value selector="root">root</value>
        </Value>
        <Value id="file_groupowner_logfiles_value" type="string" operator="equals" interactive="0">
          <title>group who owns log files</title>
          <description>Specify group owner of all logfiles specified in
<tt>/etc/rsyslog.conf.</tt></description>
          <value selector="root">root</value>
        </Value>
        <Rule id="rsyslog_files_ownership" severity="medium">
          <title>Ensure Log Files Are Owned By Appropriate User</title>
          <description>The owner of all log files written by
<tt>rsyslog</tt> should be root.
These log files are determined by the second part of each Rule line in
<tt>/etc/rsyslog.conf</tt> and typically all appear in <tt>/var/log</tt>.
For each log file <i>LOGFILE</i> referenced in <tt>/etc/rsyslog.conf</tt>,
run the following command to inspect the file's owner:
<pre>$ ls -l <i>LOGFILE</i></pre>
If the owner is not <tt>root</tt>, run the following command to
correct this:
<pre>$ sudo chown root <i>LOGFILE</i></pre>
</description>
          <ocil clause="the owner is not root">
The owner of all log files written by <tt>rsyslog</tt> should be root.
These log files are determined by the second part of each Rule line in
<tt>/etc/rsyslog.conf</tt> and typically all appear in <tt>/var/log</tt>.
To see the owner of a given log file, run the following command:
<pre>$ ls -l <i>LOGFILE</i></pre>
</ocil>
          <rationale>The log files generated by rsyslog contain valuable information regarding system
configuration, user authentication, and other such information. Log files should be
protected from unauthorized access.</rationale>
          <oval id="rsyslog_files_ownership"/>
          <ref nist="AC-6,SI-11" disa="1314"/>
        </Rule>
        <Rule id="rsyslog_files_groupownership" severity="medium">
          <title>Ensure Log Files Are Owned By Appropriate Group</title>
          <description>The group-owner of all log files written by
<tt>rsyslog</tt> should be root.
These log files are determined by the second part of each Rule line in
<tt>/etc/rsyslog.conf</tt> and typically all appear in <tt>/var/log</tt>.
For each log file <i>LOGFILE</i> referenced in <tt>/etc/rsyslog.conf</tt>,
run the following command to inspect the file's group owner:
<pre>$ ls -l <i>LOGFILE</i></pre>
If the owner is not <tt>root</tt>, run the following command to
correct this:
<pre>$ sudo chgrp root <i>LOGFILE</i></pre>
</description>
          <ocil clause="the group-owner is not root">
The group-owner of all log files written by <tt>rsyslog</tt> should be root.
These log files are determined by the second part of each Rule line in
<tt>/etc/rsyslog.conf</tt> and typically all appear in <tt>/var/log</tt>.
To see the group-owner of a given log file, run the following command:
<pre>$ ls -l <i>LOGFILE</i></pre>
</ocil>
          <rationale>The log files generated by rsyslog contain valuable information regarding system
configuration, user authentication, and other such information. Log files should be
protected from unauthorized access.</rationale>
          <oval id="rsyslog_files_groupownership"/>
          <ref nist="AC-6,SI-11" disa="1314"/>
        </Rule>
        <Rule id="rsyslog_files_permissions" severity="medium">
          <title>Ensure System Log Files Have Correct Permissions</title>
          <description>The file permissions for all log files written by
<tt>rsyslog</tt> should be set to 600, or more restrictive.
These log files are determined by the second part of each Rule line in
<tt>/etc/rsyslog.conf</tt> and typically all appear in <tt>/var/log</tt>. 
For each log file <i>LOGFILE</i> referenced in <tt>/etc/rsyslog.conf</tt>,
run the following command to inspect the file's permissions:
<pre>$ ls -l <i>LOGFILE</i></pre>
If the permissions are not 600 or more restrictive,
run the following command to correct this:
<pre>$ sudo chmod 0600 <i>LOGFILE</i></pre>
</description>
          <ocil clause="the permissions are not correct">
The file permissions for all log files written by <tt>rsyslog</tt> 
should be set to 600, or more restrictive.
These log files are determined by the second part of each Rule line in
<tt>/etc/rsyslog.conf</tt> and typically all appear in <tt>/var/log</tt>.
To see the permissions of a given log file, run the following command:
<pre>$ ls -l <i>LOGFILE</i></pre>
The permissions should be 600, or more restrictive.
</ocil>
          <rationale>Log files can contain valuable information regarding system
configuration. If the system log files are not protected unauthorized
users could change the logged data, eliminating their forensic value.
</rationale>
          <oval id="rsyslog_files_permissions"/>
          <ref nist="SI-11" disa="1314"/>
        </Rule>
      </Group>
      <Group id="rsyslog_sending_messages">
        <title>Rsyslog Logs Sent To Remote Host</title>
        <description>
If system logs are to be useful in detecting malicious
activities, it is necessary to send logs to a remote server. An
intruder who has compromised the root account on a machine may
delete the log entries which indicate that the system was attacked
before they are seen by an administrator.
<br/><br/>
However, it is recommended that logs be stored on the local
host in addition to being sent to the loghost, especially if
<tt>rsyslog</tt> has been configured to use the UDP protocol to send
messages over a network. UDP does not guarantee reliable delivery,
and moderately busy sites will lose log messages occasionally,
especially in periods of high traffic which may be the result of an
attack. In addition, remote <tt>rsyslog</tt> messages are not
authenticated in any way by default, so it is easy for an attacker to
introduce spurious messages to the central log server. Also, some
problems cause loss of network connectivity, which will prevent the
sending of messages to the central server. For all of these reasons, it is
better to store log messages both centrally and on each host, so
that they can be correlated if necessary.</description>
        <Rule id="rsyslog_send_messages_to_logserver">
          <title>Ensure Logs Sent To Remote Host</title>
          <description>
To configure rsyslog to send logs to a remote log server,
open <tt>/etc/rsyslog.conf</tt> and read and understand the last section of the file,
which describes the multiple directives necessary to activate remote
logging.
Along with these other directives, the system can be configured
to forward its logs to a particular log server by
adding or correcting one of the following lines,
substituting <tt><i>loghost.example.com</i></tt> appropriately.
The choice of protocol depends on the environment of the system; 
although TCP and RELP provide more reliable message delivery, 
they may not be supported in all environments.
<br/>
To use UDP for log message delivery:
<pre>*.* @<i>loghost.example.com</i></pre>
<br/>
To use TCP for log message delivery:
<pre>*.* @@<i>loghost.example.com</i></pre>
<br/>
To use RELP for log message delivery:
<pre>*.* :omrelp:<i>loghost.example.com</i></pre>
</description>
          <ocil clause="none of these are present">
To ensure logs are sent to a remote host, examine the file
<tt>/etc/rsyslog.conf</tt>.
If using UDP, a line similar to the following should be present:
<pre> *.* @<i>loghost.example.com</i></pre>
If using TCP, a line similar to the following should be present:
<pre> *.* @@<i>loghost.example.com</i></pre>
If using RELP, a line similar to the following should be present:
<pre> *.* :omrelp:<i>loghost.example.com</i></pre>
</ocil>
          <rationale>A log server (loghost) receives syslog messages from one or more
systems. This data can be used as an additional log source in the event a
system is compromised and its local logs are suspect. Forwarding log messages
to a remote loghost also provides system administrators with a centralized
place to view the status of multiple hosts within the enterprise.
</rationale>
          <!-- <oval id="rsyslog_remote_loghost" /> -->
          <ref nist="AU-3(2),AU-9" disa="1348, 136"/>
        </Rule>
      </Group>
      <Group id="rsyslog_accepting_remote_messages">
        <title>Configure <tt>rsyslogd</tt> to Accept Remote Messages If Acting as a Log Server</title>
        <description>
By default, <tt>rsyslog</tt> does not listen over the network
for log messages. If needed, modules can be enabled to allow
the rsyslog daemon to receive messages from other systems and for the system
thus to act as a log server.
If the machine is not a log server, then lines concerning these modules
should remain commented out.
<br/><br/>
</description>
        <Rule id="rsyslog_accept_remote_messages_none">
          <title>Ensure rsyslog Does Not Accept Remote Messages Unless Acting As Log Server</title>
          <description>The <tt>rsyslog</tt> daemon should not accept remote messages
unless the system acts as a log server.
To ensure that it is not listening on the network, ensure the following lines are
<i>not</i> found in <tt>/etc/rsyslog.conf</tt>:
<pre>$ModLoad imtcp
$InputTCPServerRun <i>port</i>
$ModLoad imudp
$UDPServerRun <i>port</i>
$ModLoad imrelp
$InputRELPServerRun <i>port</i></pre>
</description>
          <rationale>
Any process which receives messages from the network incurs some risk
of receiving malicious messages. This risk can be eliminated for
rsyslog by configuring it not to listen on the network.
</rationale>
          <!-- <oval id="rsyslog_nolisten" /> -->
          <ref nist="AU-9(2),AC-4"/>
        </Rule>
        <Rule id="rsyslog_accept_remote_messages_tcp">
          <title>Enable rsyslog to Accept Messages via TCP, if Acting As Log Server</title>
          <description>The <tt>rsyslog</tt> daemon should not accept remote messages
unless the system acts as a log server.
If the system needs to act as a central log server, add the following lines to
<tt>/etc/rsyslog.conf</tt> to enable reception of messages over TCP:
<pre>$ModLoad imtcp
$InputTCPServerRun 514</pre>
</description>
          <rationale>
If the system needs to act as a log server, this ensures that it can receive
messages over a reliable TCP connection.
</rationale>
          <!--<oval id="rsyslog_listen_tcp" />-->
          <ref nist="AU-9"/>
        </Rule>
        <Rule id="rsyslog_accept_remote_messages_udp">
          <title>Enable rsyslog to Accept Messages via UDP, if Acting As Log Server</title>
          <description>The <tt>rsyslog</tt> daemon should not accept remote messages
unless the system acts as a log server.
If the system needs to act as a central log server, add the following lines to
<tt>/etc/rsyslog.conf</tt> to enable reception of messages over UDP:
<pre>$ModLoad imudp
$UDPServerRun 514</pre>
</description>
          <rationale>
Many devices, such as switches, routers, and other Unix-like systems, may only support
the traditional syslog transmission over UDP. If the system must act as a log server,
this enables it to receive their messages as well.
</rationale>
          <ref nist="AU-9"/>
        </Rule>
      </Group>
      <Group id="log_rotation">
        <title>Ensure All Logs are Rotated by <tt>logrotate</tt></title>
        <description>Edit the file <tt>/etc/logrotate.d/syslog</tt>. Find the first
line, which should look like this (wrapped for clarity):
<pre>/var/log/messages /var/log/secure /var/log/maillog /var/log/spooler \
  /var/log/boot.log /var/log/cron {</pre>
Edit this line so that it contains a one-space-separated
listing of each log file referenced in <tt>/etc/rsyslog.conf</tt>.
<br/><br/>
All logs in use on a system must be rotated regularly, or the
log files will consume disk space over time, eventually interfering
with system operation. The file <tt>/etc/logrotate.d/syslog</tt> is the
configuration file used by the <tt>logrotate</tt> program to maintain all
log files written by <tt>syslog</tt>. By default, it rotates logs weekly and
stores four archival copies of each log. These settings can be
modified by editing <tt>/etc/logrotate.conf</tt>, but the defaults are
sufficient for purposes of this guide.
<br/><br/>
Note that <tt>logrotate</tt> is run nightly by the cron job
<tt>/etc/cron.daily/logrotate</tt>. If particularly active logs need to be
rotated more often than once a day, some other mechanism must be
used.</description>
        <Rule id="ensure_logrotate_activated">
          <title>Ensure Logrotate Runs Periodically</title>
          <description>The <tt>logrotate</tt> utility allows for the automatic rotation of 
log files.  The frequency of rotation is specified in <tt>/etc/logrotate.conf</tt>, 
which triggers a cron task.  To configure logrotate to run daily, add or correct 
the following line in <tt>/etc/logrotate.conf</tt>:
<pre># rotate log files <i>frequency</i>
daily</pre>
</description>
          <rationale>Log files that are not properly rotated run the risk of growing so large
that they fill up the /var/log partition. Valuable logging information could be lost
if the /var/log partition becomes full.</rationale>
          <ocil clause="logrotate is not configured to run daily">
To determine the status and frequency of logrotate, run the following command:
<pre>$ sudo grep logrotate /var/log/cron*</pre>
If logrotate is configured properly, output should include references to 
<tt>/etc/cron.daily</tt>.
</ocil>
          <!-- <oval id="ensure_logrotate_activated" /> -->
          <ref nist="AU-9" disa="366"/>
        </Rule>
      </Group>
      <Group id="configure_logwatch_on_logserver">
        <title> Configure Logwatch on the Central Log Server</title>
        <description> 
Is this machine the central log server? If so, edit the file <tt>/etc/logwatch/conf/logwatch.conf</tt> as shown below.
</description>
        <Rule id="configure_logwatch_hostlimit">
          <title>Configure Logwatch HostLimit Line</title>
          <description> On a central logserver, you want Logwatch to summarize all syslog entries, including those which did not originate 
on the logserver itself. The <tt>HostLimit</tt> setting tells Logwatch to report on all hosts, not just the one on which it 
is running. 
<pre> HostLimit = no </pre> </description>
          <!-- <oval id="logwatch_configured_hostlimit" /> -->
        </Rule>
        <Rule id="configure_logwatch_splithosts">
          <title>Configure Logwatch SplitHosts Line</title>
          <description>
If <tt>SplitHosts</tt> is set, Logwatch will separate entries by hostname. This makes the report longer but significantly 
more usable. If it is not set, then Logwatch will not report which host generated a given log entry, and that 
information is almost always necessary
<pre> SplitHosts = yes </pre> </description>
          <!-- <oval id="logwatch_configured_splithosts" /> -->
        </Rule>
        <!-- Ensure that <tt>logwatch.pl</tt> is run nightly from <tt>cron</tt>. (This is the default): 
<pre># cd /etc/cron.daily 
# ln -s /usr/share/logwatch/scripts/logwatch.pl 0logwatch 
</pre>
free disk space. Since all log monitoring is being done on the central logserver, the disk space listing will always be 
that of the logserver, regardless of which host is being monitored. This is confusing, so disable that service. Note 
that this does mean that <tt>Logwatch</tt> will not monitor disk usage information. Many workarounds are possible, 
such as running <tt>df</tt> on each host daily via <tt>cron</tt> and sending the output to <tt>syslog</tt> so that it will be reported to 
the logserver.</description> -->
      </Group>
      <!-- <Group id="configure_logwatch_on_logserver"> -->
      <Rule id="disable_logwatch_for_logserver">
        <title> Disable Logwatch on Clients if a Logserver Exists</title>
        <description> 
Does your site have a central logserver which has been configured to report on logs received from all systems? 
If so:
<pre> 
$ sudo rm /etc/cron.daily/0logwatch 
</pre>
If no logserver exists, it will be necessary for each machine to run Logwatch individually. Using a central 
logserver provides the security and reliability benefits discussed earlier, and also makes monitoring logs easier 
and less time-intensive for administrators.</description>
      </Rule>
    </Group>
    <Group id="auditing">
      <title>System Accounting with <tt>auditd</tt></title>
      <description>The audit service provides substantial capabilities
for recording system activities. By default, the service audits about
SELinux AVC denials and certain types of security-relevant events
such as system logins, account modifications, and authentication
events performed by programs such as sudo.
Under its default configuration, <tt>auditd</tt> has modest disk space
requirements, and should not noticeably impact system performance.
<br/>
NOTE: The Linux Audit daemon <tt>auditd</tt> can be configured to use the
<tt>auditctl</tt> utility to read audit rules from the <tt>/etc/audit/audit.rules</tt>
configuration file, and load them into the kernel during daemon startup
(default configuration). Alternatively, the <tt>auditd</tt> daemon can be
configured to use the <tt>augenrules</tt> program to read audit rules files
(<tt>*.rules</tt>) located in <tt>/etc/audit/rules.d</tt> location and compile
them to create the resulting form of the <tt>/etc/audit/audit.rules</tt> configuration
file during the daemon startup. The expected behavior is configured via the
appropriate <tt>ExecStartPost</tt> directive setting in the <tt>/usr/lib/systemd/system/auditd.service</tt>
configuration file. To instruct the <tt>auditd</tt> daemon to use the <tt>auditctl</tt>
utility to read audit rules (default configuration), use the following setting:
<br/> <pre>ExecStartPost=-/sbin/auditctl -R /etc/audit/audit.rules</pre>
in the <tt>/usr/lib/systemd/system/auditd.service</tt> configuration file. In order
to instruct the <tt>auditd</tt> daemon to use the <tt>augenrules</tt> program
to read audit rules, use the following setting:
<br/> <pre>ExecStartPost=-/sbin/augenrules --load</pre>
in the <tt>/usr/lib/systemd/system/auditd.service</tt> configuration file. Refer to
<tt>[Service]</tt> section of the <tt>/usr/lib/systemd/system/auditd.service</tt>
configuration for further details.
<br/>
Government networks often have substantial auditing
requirements and <tt>auditd</tt> can be configured to meet these
requirements.
Examining some example audit records demonstrates how the Linux audit system
satisfies common requirements.
The following example from Fedora Documentation available at
<tt><weblink-macro link="http://docs.fedoraproject.org/en-US/Fedora/22/html/SELinux_Users_and_Administrators_Guide/sect-Security-Enhanced_Linux-Fixing_Problems-Raw_Audit_Messages.html"/></tt>
shows the substantial amount of information captured in a
two typical "raw" audit messages, followed by a breakdown of the most important
fields. In this example the message is SELinux-related and reports an AVC
denial (and the associated system call) that occurred when the Apache HTTP
Server attempted to access the <tt>/var/www/html/file1</tt> file (labeled with
the <tt>samba_share_t</tt> type):
<pre>type=AVC msg=audit(1226874073.147:96): avc:  denied  { getattr } for pid=2465 comm="httpd"
path="/var/www/html/file1" dev=dm-0 ino=284133 scontext=unconfined_u:system_r:httpd_t:s0
tcontext=unconfined_u:object_r:samba_share_t:s0 tclass=file

type=SYSCALL msg=audit(1226874073.147:96): arch=40000003 syscall=196 success=no exit=-13
a0=b98df198 a1=bfec85dc a2=54dff4 a3=2008171 items=0 ppid=2463 pid=2465 auid=502 uid=48
gid=48 euid=48 suid=48 fsuid=48 egid=48 sgid=48 fsgid=48 tty=(none) ses=6 comm="httpd"
exe="/usr/sbin/httpd" subj=unconfined_u:system_r:httpd_t:s0 key=(null)
</pre>
<ul><li><tt>msg=audit(1226874073.147:96)</tt><ul><li>The number in parentheses is the unformatted time stamp (Epoch time)
for the event, which can be converted to standard time by using the
<tt>date</tt> command.
</li></ul></li><li><tt>{ getattr }</tt><ul><li>The item in braces indicates the permission that was denied. <tt>getattr</tt>
indicates the source process was trying to read the target file's status information.
This occurs before reading files. This action is denied due to the file being
accessed having the wrong label. Commonly seen permissions include <tt>getattr</tt>,
<tt>read</tt>, and <tt>write</tt>.</li></ul></li><li><tt>comm="httpd"</tt><ul><li>The executable that launched the process. The full path of the executable is
found in the <tt>exe=</tt> section of the system call (<tt>SYSCALL</tt>) message,
which in this case, is <tt>exe="/usr/sbin/httpd"</tt>.
</li></ul></li><li><tt>path="/var/www/html/file1"</tt><ul><li>The path to the object (target) the process attempted to access.
</li></ul></li><li><tt>scontext="unconfined_u:system_r:httpd_t:s0"</tt><ul><li>The SELinux context of the process that attempted the denied action. In
this case, it is the SELinux context of the Apache HTTP Server, which is running
in the <tt>httpd_t</tt> domain.
</li></ul></li><li><tt>tcontext="unconfined_u:object_r:samba_share_t:s0"</tt><ul><li>The SELinux context of the object (target) the process attempted to access.
In this case, it is the SELinux context of <tt>file1</tt>. Note: the <tt>samba_share_t</tt>
type is not accessible to processes running in the <tt>httpd_t</tt> domain.</li></ul></li><li> From the system call (<tt>SYSCALL</tt>) message, two items are of interest:
<ul><li><tt>success=no</tt>: indicates whether the denial (AVC) was enforced or not.
<tt>success=no</tt> indicates the system call was not successful (SELinux denied
access). <tt>success=yes</tt> indicates the system call was successful - this can
be seen for permissive domains or unconfined domains, such as <tt>initrc_t</tt>
and <tt>kernel_t</tt>.
</li><li><tt>exe="/usr/sbin/httpd"</tt>: the full path to the executable that launched
the process, which in this case, is <tt>exe="/usr/sbin/httpd"</tt>.
</li></ul>
</li></ul>
</description>
      <Rule id="bootloader_audit_argument" severity="medium">
        <title>Enable Auditing for Processes Which Start Prior to the Audit Daemon</title>
        <description>To ensure all processes can be audited, even those which start
prior to the audit daemon, add the argument <tt>audit=1</tt> to the default
GRUB 2 command line for the Linux operating system in
<tt>/etc/default/grub</tt>, in the manner below:
<pre>GRUB_CMDLINE_LINUX="rd.lvm.lv=fedora/swap rd.lvm.lv=fedora/root rd.luks.uuid=luks-3431fd4f-80aa-436e-8acf-24f5bcb4e23a rhgb quiet audit=1"</pre>
</description>
        <ocil clause="auditing is not enabled at boot time">
Inspect the form of default GRUB 2 command line for the Linux operating system
in <tt>/etc/default/grub</tt>. If they include <tt>audit=1</tt>, then auditing
is enabled at boot time.
</ocil>
        <rationale>
Each process on the system carries an "auditable" flag which indicates whether
its activities can be audited. Although <tt>auditd</tt> takes care of enabling
this for all processes which launch after it does, adding the kernel argument
ensures it is set for every process during boot.
</rationale>
        <warning category="general">The GRUB 2 configuration file, <tt>grub.cfg</tt>,
is automatically updated each time a new kernel is installed. Note that any
changes to <tt>/etc/default/grub</tt> require rebuilding the <tt>grub.cfg</tt>
file. To update the GRUB 2 configuration file manually, use the
<pre>grub2-mkconfig -o</pre> command as follows:
<ul><li>On BIOS-based machines, issue the following command as <tt>root</tt>:
<pre>~]# grub2-mkconfig -o /boot/grub2/grub.cfg</pre></li><li>On UEFI-based machines, issue the following command as <tt>root</tt>:
<pre>~]# grub2-mkconfig -o /boot/efi/fedora/grub2/grub.cfg</pre></li></ul>
</warning>
        <oval id="bootloader_audit_argument"/>
        <ref nist="AC-17(1),AU-14(1),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-10,IR-5" disa="1464,130"/>
      </Rule>
      <Group id="configure_auditd_data_retention">
        <title>Configure <tt>auditd</tt> Data Retention</title>
        <description>
The audit system writes data to <tt>/var/log/audit/audit.log</tt>. By default,
<tt>auditd</tt> rotates 5 logs by size (6MB), retaining a maximum of 30MB of
data in total, and refuses to write entries when the disk is too
full. This minimizes the risk of audit data filling its partition
and impacting other services. This also minimizes the risk of the audit
daemon temporarily disabling the system if it cannot write audit log (which
it can be configured to do).

For a busy
system or a system which is thoroughly auditing system activity, the default settings
for data retention may be
 insufficient. The log file size needed will depend heavily on what types
of events are being audited. First configure auditing to log all the events of
interest. Then monitor the log size manually for awhile to determine what file
size will allow you to keep the required data for the correct time period.
<br/><br/>
Using a dedicated partition for <tt>/var/log/audit</tt> prevents the
<tt>auditd</tt> logs from disrupting system functionality if they fill, and,
more importantly, prevents other activity in <tt>/var</tt> from filling the
partition and stopping the audit trail. (The audit logs are size-limited and
therefore unlikely to grow without bound unless configured to do so.) Some
machines may have requirements that no actions occur which cannot be audited.
If this is the case, then <tt>auditd</tt> can be configured to halt the machine
if it runs out of space. <b>Note:</b> Since older logs are rotated,
configuring <tt>auditd</tt> this way does not prevent older logs from being
rotated away before they can be viewed.

<i>If your system is configured to halt when logging cannot be performed, make
sure this can never happen under normal circumstances! Ensure that
<tt>/var/log/audit</tt> is on its own partition, and that this partition is
larger than the maximum amount of data <tt>auditd</tt> will retain
normally.</i>
</description>
        <ref nist="AU-11" disa="138"/>
        <Value id="var_auditd_num_logs" type="number">
          <title>Number of log files for auditd to retain</title>
          <description>The setting for num_logs in /etc/audit/auditd.conf</description>
          <value selector="">5</value>
          <value selector="5">5</value>
          <value selector="4">4</value>
          <value selector="3">3</value>
          <value selector="2">2</value>
          <value selector="1">1</value>
          <value selector="0">0</value>
        </Value>
        <Value id="var_auditd_max_log_file" type="number">
          <title>Maximum audit log file size for auditd</title>
          <description>The setting for max_log_size in /etc/audit/auditd.conf</description>
          <value selector="">6</value>
          <value selector="20">20</value>
          <value selector="10">10</value>
          <value selector="6">6</value>
          <value selector="5">5</value>
          <value selector="1">1</value>
        </Value>
        <Value id="var_auditd_max_log_file_action" type="string">
          <title>Action for auditd to take when log files reach their maximum size</title>
          <description>The setting for max_log_file_action in /etc/audit/auditd.conf</description>
          <value selector="">rotate</value>
          <value selector="ignore">ignore</value>
          <value selector="syslog">syslog</value>
          <value selector="suspend">suspend</value>
          <value selector="rotate">rotate</value>
          <value selector="keep_logs">keep_logs</value>
        </Value>
        <Value id="var_auditd_space_left_action" type="string">
          <title>Action for auditd to take when disk space just starts to run low</title>
          <description>The setting for space_left_action in /etc/audit/auditd.conf</description>
          <value selector="">email</value>
          <value selector="ignore">ignore</value>
          <value selector="syslog">syslog</value>
          <value selector="email">email</value>
          <value selector="exec">exec</value>
          <value selector="suspend">suspend</value>
          <value selector="single">single</value>
          <value selector="halt">halt</value>
        </Value>
        <Value id="var_auditd_admin_space_left_action" type="string">
          <title>Action for auditd to take when disk space just starts to run low</title>
          <description>The setting for space_left_action in /etc/audit/auditd.conf</description>
          <value selector="">single</value>
          <value selector="ignore">ignore</value>
          <value selector="syslog">syslog</value>
          <value selector="email">email</value>
          <value selector="exec">exec</value>
          <value selector="suspend">suspend</value>
          <value selector="single">single</value>
          <value selector="halt">halt</value>
        </Value>
        <Value id="var_auditd_action_mail_acct" type="string">
          <title>Account for auditd to send email when actions occurs</title>
          <description>The setting for action_mail_acct in /etc/audit/auditd.conf</description>
          <value selector="">root</value>
          <value selector="root">root</value>
          <value selector="admin">admin</value>
        </Value>
        <Value id="var_auditd_flush" type="string">
          <title>Auditd priority for flushing data to disk</title>
          <description>The setting for flush in /etc/audit/auditd.conf</description>
          <value selector="">data</value>
          <value selector="none">none</value>
          <value selector="incremental">incremental</value>
          <value selector="data">data</value>
          <value selector="sync">sync</value>
        </Value>
        <Rule id="auditd_data_retention_num_logs" severity="medium">
          <title>Configure auditd Number of Logs Retained</title>
          <description>Determine how many log files
<tt>auditd</tt> should retain when it rotates logs.
Edit the file <tt>/etc/audit/auditd.conf</tt>. Add or modify the following
line, substituting <i>NUMLOGS</i> with the correct value of <sub idref="var_auditd_num_logs"/>:
<pre>num_logs = <i>NUMLOGS</i></pre>
Set the value to 5 for general-purpose systems.
Note that values less than 2 result in no log rotation.</description>
          <ocil clause="the system log file retention has not been properly configured">
Inspect <tt>/etc/audit/auditd.conf</tt> and locate the following line to
determine how many logs the system is configured to retain after rotation:
<tt>$ sudo grep num_logs /etc/audit/auditd.conf</tt>
<pre>num_logs = 5</pre>
</ocil>
          <rationale>The total storage for audit log files must be large enough to retain
log information over the period required. This is a function of the maximum log
file size and the number of logs retained.</rationale>
          <oval id="auditd_data_retention_num_logs" value="var_auditd_num_logs"/>
          <ref nist="AU-1(b),AU-11,IR-5"/>
        </Rule>
        <Rule id="auditd_data_retention_max_log_file" severity="medium">
          <title>Configure auditd Max Log File Size</title>
          <description>Determine the amount of audit data (in megabytes)
which should be retained in each log file. Edit the file
<tt>/etc/audit/auditd.conf</tt>. Add or modify the following line, substituting
the correct value of <sub idref="var_auditd_max_log_file"/> for <i>STOREMB</i>:
<pre>max_log_file = <i>STOREMB</i></pre>
Set the value to <tt>6</tt> (MB) or higher for general-purpose systems.
Larger values, of course,
support retention of even more audit data.</description>
          <ocil clause="the system audit data threshold has not been properly configured">
Inspect <tt>/etc/audit/auditd.conf</tt> and locate the following line to
determine how much data the system will retain in each audit log file:
<tt>$ sudo grep max_log_file /etc/audit/auditd.conf</tt>
<pre>max_log_file = 6</pre>
</ocil>
          <rationale>The total storage for audit log files must be large enough to retain
log information over the period required. This is a function of the maximum
log file size and the number of logs retained.</rationale>
          <oval id="auditd_data_retention_max_log_file" value="var_auditd_max_log_file"/>
          <ref nist="AU-1(b),AU-11,IR-5"/>
        </Rule>
        <Rule id="auditd_data_retention_max_log_file_action" severity="medium">
          <title>Configure auditd max_log_file_action Upon Reaching Maximum Log Size</title>
          <description> The default action to take when the logs reach their maximum size
is to rotate the log files, discarding the oldest one. To configure the action taken
by <tt>auditd</tt>, add or correct the line in <tt>/etc/audit/auditd.conf</tt>:
<pre>max_log_file_action = <i>ACTION</i></pre>
Possible values for <i>ACTION</i> are described in the <tt>auditd.conf</tt> man
page. These include:
<ul><li><tt>ignore</tt></li><li><tt>syslog</tt></li><li><tt>suspend</tt></li><li><tt>rotate</tt></li><li><tt>keep_logs</tt></li></ul>
Set the <tt><i>ACTION</i></tt> to <tt>rotate</tt> to ensure log rotation
occurs.  This is the default.  The setting is case-insensitive.
</description>
          <ocil clause="the system has not been properly configured to rotate audit logs">
Inspect <tt>/etc/audit/auditd.conf</tt> and locate the following line to
determine if the system is configured to rotate logs when they reach their
maximum size:
<tt>$ sudo grep max_log_file_action /etc/audit/auditd.conf</tt>
<pre>max_log_file_action <tt>rotate</tt></pre>
</ocil>
          <rationale>Automatically rotating logs (by setting this to <tt>rotate</tt>)
minimizes the chances of the system unexpectedly running out of disk space by
being overwhelmed with log data. However, for systems that must never discard
log data, or which use external processes to transfer it and reclaim space,
<tt>keep_logs</tt> can be employed.</rationale>
          <oval id="auditd_data_retention_max_log_file_action" value="var_auditd_max_log_file_action"/>
          <ref nist="AU-1(b),AU-4,AU-11,IR-5"/>
        </Rule>
        <!--
<Group id="auditd_logical_volume">
<title>Configure auditd to Use a Separate Partition or Logical Volume</title>
<description>Use a dedicated partition (or logical volume) for log files. It is
straightforward to create such a partition or logical volume during system
installation time. The partition should be larger than the maximum space which
<tt>auditd</tt> will ever use, which is the maximum size of each log file
(<tt>max_log_file</tt>) multiplied by the number of log files
(<tt>num_logs</tt>). Ensure the partition is mounted on
<tt>/var/log/audit</tt>.
</description>
</Group>
-->
        <Rule id="auditd_data_retention_space_left_action" severity="medium">
          <title>Configure auditd space_left Action on Low Disk Space</title>
          <description>The <tt>auditd</tt> service can be configured to take an action
when disk space <i>starts</i> to run low.
Edit the file <tt>/etc/audit/auditd.conf</tt>. Modify the following line,
substituting <i>ACTION</i> appropriately:
<pre>space_left_action = <i>ACTION</i></pre>
Possible values for <i>ACTION</i> are described in the <tt>auditd.conf</tt> man page.
These include:
<ul><li><tt>ignore</tt></li><li><tt>syslog</tt></li><li><tt>email</tt></li><li><tt>exec</tt></li><li><tt>suspend</tt></li><li><tt>single</tt></li><li><tt>halt</tt></li></ul>
Set this to <tt>email</tt> (instead of the default,
which is <tt>suspend</tt>) as it is more likely to get prompt attention. Acceptable values
also include <tt>suspend</tt>, <tt>single</tt>, and <tt>halt</tt>.
</description>
          <ocil clause="the system is not configured to send an email to the system administrator when disk space is starting to run low">
Inspect <tt>/etc/audit/auditd.conf</tt> and locate the following line to
determine if the system is configured to email the administrator when
disk space is starting to run low:
<tt>$ sudo grep space_left_action /etc/audit/auditd.conf</tt>
<pre>space_left_action</pre>
Acceptable values are <tt>email</tt>, <tt>suspend</tt>, <tt>single</tt>, and <tt>halt</tt>.
</ocil>
          <rationale>Notifying administrators of an impending disk space problem may
allow them to take corrective action prior to any disruption.</rationale>
          <oval id="auditd_data_retention_space_left_action" value="var_auditd_space_left_action"/>
          <ref nist="AU-1(b),AU-4,AU-5(b),IR-5" disa="140,143"/>
        </Rule>
        <Rule id="auditd_data_retention_admin_space_left_action" severity="medium">
          <title>Configure auditd admin_space_left Action on Low Disk Space</title>
          <description>The <tt>auditd</tt> service can be configured to take an action
when disk space is running low but prior to running out of space completely.
Edit the file <tt>/etc/audit/auditd.conf</tt>. Add or modify the following line,
substituting <i>ACTION</i> appropriately:
<pre>admin_space_left_action = <i>ACTION</i></pre>
Set this value to <tt>single</tt> to cause the system to switch to single user
mode for corrective action. Acceptable values also include <tt>suspend</tt> and
<tt>halt</tt>. For certain systems, the need for availability
outweighs the need to log all actions, and a different setting should be
determined. Details regarding all possible values for <i>ACTION</i> are described in the
<tt>auditd.conf</tt> man page.
</description>
          <ocil clause="the system is not configured to switch to single user mode for corrective action">
Inspect <tt>/etc/audit/auditd.conf</tt> and locate the following line to
determine if the system is configured to either suspend, switch to single user mode,
or halt when disk space has run low:
<pre>admin_space_left_action single</pre>
</ocil>
          <rationale>Administrators should be made aware of an inability to record
audit records. If a separate partition or logical volume of adequate size
is used, running low on space for audit records should never occur.
</rationale>
          <oval id="auditd_data_retention_admin_space_left_action" value="var_auditd_admin_space_left_action"/>
          <ref nist="AU-1(b),AU-4,AU-5(b),IR-5" disa="140,1343"/>
        </Rule>
        <Rule id="auditd_data_retention_action_mail_acct" severity="medium">
          <title>Configure auditd mail_acct Action on Low Disk Space</title>
          <description>The <tt>auditd</tt> service can be configured to send email to
a designated account in certain situations. Add or correct the following line
in <tt>/etc/audit/auditd.conf</tt> to ensure that administrators are notified
via email for those situations:
<pre>action_mail_acct = <sub idref="var_auditd_action_mail_acct"/></pre>
</description>
          <ocil clause="auditd is not configured to send emails per identified actions">
Inspect <tt>/etc/audit/auditd.conf</tt> and locate the following line to
determine if the system is configured to send email to an
account when it needs to notify an administrator:
<pre>action_mail_acct = root</pre>
</ocil>
          <rationale>Email sent to the root account is typically aliased to the
administrators of the system, who can take appropriate action.</rationale>
          <oval id="auditd_data_retention_action_mail_acct" value="var_auditd_action_mail_acct"/>
          <ref nist="AU-1(b),AU-4,AU-5(a),IR-5" disa="139,144"/>
        </Rule>
        <Rule id="auditd_data_retention_flush">
          <title>Configure auditd flush priority</title>
          <description>The <tt>auditd</tt> service can be configured to
synchronously write audit event data to disk. Add or correct the following
line in <tt>/etc/audit/auditd.conf</tt> to ensure that audit event data is
fully synchronized with the log files on the disk:
<pre>flush = <sub idref="var_auditd_flush"/></pre>
</description>
          <ocil clause="auditd is not configured to synchronously write audit  event data to disk">
Inspect <tt>/etc/audit/auditd.conf</tt> and locate the following line to
determine if the system is configured to synchronize audit event data
with the log files on the disk:
<tt>$ sudo grep flush /etc/audit/auditd.conf</tt>
<pre>flush = DATA</pre>
Acceptable values are <tt>DATA</tt>, and <tt>SYNC</tt>. The setting is
case-insensitive.
</ocil>
          <rationale>Audit data should be synchronously written to disk to ensure
log integrity. These parameters assure that all audit event data is fully
synchronized with the log files on the disk.</rationale>
          <!-- <ident cce="" -->
          <!--oval id="auditd_data_retention_flush" value="var_auditd_flush" /-->
          <ref nist="AU-9,AU-12(1)" disa="1576"/>
        </Rule>
        <Rule id="auditd_audispd_syslog_plugin_activated" severity="medium">
          <title>Configure auditd to use audispd's syslog plugin</title>
          <description>To configure the <tt>auditd</tt> service to use the
<tt>syslog</tt> plug-in of the <tt>audispd</tt> audit event multiplexor, set
the <tt>active</tt> line in <tt>/etc/audisp/plugins.d/syslog.conf</tt> to
<tt>yes</tt>. Restart the <tt>auditd</tt> service:
<pre>$ sudo service auditd restart</pre>
</description>
          <ocil clause="it is not">
To verify the audispd's syslog plugin is active, run the following command:
<pre>$ sudo grep active /etc/audisp/plugins.d/syslog.conf</pre>
If the plugin is active, the output will show <tt>yes</tt>.
</ocil>
          <rationale>The auditd service does not include the ability to send audit
records to a centralized server for management directly. It does, however,
include a plug-in for audit event multiplexor (audispd) to pass audit records
to the local syslog server</rationale>
          <oval id="auditd_audispd_syslog_plugin_activated"/>
          <ref nist="AU-1(b),AU-3(2),IR-5" disa="136"/>
        </Rule>
      </Group>
      <Group id="auditd_configure_rules">
        <title>Configure <tt>auditd</tt> Rules for Comprehensive Auditing</title>
        <description>The <tt>auditd</tt> program can perform comprehensive
monitoring of system activity. This section describes recommended
configuration settings for comprehensive auditing, but a full
description of the auditing system's capabilities is beyond the
scope of this guide. The mailing list <i>linux-audit@redhat.com</i> exists
to facilitate community discussion of the auditing system.
<br/><br/>
The audit subsystem supports extensive collection of events, including:
<br/>
<ul><li>Tracing of arbitrary system calls (identified by name or number)
on entry or exit.</li><li>Filtering by PID, UID, call success, system call argument (with
some limitations), etc.</li><li>Monitoring of specific files for modifications to the file's
contents or metadata.</li></ul>
<br/>
Auditing rules at startup are controlled by the file <tt>/etc/audit/audit.rules</tt>.
Add rules to it to meet the auditing requirements for your organization.
Each line in <tt>/etc/audit/audit.rules</tt> represents a series of arguments
that can be passed to <tt>auditctl</tt> and can be individually tested
during runtime. See documentation in <tt>/usr/share/doc/audit-<i>VERSION</i></tt> and
in the related man pages for more details.
<br/><br/>
If copying any example audit rulesets from <tt>/usr/share/doc/audit-VERSION</tt>,
be sure to comment out the
lines containing <tt>arch=</tt> which are not appropriate for your system's
architecture. Then review and understand the following rules,
ensuring rules are activated as needed for the appropriate
architecture.
<br/><br/>
After reviewing all the rules, reading the following sections, and
editing as needed, the new rules can be activated as follows:
<pre>$ sudo service auditd restart</pre>
</description>
        <Group id="audit_time_rules">
          <title>Records Events that Modify Date and Time Information</title>
          <description>Arbitrary changes to the system time can be used to obfuscate
nefarious activities in log files, as well as to confuse network services that
are highly dependent upon an accurate system time. All changes to the system
time should be audited.</description>
          <Rule id="audit_rules_time_adjtimex">
            <title>Record attempts to alter time through adjtimex</title>
            <description>If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the
default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S adjtimex -k audit_time_rules</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S adjtimex -k audit_time_rules</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S adjtimex -k audit_time_rules</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S adjtimex -k audit_time_rules</pre>
The -k option allows for the specification of a key in string form that can be
used for better reporting capability through ausearch and aureport. Multiple
system calls can be defined on the same line to save space if desired, but is
not required. See an example of multiple combined syscalls:
<pre>-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k audit_time_rules</pre>
</description>
            <ocil clause="the system is not configured to audit time changes">
              <auditctl-syscall-check-macro syscall="adjtimex"/>
            </ocil>
            <rationale>Arbitrary changes to the system time can be used to obfuscate
nefarious activities in log files, as well as to confuse network services that
are highly dependent upon an accurate system time (such as sshd). All changes
to the system time should be audited.</rationale>
            <oval id="audit_rules_time_adjtimex"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5"/>
            <ref disa="1487,169"/>
          </Rule>
          <Rule id="audit_rules_time_settimeofday">
            <title>Record attempts to alter time through settimeofday</title>
            <description>If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the
default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S settimeofday -k audit_time_rules</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S settimeofday -k audit_time_rules</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S settimeofday -k audit_time_rules</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S settimeofday -k audit_time_rules</pre>
The -k option allows for the specification of a key in string form that can be
used for better reporting capability through ausearch and aureport. Multiple
system calls can be defined on the same line to save space if desired, but is
not required. See an example of multiple combined syscalls:
<pre>-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k audit_time_rules</pre>
</description>
            <ocil clause="the system is not configured to audit time changes">
              <auditctl-syscall-check-macro syscall="settimeofday"/>
            </ocil>
            <rationale>Arbitrary changes to the system time can be used to obfuscate
nefarious activities in log files, as well as to confuse network services that
are highly dependent upon an accurate system time (such as sshd). All changes
to the system time should be audited.</rationale>
            <oval id="audit_rules_time_settimeofday"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5"/>
            <ref disa="1487,169"/>
          </Rule>
          <Rule id="audit_rules_time_stime">
            <title>Record Attempts to Alter Time Through stime</title>
            <description>If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the
default), add the following line to <tt>/etc/audit/audit.rules</tt> file
for both 32 bit and 64 bit systems:
<pre>-a always,exit -F arch=b32 -S stime -k audit_time_rules</pre>
Since the 64 bit version of the "stime" system call is not defined in the audit
lookup table, the corresponding "-F arch=b64" form of this rule is not expected
to be defined on 64 bit systems (the aforementioned "-F arch=b32" stime rule
form itself is sufficient for both 32 bit and 64 bit systems). If the
<tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt> program to
read audit rules during daemon startup, add the following line to a file with
suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt> for both
32 bit and 64 bit systems:
<pre>-a always,exit -F arch=b32 -S stime -k audit_time_rules</pre>
Since the 64 bit version of the "stime" system call is not defined in the audit
lookup table, the corresponding "-F arch=b64" form of this rule is not expected
to be defined on 64 bit systems (the aforementioned "-F arch=b32" stime rule
form itself is sufficient for both 32 bit and 64 bit systems). The -k option
allows for the specification of a key in string form that can be used for
better reporting capability through ausearch and aureport. Multiple system
calls can be defined on the same line to save space if desired, but is not
required. See an example of multiple combined system calls:
<pre>-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k audit_time_rules</pre>
</description>
            <ocil clause="the system is not configured to audit time changes">
If the system is not configured to audit time changes, this is a finding.
If the system is 64-bit only, this is not applicable<br/>
<auditctl-syscall-check-macro syscall="stime"/>
</ocil>
            <rationale>Arbitrary changes to the system time can be used to obfuscate
nefarious activities in log files, as well as to confuse network services that
are highly dependent upon an accurate system time (such as sshd). All changes
to the system time should be audited.</rationale>
            <oval id="audit_rules_time_stime"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5"/>
            <ref disa="1487,169"/>
          </Rule>
          <Rule id="audit_rules_time_clock_settime">
            <title>Record Attempts to Alter Time Through clock_settime</title>
            <description>If the <tt>auditd</tt> daemon is configured
to use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -F key=time-change</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -F key=time-change</pre>
The -k option allows for the specification of a key in string form that can
be used for better reporting capability through ausearch and aureport.
Multiple system calls can be defined on the same line to save space if
desired, but is not required. See an example of multiple combined syscalls:
<pre>-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k audit_time_rules</pre>
</description>
            <ocil clause="the system is not configured to audit time changes">
              <auditctl-syscall-check-macro syscall="clock_settime"/>
            </ocil>
            <rationale>Arbitrary changes to the system time can be used to obfuscate
nefarious activities in log files, as well as to confuse network services that
are highly dependent upon an accurate system time (such as sshd). All changes
to the system time should be audited.</rationale>
            <oval id="audit_rules_time_clock_settime"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5"/>
            <ref disa="1487,169"/>
          </Rule>
          <Rule id="audit_rules_time_watch_localtime">
            <title>Record Attempts to Alter the localtime File</title>
            <description>If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the default),
add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-w /etc/localtime -p wa -k audit_time_rules</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-w /etc/localtime -p wa -k audit_time_rules</pre>
The -k option allows for the specification of a key in string form that can
be used for better reporting capability through ausearch and aureport and
should always be used.
</description>
            <ocil clause="the system is not configured to audit time changes">
To determine if the system is configured to audit attempts to
alter time via the /etc/localtime file, run the following
command:
<pre>$ sudo auditctl -l | grep "watch=/etc/localtime"</pre>
If the system is configured to audit this activity, it will return a line.
</ocil>
            <rationale>Arbitrary changes to the system time can be used to obfuscate
nefarious activities in log files, as well as to confuse network services that
are highly dependent upon an accurate system time (such as sshd). All changes
to the system time should be audited.</rationale>
            <oval id="audit_rules_time_watch_localtime"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(b),IR-5"/>
            <ref disa="1487,169"/>
          </Rule>
        </Group>
        <!--End <Group id="audit_time_rules"> -->
        <Rule id="audit_rules_usergroup_modification">
          <title>Record Events that Modify User/Group Information</title>
          <description>If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the
default), add the following lines to <tt>/etc/audit/audit.rules</tt> file,
in order to capture events that modify account changes:
<pre>-w /etc/group -p wa -k audit_rules_usergroup_modification
-w /etc/passwd -p wa -k audit_rules_usergroup_modification
-w /etc/gshadow -p wa -k audit_rules_usergroup_modification
-w /etc/shadow -p wa -k audit_rules_usergroup_modification
-w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following lines to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>,
in order to capture events that modify account changes:
<pre>-w /etc/group -p wa -k audit_rules_usergroup_modification
-w /etc/passwd -p wa -k audit_rules_usergroup_modification
-w /etc/gshadow -p wa -k audit_rules_usergroup_modification
-w /etc/shadow -p wa -k audit_rules_usergroup_modification
-w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification</pre>
</description>
          <ocil clause="the system is not configured to audit account changes">
To determine if the system is configured to audit account changes,
run the following command:
<pre>auditctl -l | egrep '(/etc/passwd|/etc/shadow|/etc/group|/etc/gshadow|/etc/security/opasswd)'</pre>
If the system is configured to watch for account changes, lines should be returned for
each file specified (and with <tt>perm=wa</tt> for each).
</ocil>
          <rationale>In addition to auditing new user and group accounts, these watches
will alert the system administrator(s) to any modifications. Any unexpected
users, groups, or modifications should be investigated for legitimacy.</rationale>
          <oval id="audit_rules_usergroup_modification"/>
          <ref nist="AC-2(4),AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="18,1403,1404,1405,1684,1683,1685,1686"/>
        </Rule>
        <Rule id="audit_rules_networkconfig_modification">
          <title>Record Events that Modify the System's Network Environment</title>
          <description>If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the
default), add the following lines to <tt>/etc/audit/audit.rules</tt> file,
setting ARCH to either b32 or b64 as appropriate for your system:
<pre>-a always,exit -F arch=ARCH -S sethostname -S setdomainname -k audit_rules_networkconfig_modification
-w /etc/issue -p wa -k audit_rules_networkconfig_modification
-w /etc/issue.net -p wa -k audit_rules_networkconfig_modification
-w /etc/hosts -p wa -k audit_rules_networkconfig_modification
-w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following lines to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>,
setting ARCH to either b32 or b64 as appropriate for your system:
<pre>-a always,exit -F arch=ARCH -S sethostname -S setdomainname -k audit_rules_networkconfig_modification
-w /etc/issue -p wa -k audit_rules_networkconfig_modification
-w /etc/issue.net -p wa -k audit_rules_networkconfig_modification
-w /etc/hosts -p wa -k audit_rules_networkconfig_modification
-w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification</pre>
</description>
          <ocil clause="the system is not configured to audit changes of the network configuration">
To determine if the system is configured to audit changes to its network configuration,
run the following command:
<pre>auditctl -l | egrep '(/etc/issue|/etc/issue.net|/etc/hosts|/etc/sysconfig/network)'</pre>
If the system is configured to watch for network configuration changes, a line should be returned for
each file specified (and <tt>perm=wa</tt> should be indicated for each).
</ocil>
          <rationale>The network environment should not be modified by anything other
than administrator action. Any change to network parameters should be
audited.</rationale>
          <oval id="audit_rules_networkconfig_modification"/>
          <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5"/>
        </Rule>
        <Rule id="file_permissions_var_log_audit">
          <title>System Audit Logs Must Have Mode 0640 or Less Permissive</title>
          <description>
Change the mode of the audit log files with the following command:
<pre>$ sudo chmod 0640 <i>audit_file</i></pre>
</description>
          <ocil clause="any are more permissive">
Run the following command to check the mode of the system audit logs:
<pre>$ sudo ls -l /var/log/audit</pre>
Audit logs must be mode 0640 or less permissive.
</ocil>
          <rationale>
If users can write to audit logs, audit trails can be modified or destroyed.
</rationale>
          <!-- <oval id="file_permissions_var_log_audit" /> -->
          <ref nist="AC-6,AU-1(b),AU-9,IR-5" disa=""/>
        </Rule>
        <Rule id="file_ownership_var_log_audit">
          <title>System Audit Logs Must Be Owned By Root</title>
          <description>
            <fileowner-desc-macro file="/var/log" owner="root"/>
          </description>
          <ocil>
            <fileowner-check-macro file="/var/log" owner="root"/>
          </ocil>
          <rationale>Failure to give ownership of the audit log files to root allows the designated
owner, and unauthorized users, potential access to sensitive information.</rationale>
          <oval id="file_ownership_var_log_audit"/>
          <ref nist="AC-6,AU-1(b),AU-9,IR-5" disa="166"/>
        </Rule>
        <Rule id="audit_rules_mac_modification">
          <title>Record Events that Modify the System's Mandatory Access Controls</title>
          <description>If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the
default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-w /etc/selinux/ -p wa -k MAC-policy</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-w /etc/selinux/ -p wa -k MAC-policy</pre>
</description>
          <ocil clause="the system is not configured to audit attempts to change the MAC policy">
To determine if the system is configured to audit changes to its SELinux
configuration files, run the following command:
<pre>$ sudo auditctl -l | grep "dir=/etc/selinux"</pre>
If the system is configured to watch for changes to its SELinux
configuration, a line should be returned (including
<tt>perm=wa</tt> indicating permissions that are watched).
</ocil>
          <rationale>The system's mandatory access policy (SELinux) should not be
arbitrarily changed by anything other than administrator action. All changes to
MAC policy should be audited.</rationale>
          <oval id="audit_rules_mac_modification"/>
          <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5"/>
        </Rule>
        <Group id="audit_dac_actions">
          <title>Record Events that Modify the System's Discretionary Access Controls</title>
          <description>At a minimum the audit system should collect file permission
changes for all users and root.  Note that the "-F arch=b32" lines should be
present even on a 64 bit system.  These commands identify system calls for
auditing.  Even if the system is 64 bit it can still execute 32 bit system
calls.  Additionally, these rules can be configured in a number of ways while
still achieving the desired effect.  An example of this is that the "-S" calls
could be split up and placed on separate lines, however, this is less efficient.
Add the following to <tt>/etc/audit/audit.rules</tt>:
<pre>-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If your system is 64 bit then these lines should be duplicated and the
arch=b32 replaced with arch=b64 as follows:
<pre>-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
          <rationale>The changing of file permissions could indicate that a user is
attempting to gain access to information that would otherwise be disallowed.
Auditing DAC modifications can facilitate the identification of patterns of
abuse among both authorized and unauthorized users.</rationale>
          <Rule id="audit_rules_dac_modification_chmod">
            <title>Record Events that Modify the System's Discretionary Access Controls - chmod</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured to
use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S chmod -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S chmod  -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S chmod -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S chmod  -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <ocil clause="the system is not configured to audit permission changes">
              <auditctl-syscall-check-macro syscall="chmod"/>
            </ocil>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls.  Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_chmod"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_chown">
            <title>Record Events that Modify the System's Discretionary Access Controls - chown</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured to
use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S chown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S chown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S chown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S chown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="chown"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls.  Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_chown"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_fchmod">
            <title>Record Events that Modify the System's Discretionary Access Controls - fchmod</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured to
use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S fchmod -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fchmod -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S fchmod -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fchmod -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="fchmod"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls. Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_fchmod"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_fchmodat">
            <title>Record Events that Modify the System's Discretionary Access Controls - fchmodat</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured to
use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S fchmodat -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fchmodat -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S fchmodat -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fchmodat -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="fchmodat"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls.  Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_fchmodat"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_fchown">
            <title>Record Events that Modify the System's Discretionary Access Controls - fchown</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured
to use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S fchown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fchown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S fchown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fchown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="fchown"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls.  Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_fchown"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_fchownat">
            <title>Record Events that Modify the System's Discretionary Access Controls - fchownat</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured
to use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S fchownat -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fchownat -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S fchownat -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fchownat -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="fchownat"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls.  Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_fchownat"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_fremovexattr">
            <title>Record Events that Modify the System's Discretionary Access Controls - fremovexattr</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured
to use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S fremovexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fremovexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S fremovexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fremovexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="fremovexattr"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls.  Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_fremovexattr"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_fsetxattr">
            <title>Record Events that Modify the System's Discretionary Access Controls - fsetxattr</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured
to use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S fsetxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fsetxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S fsetxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S fsetxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="fsetxattr"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls. Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_fsetxattr"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_lchown">
            <title>Record Events that Modify the System's Discretionary Access Controls - lchown</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured
to use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S lchown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S lchown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S lchown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S lchown -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="lchown"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls.  Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_lchown"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_lremovexattr">
            <title>Record Events that Modify the System's Discretionary Access Controls - lremovexattr</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured
to use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S lremovexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S lremovexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S lremovexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S lremovexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="lremovexattr"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls.  Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_lremovexattr"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_lsetxattr">
            <title>Record Events that Modify the System's Discretionary Access Controls - lsetxattr</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured
to use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S lsetxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S lsetxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S lsetxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S lsetxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="lsetxattr"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls.  Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_lsetxattr"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_removexattr">
            <title>Record Events that Modify the System's Discretionary Access Controls - removexattr</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured
to use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S removexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S removexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S removexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S removexattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="removexattr"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls.  Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_removexattr"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
          <Rule id="audit_rules_dac_modification_setxattr">
            <title>Record Events that Modify the System's Discretionary Access Controls - setxattr</title>
            <description>At a minimum the audit system should collect file permission
changes for all users and root. If the <tt>auditd</tt> daemon is configured
to use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S setxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S setxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S setxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
If the system is 64 bit then also add the following line:
<pre>-a always,exit -F arch=b64 -S setxattr -F auid&gt;=1000 -F auid!=4294967295 -k perm_mod</pre>
</description>
            <ocil>
              <auditctl-syscall-check-macro syscall="setxattr"/>
            </ocil>
            <rationale>The changing of file permissions could indicate that a user is attempting to
gain access to information that would otherwise be disallowed. Auditing DAC modifications
can facilitate the identification of patterns of abuse among both authorized and
unauthorized users.</rationale>
            <warning category="general">Note that these rules can be configured in a
number of ways while still achieving the desired effect.  Here the system calls
have been placed independent of other system calls.  Grouping these system
calls with others as identifying earlier in this guide is more efficient.
</warning>
            <oval id="audit_rules_dac_modification_setxattr"/>
            <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
          </Rule>
        </Group>
        <!-- <Group id="audit_dac_actions"> -->
        <Rule id="audit_rules_login_events">
          <title>Record Attempts to Alter Logon and Logout Events</title>
          <description>The audit system already collects login information for all users
and root. If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the
default), add the following lines to <tt>/etc/audit/audit.rules</tt> file in
order to watch for attempted manual edits of files involved in storing logon
events:
<pre>-w /var/log/tallylog -p wa -k logins
-w /var/run/faillock/ -p wa -k logins
-w /var/log/lastlog -p wa -k logins</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following lines to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>
in order to watch for attempted manual edits of files involved in storing logon
events:
<pre>-w /var/log/tallylog -p wa -k logins
-w /var/run/faillock/ -p wa -k logins
-w /var/log/lastlog -p wa -k logins</pre>
</description>
          <rationale>Manual editing of these files may indicate nefarious activity, such
as an attacker attempting to remove evidence of an intrusion.</rationale>
          <oval id="audit_rules_login_events"/>
          <ref nist="AC-17(7),AU-1(b),AU-12(a),AU-12(c),IR-5"/>
        </Rule>
        <Rule id="audit_rules_session_events">
          <title>Record Attempts to Alter Process and Session Initiation Information</title>
          <description>The audit system already collects process information for all
users and root. If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the
default), add the following lines to <tt>/etc/audit/audit.rules</tt> file in
order to watch for attempted manual edits of files involved in storing such
process information:
<pre>-w /var/run/utmp -p wa -k session
-w /var/log/btmp -p wa -k session
-w /var/log/wtmp -p wa -k session</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following lines to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>
in order to watch for attempted manual edits of files involved in storing such
process information:
<pre>-w /var/run/utmp -p wa -k session
-w /var/log/btmp -p wa -k session
-w /var/log/wtmp -p wa -k session</pre>
</description>
          <rationale>Manual editing of these files may indicate nefarious activity, such
as an attacker attempting to remove evidence of an intrusion.</rationale>
          <oval id="audit_rules_session_events"/>
          <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5"/>
        </Rule>
        <Rule id="audit_rules_unsuccessful_file_modification">
          <title>Ensure <tt>auditd</tt> Collects Unauthorized Access Attempts to Files (unsuccessful)</title>
          <description>At a minimum the audit system should collect unauthorized file
accesses for all users and root. If the <tt>auditd</tt> daemon is configured
to use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following lines to <tt>/etc/audit/audit.rules</tt> file:
<pre>-a always,exit -F arch=b32 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b32 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=4294967295 -k access</pre>
If the system is 64 bit then also add the following lines:
<pre>
-a always,exit -F arch=b64 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b64 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=4294967295 -k access</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following lines to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-a always,exit -F arch=b32 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b32 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=4294967295 -k access</pre>
If the system is 64 bit then also add the following lines:
<pre>
-a always,exit -F arch=b64 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b64 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=4294967295 -k access</pre>
</description>
          <ocil clause="32-bit and 64-bit system calls to creat, open, openat, open_by_handle_at, truncate, and ftruncate are not audited during EACCES and EPERM">
To verify that the audit system collects unauthorized file accesses, run the following commands:
<pre>$ sudo grep EACCES /etc/audit/audit.rules</pre>
<pre>$ sudo grep EPERM /etc/audit/audit.rules</pre>
</ocil>
          <rationale>Unsuccessful attempts to access files could be an indicator of malicious activity on a system. Auditing
these events could serve as evidence of potential system compromise.</rationale>
          <oval id="audit_rules_unsuccessful_file_modification"/>
          <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
        </Rule>
        <Rule id="audit_rules_privileged_commands">
          <title>Ensure <tt>auditd</tt> Collects Information on the Use of Privileged Commands</title>
          <description>At a minimum the audit system should collect the execution of
privileged commands for all users and root. To find the relevant setuid /
setgid programs, run the following command for each local partition
<i>PART</i>:
<pre>$ sudo find <i>PART</i> -xdev -type f -perm -4000 -o -type f -perm -2000 2&gt;/dev/null</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>auditctl</tt>
utility to read audit rules during daemon startup (the default), add a line of
the following form to <tt>/etc/audit/audit.rules</tt> for each setuid / setgid
program on the system, replacing the <i>SETUID_PROG_PATH</i> part with the full
path of that setuid / setgid program in the list:
<pre>-a always,exit -F path=<i>SETUID_PROG_PATH</i> -F perm=x -F auid&gt;=1000 -F auid!=4294967295 -k privileged</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add a line of the following
form to a file with suffix <tt>.rules</tt> in the directory
<tt>/etc/audit/rules.d</tt> for each setuid / setgid program on the system,
replacing the <i>SETUID_PROG_PATH</i> part with the full path of that setuid /
setgid program in the list:
<pre>-a always,exit -F path=<i>SETUID_PROG_PATH</i> -F perm=x -F auid&gt;=1000 -F auid!=4294967295 -k privileged</pre>
</description>
          <ocil clause="it is not the case">
To verify that auditing of privileged command use is configured, run the
following command for each local partition <i>PART</i> to find relevant
setuid / setgid programs:
<pre>$ sudo find <i>PART</i> -xdev -type f -perm -4000 -o -type f -perm -2000 2&gt;/dev/null</pre>
Run the following command to verify entries in the audit rules for all programs
found with the previous command:
<pre>$ sudo grep path /etc/audit/audit.rules</pre>
It should be the case that all relevant setuid / setgid programs have a line
in the audit rules.
</ocil>
          <rationale>Privileged programs are subject to escalation-of-privilege attacks,
which attempt to subvert their normal role of providing some necessary but
limited capability. As such, motivation exists to monitor these programs for
unusual activity.
</rationale>
          <oval id="audit_rules_privileged_commands"/>
          <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-2(4),AU-12(a),AU-12(c),IR-5" disa="40"/>
        </Rule>
        <Rule id="audit_rules_media_export">
          <title>Ensure <tt>auditd</tt> Collects Information on Exporting to Media (successful)</title>
          <description>At a minimum the audit system should collect media exportation
events for all users and root. If the <tt>auditd</tt> daemon is configured to
use the <tt>auditctl</tt> utility to read audit rules during daemon startup
(the default), add the following line to <tt>/etc/audit/audit.rules</tt> file,
setting ARCH to either b32 or b64 as appropriate for your system:
<pre>-a always,exit -F arch=ARCH -S mount -F auid&gt;=1000 -F auid!=4294967295 -k export</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>,
setting ARCH to either b32 or b64 as appropriate for your system:
<pre>-a always,exit -F arch=ARCH -S mount -F auid&gt;=1000 -F auid!=4294967295 -k export</pre>
</description>
          <ocil clause="there is not output">
To verify that auditing is configured for all media exportation events, run the following command:
<pre>$ sudo auditctl -l | grep syscall | grep mount</pre>
</ocil>
          <rationale>The unauthorized exportation of data to external media could result in an information leak
where classified information, Privacy Act information, and intellectual property could be lost. An audit
trail should be created each time a filesystem is mounted to help identify and guard against information
loss.</rationale>
          <oval id="audit_rules_media_export"/>
          <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
        </Rule>
        <Rule id="audit_rules_file_deletion_events">
          <title>Ensure <tt>auditd</tt> Collects File Deletion Events by User</title>
          <description>At a minimum the audit system should collect file deletion events
for all users and root. If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the
default), add the following line to <tt>/etc/audit/audit.rules</tt> file,
setting ARCH to either b32 or b64 as appropriate for your system:
<pre>-a always,exit -F arch=ARCH -S rmdir -S unlink -S unlinkat -S rename -S renameat -F auid&gt;=1000 -F auid!=4294967295 -k delete</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>,
setting ARCH to either b32 or b64 as appropriate for your system:
<pre>-a always,exit -F arch=ARCH -S rmdir -S unlink -S unlinkat -S rename -S renameat -F auid&gt;=1000 -F auid!=4294967295 -k delete</pre>
</description>
          <ocil>
            <auditctl-syscall-check-macro syscall="unlink"/>
            <auditctl-syscall-check-macro syscall="unlinkat"/>
            <auditctl-syscall-check-macro syscall="rename"/>
            <auditctl-syscall-check-macro syscall="renameat"/>
          </ocil>
          <rationale>Auditing file deletions will create an audit trail for files that are removed
from the system. The audit trail could aid in system troubleshooting, as well as, detecting
malicious processes that attempt to delete log files to conceal their presence.</rationale>
          <oval id="audit_rules_file_deletion_events"/>
          <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
        </Rule>
        <Rule id="audit_rules_sysadmin_actions">
          <title>Ensure <tt>auditd</tt> Collects System Administrator Actions</title>
          <description>At a minimum the audit system should collect administrator actions
for all users and root. If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the default),
add the following line to <tt>/etc/audit/audit.rules</tt> file:
<pre>-w /etc/sudoers -p wa -k actions</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt>:
<pre>-w /etc/sudoers -p wa -k actions</pre>
</description>
          <ocil clause="there is not output">
To verify that auditing is configured for system administrator actions, run the following command:
<pre>$ sudo auditctl -l | grep "watch=/etc/sudoers"</pre>
</ocil>
          <rationale>The actions taken by system administrators should be audited to keep a record
of what was executed on the system, as well as, for accountability purposes.</rationale>
          <oval id="audit_rules_sysadmin_actions"/>
          <ref nist="AC-2(7)(b),AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
        </Rule>
        <Rule id="audit_rules_kernel_module_loading">
          <title>Ensure <tt>auditd</tt> Collects Information on Kernel Module Loading and Unloading</title>
          <description>If the <tt>auditd</tt> daemon is configured to use the <tt>auditctl</tt>
utility to read audit rules during daemon startup (the default), add the following
lines to <tt>/etc/audit/audit.rules</tt> file in order to capture kernel module loading
and unloading events, setting ARCH to either b32 or b64 as appropriate for your system:
<pre>-w /usr/sbin/insmod -p x -k modules
-w /usr/sbin/rmmod -p x -k modules
-w /usr/sbin/modprobe -p x -k modules
-a always,exit -F arch=<i>ARCH</i> -S init_module -S delete_module -k modules</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt> program to
read audit rules during daemon startup, add the following lines to a file with suffix
<tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt> to capture kernel module
loading and unloading events, setting ARCH to either b32 or b64 as appropriate for
your system:
<pre>-w /usr/sbin/insmod -p x -k modules
-w /usr/sbin/rmmod -p x -k modules
-w /usr/sbin/modprobe -p x -k modules
-a always,exit -F arch=<i>ARCH</i> -S init_module -S delete_module -k modules</pre>
</description>
          <ocil>
            <auditctl-syscall-check-macro syscall="init_module"/>
            <auditctl-syscall-check-macro syscall="delete_module"/>
          </ocil>
          <rationale>The addition/removal of kernel modules can be used to alter the behavior of
the kernel and potentially introduce malicious code into kernel space. It is important
to have an audit trail of modules that have been introduced into the kernel.</rationale>
          <oval id="audit_rules_kernel_module_loading"/>
          <ref nist="AC-17(7),AU-1(b),AU-2(a),AU-2(c),AU-2(d),AU-12(a),AU-12(c),IR-5" disa="126"/>
        </Rule>
        <Rule id="audit_rules_immutable">
          <title>Make the <tt>auditd</tt> Configuration Immutable</title>
          <description>If the <tt>auditd</tt> daemon is configured to use the
<tt>auditctl</tt> utility to read audit rules during daemon startup (the
default), add the following line to <tt>/etc/audit/audit.rules</tt> file in
order to make the auditd configuration immutable:
<pre>-e 2</pre>
If the <tt>auditd</tt> daemon is configured to use the <tt>augenrules</tt>
program to read audit rules during daemon startup, add the following line to a
file with suffix <tt>.rules</tt> in the directory <tt>/etc/audit/rules.d</tt> in
order to make the auditd configuration immutable:
<pre>-e 2</pre>
With this setting, a reboot will be required to change any audit rules.
</description>
          <rationale>Making the audit configuration immutable prevents accidental as
well as malicious modification of the audit rules, although it may be
problematic if legitimate changes are needed during system
operation</rationale>
          <oval id="audit_rules_immutable"/>
          <ref nist="AC-6,AU-1(b),AU-2(a),AU-2(c),AU-2(d),IR-5"/>
        </Rule>
      </Group>
    </Group>
  </Group>
  <Group id="services" prodtype="all">
    <title>Services</title>
    <description>
The best protection against vulnerable software is running less software. This section describes how to review
the software which <product-name-macro/> installs on a system and disable software which is not needed. It
then enumerates the software packages installed on a default <product-name-macro/> system and provides guidance about which
ones can be safely disabled.
<br/><br/>
<product-name-macro/> provides a convenient minimal install option that essentially installs the bare necessities for a functional
system. When building <product-name-macro/> systems, it is highly recommended to select the minimal packages and then build up
the system from there.
</description>
    <Group id="cron_and_at">
      <title>Cron and At Daemons</title>
      <description>The cron and at services are used to allow commands to
be executed at a later time. The cron service is required by almost
all systems to perform necessary maintenance tasks, while at may or
may not be required on a given system. Both daemons should be
configured defensively.</description>
      <Rule id="service_crond_enabled" severity="medium">
        <title>Enable cron Service</title>
        <description>The <tt>crond</tt> service is used to execute commands at
preconfigured times. It is required by almost all systems to perform necessary
maintenance tasks, such as notifying root of system activity.
<systemd-service-macro enable="true" service="crond"/>
</description>
        <ocil>
          <systemd-check-macro enable="true" service="crond"/>
        </ocil>
        <rationale>Due to its usage for maintenance and security-supporting tasks,
enabling the cron daemon is essential.
</rationale>
        <oval id="service_crond_enabled"/>
        <ref nist="CM-7"/>
      </Rule>
      <Rule id="disable_anacron">
        <title>Disable anacron Service</title>
        <description>The <tt>cronie-anacron</tt> package, which provides <tt>anacron</tt>
functionality, is installed by default. 
<dnf-macro install="false" package="cronie-anacron"/>
</description>
        <ocil>
          <package-check-macro package="cronie-anacron"/>
        </ocil>
        <rationale>
The <tt>anacron</tt> service provides <tt>cron</tt> functionality for systems
such as laptops and workstations that may be shut down during the normal times
that <tt>cron</tt> jobs are scheduled to run. On systems which do not require this
additional functionality, <tt>anacron</tt> could needlessly increase the possible
attack surface for an intruder.
</rationale>
        <ref nist="CM-7"/>
      </Rule>
      <Rule id="service_atd_disabled">
        <title>Disable At Service (atd)</title>
        <description>The <tt>at</tt> and <tt>batch</tt> commands can be used to
schedule tasks that are meant to be executed only once. This allows delayed
execution in a manner similar to cron, except that it is not
recurring. The daemon <tt>atd</tt> keeps track of tasks scheduled via
<tt>at</tt> and <tt>batch</tt>, and executes them at the specified time.
<systemd-service-macro enable="false" service="atd"/>
</description>
        <ocil>
          <systemd-check-macro enable="false" service="atd"/>
        </ocil>
        <rationale>
The <tt>atd</tt> service could be used by an unsophisticated insider to carry
out activities outside of a normal login session, which could complicate
accountability. Furthermore, the need to schedule tasks with <tt>at</tt> or
<tt>batch</tt> is not common.
</rationale>
        <!--oval id="service_atd_disabled" /-->
        <ref nist="CM-7" disa="381"/>
      </Rule>
      <Group id="restrict_at_cron_users">
        <title>Restrict at and cron to Authorized Users if Necessary</title>
        <description>
The <tt>/etc/cron.allow</tt> and <tt>/etc/at.allow</tt> files contain lists of users who are allowed
to use cron and at to delay execution of processes. If these files exist and
if the corresponding files <tt>/etc/cron.deny</tt> and <tt>/etc/at.deny</tt> do not exist,
then only users listed in the relevant allow files can run the crontab and at
commands to submit jobs to be run at scheduled intervals.
On many systems, only the system administrator needs the ability to schedule
jobs. Note that even if a given user is not listed in <tt>cron.allow</tt>, cron jobs can
still be run as that user. The <tt>cron.allow</tt> file controls only administrative access
to the crontab command for scheduling and modifying cron jobs.
<br/>
<br/>
To restrict at and cron to only authorized users:
<ul><li>Remove the cron.deny file:<pre>$ sudo rm /etc/cron.deny</pre></li><li>Edit <tt>/etc/cron.allow</tt>, adding one line for each user allowed to use the crontab command to create cron jobs.</li><li>Remove the <tt>at.deny</tt> file:<pre>$ sudo rm /etc/at.deny</pre></li><li>Edit <tt>/etc/at.allow</tt>, adding one line for each user allowed to use the at command to create at jobs.</li></ul>
</description>
      </Group>
    </Group>
    <Group id="ssh">
      <title>SSH Server</title>
      <description>The SSH protocol is recommended for remote login and remote file
transfer. SSH provides confidentiality and integrity for data exchanged between
two systems, as well as server authentication, through the use of public key
cryptography. The implementation included with the system is called OpenSSH,
and more detailed documentation is available from its website,
<weblink-macro link="http://www.openssh.org"/>. Its server program is called <tt>sshd</tt> and
provided by the RPM package <tt>openssh-server</tt>.</description>
      <Value id="sshd_idle_timeout_value" type="number" operator="equals" interactive="0">
        <title>SSH session Idle time</title>
        <description>Specify duration of allowed idle time.</description>
        <value selector="">300</value>
        <value selector="5_minutes">300</value>
        <value selector="10_minutes">600</value>
        <value selector="15_minutes">900</value>
      </Value>
      <Value id="sshd_listening_port" type="number" operator="equals" interactive="0">
        <title>SSH Server Listening Port</title>
        <description>Specify port the SSH server is listening.</description>
        <value selector="">22</value>
        <value selector="default">22</value>
      </Value>
      <Group id="ssh_server">
        <title>Configure OpenSSH Server if Necessary</title>
        <description>If the system needs to act as an SSH server, then certain changes
should be made to the OpenSSH daemon configuration file
<tt>/etc/ssh/sshd_config</tt>. The following recommendations can be applied
to this file. See the <tt>sshd_config(5)</tt> man page for more detailed
information.</description>
        <Rule id="sshd_disable_root_login" severity="medium">
          <title>SSH Root Login Disabled</title>
          <description>The root user should never be allowed to login to a system
directly over a network. To disable root login via SSH, add or correct the
following line in <tt>/etc/ssh/sshd_config</tt>:
<pre>PermitRootLogin no</pre>
</description>
          <rationale>
Permitting direct root login reduces auditable information about who ran
privileged commands on the system and also allows direct attack attempts on
root's password.
</rationale>
          <oval id="sshd_disable_root_login"/>
          <ref nist="AC-6(2),IA-2(1)" disa="770"/>
        </Rule>
        <Rule id="sshd_disable_empty_passwords" severity="high">
          <title>SSH Access via Empty Passwords Disabled</title>
          <description>To explicitly disallow remote login from accounts with empty
passwords, add or correct the following line in <tt>/etc/ssh/sshd_config</tt>:
<pre>PermitEmptyPasswords no</pre>
Any accounts with empty passwords should be disabled immediately, and PAM
configuration should prevent users from being able to assign themselves empty
passwords.
</description>
          <rationale>
Configuring this setting for the SSH daemon provides additional assurance that
remote login via SSH will require a password, even in the event of
misconfiguration elsewhere.
</rationale>
          <oval id="sshd_disable_empty_passwords"/>
          <ref disa="765,766"/>
        </Rule>
        <Rule id="sshd_set_idle_timeout">
          <title>SSH Idle Timeout Interval Used</title>
          <description>SSH allows administrators to set an idle timeout interval.
After this interval has passed, the idle user will be automatically logged out.
<br/><br/>
To set an idle timeout interval, edit the <tt>/etc/ssh/sshd_config</tt> file,
locate the following line:
<pre>ClientAliveInterval <b>INTERVAL</b></pre>
and correct it to have the form of:
<pre>ClientAliveInterval <b><sub idref="sshd_idle_timeout_value"/></b></pre>
The timeout <b>INTERVAL</b> is given in seconds. To have a timeout of 15
minutes, set <b>INTERVAL</b> to 900.
<br/><br/>
If a shorter timeout has already been set for the login shell, that value will
preempt any SSH setting made here. Keep in mind that some processes may stop
SSH from correctly detecting that the user is idle.
</description>
          <rationale>
Causing idle users to be automatically logged out guards against compromises
one system leading trivially to compromises on another.
</rationale>
          <oval id="sshd_set_idle_timeout" value="sshd_idle_timeout_value"/>
          <ref disa="879,1133"/>
        </Rule>
        <Rule id="sshd_set_keepalive">
          <title>SSH Client Alive Count Used</title>
          <description>To ensure the SSH idle timeout occurs precisely when the
<tt>ClientAliveCountMax</tt> is set, edit <tt>/etc/ssh/sshd_config</tt> as
follows:
<pre>ClientAliveCountMax 0</pre>
</description>
          <rationale>
This ensures a user login will be terminated as soon as the
<tt>ClientAliveCountMax</tt> is reached.
</rationale>
          <oval id="sshd_set_keepalive"/>
          <ref disa="879,1133"/>
        </Rule>
      </Group>
    </Group>
    <Group id="ntp">
      <title>Network Time Protocol</title>
      <description>The Network Time Protocol is used to manage the system
clock over a network. Computer clocks are not very accurate, so
time will drift unpredictably on unmanaged systems. Central time
protocols can be used both to ensure that time is consistent among
a network of machines, and that their time is consistent with the
outside world.
<br/><br/>
If every system on a network reliably reports the same time, then it is much
easier to correlate log messages in case of an attack. In addition, a number of
cryptographic protocols (such as Kerberos) use timestamps to prevent certain
types of attacks. If your network does not have synchronized time, these
protocols may be unreliable or even unusable.
<br/><br/>
Depending on the specifics of the network, global time accuracy may be just as
important as local synchronization, or not very important at all. If your
network is connected to the Internet, using a
public timeserver (or one provided by your enterprise) provides globally
accurate timestamps which may be essential in investigating or responding to
an attack which originated outside of your network.
<br/><br/>
A typical network setup involves a small number of internal systems operating as NTP
servers, and the remainder obtaining time information from those
internal servers.
<br/><br/>
More information on how to configure the NTP server software,
including configuration of cryptographic authentication for
time data, is available at <weblink-macro link="http://www.ntp.org"/>.
</description>
      <Rule id="service_chronyd_enabled" severity="medium">
        <title>Enable the Chrony Daemon</title>
        <description>
          <systemd-service-macro enable="true" service="ntpd"/>
        </description>
        <ocil>
          <systemd-check-macro enable="true" service="ntpd"/>
        </ocil>
        <rationale>Enabling the <tt>chronyd</tt> service ensures that the <tt>chronyd</tt>
service will be running and that the system will synchronize its time to
any servers specified. This is important whether the system is configured to be
a client (and synchronize only its own clock) or it is also acting as an NTP
server to other systems.  Synchronizing time is essential for authentication
services such as Kerberos, but it is also important for maintaining accurate
logs and auditing possible security breaches.  
<br/><br/>
The chrony daemon offers all of the functionality of <tt>ntpdate</tt>, which is now 
deprecated.  Additional information on this is available at 
<weblink-macro link="http://support.ntp.org/bin/view/Dev/DeprecatingNtpdate"/></rationale>
        <oval id="service_chronyd_enabled"/>
        <ref nist="AU-8(1)" disa="160"/>
      </Rule>
      <Rule id="chronyd_specify_remote_server" severity="medium">
        <title>Specify a Remote NTP Server</title>
        <description>To specify a remote NTP server for time synchronization, edit
the file <tt>/etc/chrony.conf</tt>. Add or correct the following lines,
substituting the IP or hostname of a remote NTP server for <em>ntpserver</em>:
<pre>server <i>ntpserver</i></pre>
This instructs the NTP software to contact that remote server to obtain time
data.
</description>
        <ocil clause="this is not the case">
To verify that a remote NTP service is configured for time synchronization,
open the following file:
<pre>/etc/chrony.conf</pre>
In the file, there should be a section similar to the following:
<pre>server <i>ntpserver</i></pre>
</ocil>
        <rationale>Synchronizing with an NTP server makes it possible
to collate system logs from multiple sources or correlate computer events with
real time events.
</rationale>
        <oval id="chronyd_specify_remote_server"/>
        <ref nist="AU-8(1)" disa="160"/>
      </Rule>
      <Rule id="chronyd_specify_multiple_servers">
        <title>Specify Additional Remote NTP Servers</title>
        <description>Additional NTP servers can be specified for time synchronization
in the file <tt>/etc/chrony.conf</tt>.  To do so, add additional lines of the
following form, substituting the IP address or hostname of a remote NTP server for
<em>ntpserver</em>:
<pre>server <i>ntpserver</i></pre>
</description>
        <rationale>Specifying additional NTP servers increases the availability of
accurate time data, in the event that one of the specified servers becomes
unavailable. This is typical for a system acting as an NTP server for
other systems.
</rationale>
        <oval id="chronyd_specify_multiple_servers"/>
        <ref nist="AU-8(1)"/>
      </Rule>
      <!-- future Rules (for later profiles/enhancements):
ensuring use of the restrict keyword
enabling cryptographic authentication (multiple options)
-->
    </Group>
    <Group id="audit">
      <title>Audit Daemon</title>
      <description>
The Linux Audit system provides a way to track security-relevant information on your system. Based on pre-configured rules, Audit generates log entries to record as much information about the events that are happening on your system as possible. This information is crucial for mission-critical environments to determine the violator of the security policy and the actions they performed. Audit does not provide additional security to your system; rather, it can be used to discover violations of security policies used on your system. These violations can further be prevented by additional security measures such as SELinux.
</description>
      <Rule id="service_auditd_enabled" severity="medium">
        <title>Enable the Audit Daemon</title>
        <description>
          <systemd-service-macro enable="true" service="audit"/>
        </description>
        <ocil>
          <systemd-check-macro enable="true" service="audit"/>
        </ocil>
        <rationale>Enabling the <tt>auditd</tt> service ensures that The Linux Audit system is capable
to watch the system and generate log entries.
</rationale>
        <oval id="service_auditd_enabled"/>
        <ref nist="AU-8(1)" disa="160"/>
      </Rule>
    </Group>
    <Group id="ftp">
      <title>FTP Server</title>
      <description>FTP is a common method for allowing remote access to
files. Like telnet, the FTP protocol is unencrypted, which means
that passwords and other data transmitted during the session can be
captured and that the session is vulnerable to hijacking.
Therefore, running the FTP server software is not recommended.
<br/><br/>
However, there are some FTP server configurations which may
be appropriate for some environments, particularly those which
allow only read-only anonymous access as a means of downloading
data available to the public.</description>
      <Group id="disabling_vsftpd">
        <title>Disable vsftpd if Possible</title>
        <Rule id="disable_vsftpd">
          <title>Disable vsftpd Service</title>
          <description>
            <systemd-service-macro enable="false" service="vsftpd"/>
          </description>
          <ocil>
            <systemd-check-macro enable="false" service="vsftpd"/>
          </ocil>
          <rationale>
Running FTP server software provides a network-based avenue
of attack, and should be disabled if not needed.
Furthermore, the FTP protocol is unencrypted and creates
a risk of compromising sensitive information.
</rationale>
          <!--oval id="service_vsftpd_disabled" /-->
          <ref nist="CM-7" disa="1436"/>
        </Rule>
        <Rule id="uninstall_vsftpd">
          <title>Uninstall vsftpd Package</title>
          <description>
            <dnf-macro install="false" package="vsftpd"/>
          </description>
          <ocil>
            <package-check-macro package="vsftpd"/>
          </ocil>
          <rationale>
Removing the vsftpd package decreases the risk of its
accidental activation.
</rationale>
          <!--oval id="package_vsftpd_removed" /-->
          <ref nist="CM-7" disa="1436"/>
        </Rule>
      </Group>
      <!-- <Group id="disabling_vsftpd"> -->
      <Group id="ftp_use_vsftpd">
        <title>Use vsftpd to Provide FTP Service if Necessary</title>
        <Rule id="package_vsftpd_installed">
          <title>Install vsftpd Package</title>
          <description>If this machine must operate as an FTP server, install the <tt>vsftpd</tt> package via the standard channels.
<pre>$ sudo dnf install vsftpd</pre>
</description>
          <rationale>After Red Hat Enterprise Linux 2.1, Red Hat switched from distributing wu-ftpd with Red Hat Enterprise Linux to distributing vsftpd. For security
and for consistency with future Red Hat releases, the use of vsftpd is recommended.</rationale>
          <oval id="package_vsftpd_installed"/>
          <ref nist="CM-7"/>
        </Rule>
      </Group>
      <!-- <Group id="ftp_use_vsftpd"> -->
      <Group id="ftp_configure_vsftpd">
        <title>Use vsftpd to Provide FTP Service if Necessary</title>
        <description>The primary vsftpd configuration file is
<tt>/etc/vsftpd.conf</tt>, if that file exists, or
<tt>/etc/vsftpd/vsftpd.conf</tt> if it does not. 
</description>
        <Rule id="ftp_log_transactions">
          <title>Enable Logging of All FTP Transactions</title>
          <description>Add or correct the following configuration options within the <tt>vsftpd</tt>
configuration file, located at <tt>/etc/vsftpd/vsftpd.conf</tt>:
<pre>xferlog_enable=YES
xferlog_std_format=NO
log_ftp_protocol=YES</pre>
</description>
          <ocil clause="xferlog_enable is missing, or is not set to yes">
Find if logging is applied to the FTP daemon.
<br/><br/>
Procedures:
<br/><br/>
If vsftpd is started by xinetd the following command will indicate the xinetd.d startup file:
<pre># grep vsftpd /etc/xinetd.d/*</pre>
<pre># grep server_args <i>vsftpd xinetd.d startup file</i></pre>
This will indicate the vsftpd config file used when starting through xinetd.
If the <i>server_args</i> line is missing or does not include the vsftpd configuration file, then the default config file (/etc/vsftpd/vsftpd.conf) is used.
<pre># grep xferlog_enable <i>vsftpd config file</i></pre>
</ocil>
          <rationale>To trace malicious activity facilitated by the FTP service, it must be configured to ensure that all commands sent to
the FTP server are logged using the verbose vsftpd log
format. The default vsftpd log file is <tt>/var/log/vsftpd.log</tt>.</rationale>
          <warning category="general">If verbose logging to <tt>vsftpd.log</tt> is done, sparse logging of downloads to <tt>/var/log/xferlog</tt> will not also occur. However, the information about what files were downloaded is included in the information logged to <tt>vsftpd.log</tt></warning>
          <oval id="ftp_log_transactions"/>
          <!--<ref nist="CM-7" /> -->
        </Rule>
        <Rule id="ftp_present_banner" severity="medium">
          <title>Create Warning Banners for All FTP Users</title>
          <description>Edit the vsftpd configuration file, which resides at <tt>/etc/vsftpd/vsftpd.conf</tt>
by default. Add or correct the following configuration options:
<pre>banner_file=/etc/issue</pre>
</description>
          <rationale>This setting will cause the system greeting banner to be used for FTP connections as well.</rationale>
          <ref disa="48"/>
          <oval id="ftp_present_banner"/>
          <!--<ref nist="CM-7" /> -->
          <ocil clause="it does not">
If FTP services are not installed, this is not applicable.
<br/><br/>
To verify this configuration, run the following command:
<pre>grep "banner_file" /etc/vsftpd/vsftpd.conf</pre>

The output should show the value of <tt>banner_file</tt> is set to <tt>/etc/issue</tt>, an example of which is shown below:
<pre># grep "banner_file" /etc/vsftpd/vsftpd.conf
banner_file=/etc/issue</pre>
</ocil>
        </Rule>
        <Group id="ftp_restrict_users">
          <title>Restrict the Set of Users Allowed to Access FTP</title>
          <description>This section describes how to disable non-anonymous (password-based) FTP logins, or, if it is not possible to
do this entirely due to legacy applications, how to restrict insecure FTP login to only those users who have an
identified need for this access.</description>
          <Rule id="ftp_restrict_to_anon">
            <title>Restrict Access to Anonymous Users if Possible</title>
            <description>Is there a mission-critical reason for users to transfer files to/from their own accounts using FTP, rather than
using a secure protocol like SCP/SFTP? If not, edit the vsftpd configuration file. Add or correct the following configuration option:
<pre>local_enable=NO</pre>
If non-anonymous FTP logins are necessary, follow the guidance in the remainder of this section to secure
these logins as much as possible.</description>
            <rationale>The use of non-anonymous FTP logins is strongly discouraged. Since SSH clients and servers are widely available, and since SSH provides support for a transfer mode which resembles FTP in user interface, there is no good reason to allow password-based FTP access. </rationale>
            <!--<oval id="ftp_restrict_to_anon" />-->
            <!--<ref nist="CM-7" /> -->
          </Rule>
          <Group id="ftp_limit_users">
            <title>Limit Users Allowed FTP Access if Necessary</title>
            <description>If there is a mission-critical reason for users to access their accounts via the insecure FTP protocol, limit the set of users who are allowed this access. Edit the vsftpd configuration file. Add or correct the following configuration options:
<pre>userlist_enable=YES
userlist_file=/etc/vsftp.ftpusers
userlist_deny=NO</pre>
Edit the file <tt>/etc/vsftp.ftpusers</tt>. For each user USERNAME who should be allowed to access the system via FTP, add a line containing that user's name:
<pre>USERNAME</pre>
If anonymous access is also required, add the anonymous usernames to <tt>/etc/vsftp.ftpusers</tt> as well.
<pre>anonymous
ftp</pre>
</description>
            <rationale>Historically, the file <tt>/etc/ftpusers</tt> contained a list of users who were not allowed to access the system via FTP. It was used to prevent system users such as the root user from logging in via the insecure FTP protocol. However, when the configuration option <tt>userlist deny=NO</tt> is set, vsftpd interprets ftpusers as the set of users who are allowed to login via FTP. Since it should be possible for most users to access their accounts via secure protocols, it is recommended that this setting be used, so that non-anonymous FTP access can be limited to legacy users who have been explicitly identified.</rationale>
            <!--<oval id="ftp_limit_users" />-->
            <!--<ref nist="CM-7" /> -->
          </Group>
        </Group>
        <!-- <Group id="ftp_restrict_users"> -->
        <Rule id="ftp_disable_uploads">
          <title>Disable FTP Uploads if Possible</title>
          <description>Is there a mission-critical reason for users to upload files via FTP? If not,
edit the vsftpd configuration file to add or correct the following configuration options:
<pre>write_enable=NO</pre>
If FTP uploads are necessary, follow the guidance in the remainder of this section to secure these transactions
as much as possible.</description>
          <rationale>Anonymous FTP can be a convenient way to make files available for universal download. However, it is less
common to have a need to allow unauthenticated users to place files on the FTP server. If this must be done, it
is necessary to ensure that files cannot be uploaded and downloaded from the same directory.
</rationale>
          <!--<oval id="ftp_disable_uploads" />-->
          <!--<ref nist="CM-7" /> -->
        </Rule>
        <Rule id="ftp_home_partition">
          <title>Place the FTP Home Directory on its Own Partition</title>
          <description>By default, the anonymous FTP root is the home directory of the FTP user account. The df command can
be used to verify that this directory is on its own partition.</description>
          <rationale>If there is a mission-critical reason for anonymous users to upload files, precautions must be taken to prevent
these users from filling a disk used by other services.</rationale>
          <!--<oval id="ftp_home_partition" />-->
          <!--<ref nist="CM-7" /> -->
        </Rule>
        <Group id="ftp_configure_firewall">
          <title>Configure Firewalls to Protect the FTP Server</title>
          <description>By default, <tt>iptables</tt>
blocks access to the ports used by the web server.
<iptables-desc-macro allow="true" proto="tcp" port="21"/>
Edit the file <tt>/etc/sysconfig/iptables-config</tt>. Ensure that the space-separated list of modules contains
the FTP connection tracking module:
<pre>IPTABLES_MODULES="ip_conntrack_ftp"</pre></description>
          <rationale>These settings configure iptables to allow connections to an FTP server. The first line allows initial connections
to the FTP server port.
FTP is an older protocol which is not very compatible with firewalls. During the initial FTP dialogue, the client
and server negotiate an arbitrary port to be used for data transfer. The <tt>ip_conntrack_ftp</tt>  module is used by
iptables to listen to that dialogue and allow connections to the data ports which FTP negotiates. This allows an
FTP server to operate on a machine which is running a firewall.</rationale>
          <!--<oval id="ftp_configure_firewall" />-->
          <!--<ref nist="CM-7" /> -->
        </Group>
      </Group>
      <!-- <Group id="ftp_configure_vsftpd"> -->
    </Group>
    <!-- <Group id="ftp"> -->
    <Group id="snmp">
      <title>SNMP Server</title>
      <description>The Simple Network Management Protocol allows
administrators to monitor the state of network devices, including
computers. Older versions of SNMP were well-known for weak
security, such as plaintext transmission of the community string
(used for authentication) and usage of easily-guessable
choices for the community string.</description>
      <Group id="disabling_snmp_service">
        <title>Disable SNMP Server if Possible</title>
        <description>The system includes an SNMP daemon that allows for its remote
monitoring, though it not installed by default. If it was installed and
activated but is not needed, the software should be disabled and removed.
</description>
        <Rule id="disable_snmpd">
          <title>Disable <tt>snmpd</tt> Service</title>
          <description>
            <systemd-service-macro enable="false" service="snmpd"/>
          </description>
          <ocil>
            <systemd-check-macro enable="false" service="snmpd"/>
          </ocil>
          <rationale>
Running SNMP software provides a network-based avenue of attack, and
should be disabled if not needed.
</rationale>
          <!--oval id="service_snmpd_disabled" /-->
        </Rule>
        <Rule id="package_net-snmp_removed">
          <title>Uninstall <tt>net-snmp</tt> Package</title>
          <description>The <tt>net-snmp</tt> package provides the snmpd service.
<dnf-macro install="false" package="net-snmp"/>
</description>
          <ocil>
            <package-check-macro package="net-snmp"/>
          </ocil>
          <rationale>
If there is no need to run SNMP server software,
removing the package provides a safeguard against its
activation.
</rationale>
          <oval id="package_net-snmp_removed"/>
        </Rule>
      </Group>
      <!-- <Group id="disabling_snmp_service"> -->
      <Group id="snmp_configure_server">
        <title>Configure SNMP Server if Necessary</title>
        <description>If it is necessary to run the snmpd agent on the system, some best
practices should be followed to minimize the security risk from the
installation. The multiple security models implemented by SNMP cannot be fully
covered here so only the following general configuration advice can be offered:
<ul><li>use only SNMP version 3 security models and enable the use of authentication and encryption</li><li>write access to the MIB (Management Information Base) should be allowed only if necessary</li><li>all access to the MIB should be restricted following a principle of least privilege</li><li>network access should be limited to the maximum extent possible including restricting to expected network
addresses both in the configuration files and in the system firewall rules</li><li>ensure SNMP agents send traps only to, and accept SNMP queries only from, authorized management
stations</li><li>ensure that permissions on the <tt>snmpd.conf</tt> configuration file (by default, in <tt>/etc/snmp</tt>) are 640 or more restrictive</li><li>ensure that any MIB files' permissions are also 640 or more restrictive</li></ul>
</description>
        <Rule id="snmpd_use_newer_protocol" severity="medium">
          <title>Configure SNMP Service to Use Only SNMPv3 or Newer </title>
          <description>
Edit <tt>/etc/snmp/snmpd.conf</tt>, removing any references to <tt>rocommunity</tt>, <tt>rwcommunity</tt>, or <tt>com2sec</tt>.  
Upon doing that, restart the SNMP service:
<pre># service snmpd restart</pre>
</description>
          <ocil clause="there is output">
To ensure only SNMPv3 or newer is used, run the following command:
<pre># grep 'rocommunity\|rwcommunity\|com2sec' /etc/snmp/snmpd.conf | grep -v "^#"</pre>
There should be no output.
</ocil>
          <rationale>
Earlier versions of SNMP are considered insecure, as they potentially allow 
unauthorized access to detailed system management information.
</rationale>
          <oval id="snmpd_use_newer_protocol"/>
        </Rule>
        <Rule id="snmpd_not_default_password" severity="medium">
          <title>Ensure Default Password Is Not Used</title>
          <description>
Edit <tt>/etc/snmp/snmpd.conf</tt>, remove default community string <tt>public</tt>.  
Upon doing that, restart the SNMP service:
<pre># service snmpd restart</pre>
</description>
          <ocil clause="there is output">
To ensure the default password is not set, run the following command:
<pre># grep -v "^#" /etc/snmp/snmpd.conf| grep public</pre>
There should be no output.
</ocil>
          <rationale>
Presence of the default SNMP password enables querying of different system
aspects and could result in unauthorized knowledge of the system.
</rationale>
          <oval id="snmpd_not_default_password"/>
        </Rule>
      </Group>
    </Group>
    <!-- <Group id="snmp"> -->
    <Group id="nfs_and_rpc">
      <title>NFS and RPC</title>
      <description>The Network File System is a popular distributed filesystem for
the Unix environment, and is very widely deployed.  This section discusses the
circumstances under which it is possible to disable NFS and its dependencies,
and then details steps which should be taken to secure
NFS's configuration. This section is relevant to machines operating as NFS
clients, as well as to those operating as NFS servers.
</description>
      <Group id="disabling_nfs">
        <title>Disable All NFS Services if Possible</title>
        <description>If there is not a reason for the system to operate as either an
NFS client or an NFS server, follow all instructions in this section to disable
subsystems required by NFS.
</description>
        <warning category="general">The steps in this section will prevent a machine
from operating as either an NFS client or an NFS server. Only perform these
steps on machines which do not need NFS at all.</warning>
        <Group id="disabling_nfs_services">
          <title>Disable Services Used Only by NFS</title>
          <description>If NFS is not needed, disable the NFS client daemons nfslock, rpcgssd, and rpcidmapd.
<br/><br/>
All of these daemons run with elevated privileges, and many listen for network
connections. If they are not needed, they should be disabled to improve system
security posture.</description>
          <Rule id="service_nfslock_disabled">
            <title>Disable Network File System Lock Service (nfslock)</title>
            <description>The Network File System Lock (nfslock) service starts the required
remote procedure call (RPC) processes which allow clients to lock files on the
server. If the local machine is not configured to mount NFS filesystems then
this service should be disabled.
<systemd-service-macro enable="false" service="nfslock"/>
</description>
            <!--oval id="service_nfslock_disabled" /-->
          </Rule>
          <Rule id="service_rpcgssd_disabled">
            <title>Disable Secure RPC Client Service (rpcgssd)</title>
            <description>
The rpcgssd service manages RPCSEC GSS contexts required to secure protocols
that use RPC (most often Kerberos and NFS). The rpcgssd service is the
client-side of RPCSEC GSS. If the system does not require secure RPC then this
service should be disabled.
<systemd-service-macro enable="false" service="rpcgssd"/>
</description>
            <!--oval id="service_rpcgssd_disabled" /-->
          </Rule>
          <Rule id="service_rpcidmapd_disabled">
            <title>Disable RPC ID Mapping Service (rpcidmapd)</title>
            <description>The rpcidmapd service is used to map user names and groups to UID
and GID numbers on NFSv4 mounts. If NFS is not in use on the local system then
this service should be disabled.
<systemd-service-macro enable="false" service="rpcidmapd"/>
</description>
            <!--oval id="service_rpcidmapd_disabled" /-->
          </Rule>
        </Group>
        <Group id="disabling_netfs">
          <title>Disable netfs if Possible</title>
          <description>To determine if any network filesystems handled by netfs are
currently mounted on the system execute the following command:
<pre># mount -t nfs,nfs4,smbfs,cifs,ncpfs</pre>
If the command did not return any output then disable netfs.
</description>
          <Rule id="service_netfs_disabled">
            <title>Disable Network File Systems (netfs)</title>
            <description>The netfs script manages the boot-time mounting of several types
of networked filesystems, of which NFS and Samba are the most common. If these
filesystem types are not in use, the script can be disabled, protecting the
system somewhat against accidental or malicious changes to <tt>/etc/fstab</tt>
and against flaws in the netfs script itself.
<systemd-service-macro enable="false" service="netfs"/>
</description>
            <!--oval id="service_netfs_disabled" /-->
          </Rule>
        </Group>
      </Group>
      <Group id="nfs_configuring_all_machines">
        <title>Configure All Machines which Use NFS</title>
        <description>The steps in this section are appropriate for all machines which
run NFS, whether they operate as clients or as servers.</description>
        <Group id="nfs_client_or_server_not_both">
          <title>Make Each Machine a Client or a Server, not Both</title>
          <description>If NFS must be used, it should be deployed in the simplest
configuration possible to avoid maintainability problems which may lead to
unnecessary security exposure. Due to the reliability and security problems
caused by NFS (specially NFSv3 and NFSv2), it is not a good idea for machines
which act as NFS servers to also mount filesystems via NFS. At the least,
crossed mounts (the situation in which each of two servers mounts a filesystem
from the other) should never be used.
</description>
        </Group>
        <!-- <Group id="nfs_client_or_server_not_both"> -->
        <Group id="nfs_configure_fixed_ports">
          <title>Configure NFS Services to Use Fixed Ports (NFSv3 and NFSv2)</title>
          <description>Firewalling should be done at each host and at the border
firewalls to protect the NFS daemons from remote access, since NFS servers
should never be accessible from outside the organization. However, by default
for NFSv3 and NFSv2, the RPC Bind service assigns each NFS service to a port
dynamically at service startup time. Dynamic ports cannot be protected by port
filtering firewalls such as iptables.
<br/><br/>
Therefore, restrict each service to always use a given port, so that
firewalling can be done effectively. Note that, because of the way RPC is
implemented, it is not possible to disable the RPC Bind service even if ports
are assigned statically to all RPC services.
<br/><br/>
In NFSv4, the mounting and locking protocols have been incorporated into the
protocol, and the server listens on the the well-known TCP port 2049. As such,
NFSv4 does not need to interact with the <tt>rpcbind, lockd, and rpc.statd</tt>
daemons, which can and should be disabled in a pure NFSv4 environment. The
<tt>rpc.mountd</tt> daemon is still required on the NFS server to setup
exports, but is not involved in any over-the-wire operations.
</description>
          <Rule id="nfs_fixed_lockd_tcp_port">
            <title>Configure <tt>lockd</tt> to use static TCP port</title>
            <description>Configure the <tt>lockd</tt> daemon to use a static TCP port as
opposed to letting the RPC Bind service dynamically assign a port. Edit the
file <tt>/etc/sysconfig/nfs</tt>. Add or correct the following line:
<pre>LOCKD_TCPPORT=lockd-port</pre>
Where <tt>lockd-port</tt> is a port which is not used by any other service on
your network. 
</description>
            <rationale>
Restrict service to always use a given port, so that firewalling can be done
effectively.
</rationale>
          </Rule>
          <Rule id="nfs_fixed_lockd_udp_port">
            <title>Configure <tt>lockd</tt> to use static UDP port</title>
            <description>Configure the <tt>lockd</tt> daemon to use a static UDP port as
opposed to letting the RPC Bind service dynamically assign a port. Edit the
file <tt>/etc/sysconfig/nfs</tt>. Add or correct the following line:
<pre>LOCKD_UDPPORT=lockd-port</pre>
Where <tt>lockd-port</tt> is a port which is not used by any other service on
your network.
</description>
            <rationale> Restricting services to always use a given port enables firewalling
to be done more effectively.
</rationale>
          </Rule>
          <Rule id="nfs_fixed_statd_port">
            <title>Configure <tt>statd</tt> to use static port</title>
            <description>Configure the <tt>statd</tt> daemon to use a static port as
opposed to letting the RPC Bind service dynamically assign a port. Edit the
file <tt>/etc/sysconfig/nfs</tt>. Add or correct the following line:
<pre>STATD_PORT=statd-port</pre>
Where <tt>statd-port</tt> is a port which is not used by any other service on your network. 
</description>
            <rationale> Restricting services to always use a given port enables firewalling
to be done more effectively.
</rationale>
          </Rule>
          <Rule id="nfs_fixed_mountd_port">
            <title>Configure <tt>mountd</tt> to use static port</title>
            <description>Configure the <tt>mountd</tt> daemon to use a static port as
opposed to letting the RPC Bind service dynamically assign a port. Edit the
file <tt>/etc/sysconfig/nfs</tt>. Add or correct the following line:
<pre>MOUNTD_PORT=statd-port</pre>
Where <tt>mountd-port</tt> is a port which is not used by any other service on your network. 
</description>
            <rationale> Restricting services to always use a given port enables firewalling
to be done more effectively.
</rationale>
          </Rule>
        </Group>
        <!-- <Group id="nfs_configure_fixed_ports"> -->
      </Group>
      <!-- <Group id="nfs_configuring_all_machines"> -->
      <Group id="nfs_configuring_clients">
        <title>Configure NFS Clients</title>
        <description>The steps in this section are appropriate for machines which operate as NFS clients.</description>
        <Group id="disabling_nfsd">
          <title>Disable NFS Server Daemons</title>
          <description>
There is no need to run the NFS server daemons <tt>nfs</tt> and
<tt>rpcsvcgssd</tt> except on a small number of properly secured machines
designated as NFS servers. Ensure that these daemons are turned off on
clients.</description>
          <Rule id="nfs_no_anonymous">
            <title>Specify UID and GID for Anonymous NFS Connections</title>
            <description>To specify the UID and GID for remote root users, edit the <tt>/etc/exports</tt> file and add the following for each export:
<pre>
anonuid=-1
anongid=-1
</pre>
</description>
            <rationale>Specifying the anonymous UID and GID as -1 ensures that the remote root user is mapped to a local account which has no permissions on the system.</rationale>
          </Rule>
          <Rule id="service_nfs_disabled">
            <title>Disable Network File System (nfs)</title>
            <description>The Network File System (NFS) service allows remote hosts to mount
and interact with shared filesystems on the local machine. If the local machine
is not designated as a NFS server then this service should be disabled.
<systemd-service-macro enable="false" service="nfs"/>
</description>
            <ocil clause="it does not">
It is prudent to ensure the <tt>nfs</tt> service is disabled in system boot, as well as 
not currently running.  First, run the following to verify the service is stopped:
<pre>$ service nfs status</pre>
If the service is stopped or disabled, it will return the following:
<pre>rpc.svcgssd is stopped
rpc.mountd is stopped
nfsd is stopped
rpc.rquotad is stopped</pre>
To verify that the <tt>nfs</tt> service is disabled, run the following command:
<pre>$ chkconfig --list nfs</pre>
If properly configured, the output should look like:
<pre>nfs            	0:off	1:off	2:off	3:off	4:off	5:off	6:off</pre>
</ocil>
            <rationale>Unnecessary services should be disabled to decrease the attack surface of the system.</rationale>
            <!--oval id="service_nfs_disabled" /-->
          </Rule>
          <Rule id="service_rpcsvcgssd_disabled">
            <title>Disable Secure RPC Server Service (rpcsvcgssd)</title>
            <description>The rpcsvcgssd service manages RPCSEC GSS contexts required to
secure protocols that use RPC (most often Kerberos and NFS). The rpcsvcgssd
service is the server-side of RPCSEC GSS. If the system does not require secure
RPC then this service should be disabled.
<systemd-service-macro enable="false" service="rpcsvcgssd"/>
</description>
            <ocil>
              <systemd-check-macro enable="false" service="rpcsvcgssd"/>
            </ocil>
            <rationale>Unnecessary services should be disabled to decrease the attack surface of the system.</rationale>
            <!--oval id="service_rpcsvcgssd_disabled" /-->
          </Rule>
        </Group>
        <Group id="mounting_remote_filesystems">
          <title>Mount Remote Filesystems with Restrictive Options</title>
          <description>Edit the file <tt>/etc/fstab</tt>. For each filesystem whose type
(column 3) is <tt>nfs</tt> or <tt>nfs4</tt>, add the text
<tt>,nodev,nosuid</tt> to the list of mount options in column 4. If
appropriate, also add <tt>,noexec</tt>.
<br/><br/>
See the section titled "Restrict Partition Mount Options" for a description of
the effects of these options. In general, execution of files mounted via NFS
should be considered risky because of the possibility that an adversary could
intercept the request and substitute a malicious file. Allowing setuid files to
be executed from remote servers is particularly risky, both for this reason and
because it requires the clients to extend root-level trust to the NFS
server.</description>
          <Rule id="use_nodev_option_on_nfs_mounts" severity="medium">
            <title>Mount Remote Filesystems with nodev</title>
            <description>
              <mount-desc-macro option="nodev" part="any NFS mounts"/>
            </description>
            <ocil clause="the setting does not show">
To verify the <tt>nodev</tt> option is configured for all NFS mounts, run the following command:
<pre>$ mount  | grep nfs</pre>
All NFS mounts should show the <tt>nodev</tt> setting in parentheses.  This is not applicable if NFS is 
not implemented.
</ocil>
            <rationale>Legitimate device files should only exist in the /dev directory. NFS mounts
should not present device files to users.</rationale>
            <!--oval id="mount_option_nodev_remote_filesystems" /-->
          </Rule>
          <Rule id="use_nosuid_option_on_nfs_mounts" severity="medium">
            <title>Mount Remote Filesystems with nosuid</title>
            <description>
              <mount-desc-macro option="nosuid" part="any NFS mounts"/>
            </description>
            <ocil clause="the setting does not show">
To verify the <tt>nosuid</tt> option is configured for all NFS mounts, run the following command:
<pre>$ mount  | grep nfs</pre>
All NFS mounts should show the <tt>nosuid</tt> setting in parentheses.  This is not applicable if NFS is 
not implemented.
</ocil>
            <rationale>NFS mounts should not present suid binaries to users. Only vendor-supplied suid executables
should be installed to their default location on the local filesystem.</rationale>
            <!--oval id="mount_option_nosuid_remote_filesystems" /-->
          </Rule>
        </Group>
      </Group>
      <Group id="nfs_configuring_servers">
        <title>Configure NFS Servers</title>
        <description>The steps in this section are appropriate for machines which operate as NFS servers.</description>
        <Group id="configure_exports_restrictively">
          <title>Configure the Exports File Restrictively</title>
          <description>Linux's NFS implementation uses the file <tt>/etc/exports</tt> to control what filesystems
and directories may be accessed via NFS. (See the <tt>exports(5)</tt> manpage for more information about the
format of this file.)
<br/><br/>
The syntax of the <tt>exports</tt> file is not necessarily checked fully on reload, and syntax errors
can leave your NFS configuration more open than intended. Therefore, exercise caution when modifying
the file.
<br/><br/>
The syntax of each line in <tt>/etc/exports</tt> is:
<pre>/DIR	host1(opt1,opt2) host2(opt3)</pre>
where <tt>/DIR</tt> is a directory or filesystem to export, <tt>hostN</tt> is an IP address, netblock,
hostname, domain, or netgroup to which to export, and <tt>optN</tt> is an option.
</description>
        </Group>
        <!-- configure_exports_restrictively -->
        <Group id="use_acl_enforce_auth_restrictions">
          <title>Use Access Lists to Enforce Authorization Restrictions</title>
          <description>When configuring NFS exports, ensure that each export line in <tt>/etc/exports</tt> contains
a list of hosts which are allowed to access that export. If no hosts are specified on an export line,
then that export is available to any remote host which requests it. All lines of the exports file should
specify the hosts (or subnets, if needed) which are allowed to access the exported directory, so that
unknown or remote hosts will be denied.
<br/><br/>
Authorized hosts can be specified in several different formats:
<ul><li>Name or alias that is recognized by the resolver</li><li>Fully qualified domain name</li><li>IP address</li><li>IP subnets in the format <tt>address/netmask</tt> or <tt>address/CIDR</tt></li></ul>
</description>
        </Group>
        <!-- use_acl_enforce_auth_restrictions -->
        <Group id="export_filesystems_read_only">
          <title>Export Filesystems Read-Only if Possible</title>
          <description>If a filesystem is being exported so that users can view the files in a convenient
fashion, but there is no need for users to edit those files, exporting the filesystem read-only
removes an attack vector against the server. The default filesystem export mode is <tt>ro</tt>,
so do not specify <tt>rw</tt> without a good reason.
</description>
        </Group>
        <!-- export_filesystems_read_only -->
        <Rule id="use_root_squashing_all_exports">
          <title>Use Root-Squashing on All Exports</title>
          <description>If a filesystem is exported using root squashing, requests from root on the client
are considered to be unprivileged (mapped to a user such as nobody). This provides some mild
protection against remote abuse of an NFS server. Root squashing is enabled by default, and
should not be disabled.
<br/><br/>
Ensure that no line in <tt>/etc/exports</tt> contains the option <tt>no_root_squash</tt>.
</description>
          <rationale>If the NFS server allows root access to local file systems from remote hosts, this
access could be used to compromise the system.
</rationale>
        </Rule>
        <Rule id="restrict_nfs_clients_to_privileged_ports">
          <title>Restrict NFS Clients to Privileged Ports</title>
          <description>By default, the server NFS implementation requires that all client requests be made
from ports less than 1024. If your organization has control over machines connected to its
network, and if NFS requests are prohibited at the border firewall, this offers some protection
against malicious requests from unprivileged users. Therefore, the default should not be changed.
<br/><br/>
To ensure that the default has not been changed, ensure no line in
<tt>/etc/exports</tt> contains the option <tt>insecure</tt>.
</description>
          <rationale>Allowing client requests to be made from ports higher than 1024 could allow a unprivileged
user to initiate an NFS connection. If the unprivileged user account has been compromised, an
attacker could gain access to data on the NFS server.</rationale>
        </Rule>
        <Rule id="no_insecure_locks_exports" severity="medium">
          <title>Ensure Insecure File Locking is Not Allowed</title>
          <description>By default the NFS server requires secure file-lock requests,
which require credentials from the client in order to lock a file. Most NFS
clients send credentials with file lock requests, however, there are a few
clients that do not send credentials when requesting a file-lock, allowing the
client to only be able to lock world-readable files. To get around this, the
<tt>insecure_locks</tt> option can be used so these clients can access the
desired export. This poses a security risk by potentially allowing the client
access to data for which it does not have authorization.
Remove any instances of the 
<tt>insecure_locks</tt> option from the file <tt>/etc/exports</tt>.
</description>
          <ocil clause="there is output">
To verify insecure file locking has been disabled, run the following command:
<pre># grep insecure_locks /etc/exports</pre>
</ocil>
          <rationale>Allowing insecure file locking could allow for sensitive data to be
viewed or edited by an unauthorized user.
</rationale>
          <oval id="no_insecure_locks_exports"/>
          <ref disa="764"/>
        </Rule>
      </Group>
      <!-- nfs_configuring_servers -->
    </Group>
    <Group id="xwindows">
      <title>X Window System</title>
      <description>The X Window System implementation included with the
system is called X.org.</description>
      <Group id="disabling_xwindows">
        <title>Disable X Windows</title>
        <description>Unless there is a mission-critical reason for the
system to run a graphical user interface, ensure X is not set to start
automatically at boot and remove the X Windows software packages.
There is usually no reason to run X Windows
on a dedicated server machine, as it increases the system's attack surface and consumes
system resources. Administrators of server systems should instead login via
SSH or on the text console.</description>
        <Rule id="xwindows_runlevel_setting">
          <title>Disable X Windows Startup By Setting Default Target</title>
          <description>Setting the system's default target to multi-user will prevent
automatic startup of the X server. To do so, run:
<pre>$ systemctl set-default multi-user.target</pre>
You should see the following output:
<pre>rm '/etc/systemd/system/default.target'
ln -s '/usr/lib/systemd/system/multi-user.target' '/etc/systemd/system/default.target'</pre>
</description>
          <ocil clause="it does not">
To verify the default target is multi-user, run the following command:
<pre>$ systemctl get-default</pre>
The output should show the following:
<pre>multi-user.target</pre>
</ocil>
          <rationale>Unnecessary services should be disabled to decrease the attack surface of the system.</rationale>
          <oval id="xwindows_runlevel_setting"/>
          <ref nist="AC-3" disa="366"/>
        </Rule>
        <Rule id="package_xorg-x11-server-common_removed">
          <title>Remove the X Windows Package Group</title>
          <description>Removing all packages which constitute the X Window System
ensures users or malicious software cannot start X.
To do so, run the following command:
<pre>$ sudo dnf groupremove "X Window System"</pre>
</description>
          <ocil clause="it is not">
To ensure the X Windows package group is removed, run the following command:
<pre>$ rpm -qi xorg-x11-server-common</pre>
The output should be:
<pre>package xorg-x11-server-common is not installed</pre>
</ocil>
          <rationale>Unnecessary packages should not be installed to decrease the attack surface of the system.</rationale>
          <oval id="package_xorg-x11-server-common_removed"/>
          <ref disa="366" cis="3.2"/>
        </Rule>
        <!-- to add: guidance in /etc/gdm/custom.conf for xdmcp disable, tcplisten disable -->
      </Group>
    </Group>
  </Group>
</Benchmark>
